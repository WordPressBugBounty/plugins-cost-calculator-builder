{"version":3,"file":"useMultiOptionsFieldShared-DxZVIgv2.js","sources":["../../src/widget/actions/fields/composable/useMultiOptionsFieldShared.ts"],"sourcesContent":["import { computed, ref, toRefs } from \"vue\";\nimport { IMultiOptionsField, IOptions } from \"@/widget/shared/types/fields\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore.ts\";\nimport { useSingleField } from \"@/widget/actions/fields/composable/useSingleField.ts\";\nimport { useConditionsStore } from \"@/widget/app/providers/stores/conditionsStore.ts\";\nimport { useFields } from \"@/widget/actions/fields/composable/useFields.ts\";\nimport { usePageConditions } from \"@/widget/actions/conditions/composable/usePageConditions.ts\";\n\nconst fieldsInstance = useFields();\nconst pageConditions = usePageConditions();\n\nexport function useMultiOptionsFieldShared(props: {\n  field: IMultiOptionsField;\n}) {\n  const { field } = toRefs(props);\n  const conditionsStore = useConditionsStore();\n\n  const fieldStore = useFieldsStore();\n  const singleFieldInstance = useSingleField();\n\n  const style = ref<string>(\"default\");\n  const selectedOptions = ref<IOptions[]>([]);\n\n  const isRequired = computed(() => fieldStore.checkFieldRequired(field.value));\n  const fieldSelectedOption = computed(() => field.value.selectedOption || []);\n\n  const fieldValue = computed(() =>\n    fieldSelectedOption.value?.map((f: IOptions) => f.optionValue),\n  );\n\n  const getKey = computed(() => {\n    return (\n      fieldValue.value\n        ?.map((optionValue: string) => {\n          return optionValue.split(\"_\")[1] || 9999;\n        })\n        .join(\"_\") || 9999\n    );\n  });\n\n  const updateValue = (options: IOptions[]) => {\n    field.value.selectedOption = options;\n\n    let value = 0;\n    if (Array.isArray(options)) {\n      for (const option of options) {\n        let splitValues: string[] = option.optionValue?.toString()?.split(\"_\");\n        const originalValue: number = +splitValues[0];\n\n        if (\n          !isNaN(originalValue) &&\n          field.value.summaryView !== \"show_label_not_calculable\"\n        ) {\n          value += originalValue;\n        }\n      }\n    }\n\n    field.value.value = value;\n    field.value.displayValue =\n      singleFieldInstance.getMultipleOptionsFieldDisplayView(field.value);\n\n    fieldStore.updateField(field.value.alias, field.value);\n    conditionsStore.applyConditionForField(field.value.alias);\n\n    if (\n      fieldsInstance.getPageBreakEnabled() &&\n      fieldsInstance.getActivePage().action === \"not_skip\"\n    ) {\n      pageConditions.checkPageFieldsConditions();\n    }\n  };\n\n  const applyChanges = (value: string): void => {\n    selectedOptions.value = [];\n    const values = value.split(\",\");\n\n    for (const v of values) {\n      const option = field.value.options.find(\n        (f: IOptions) => f.optionValue === v,\n      );\n\n      if (option) {\n        selectedOptions.value.push(option);\n      }\n    }\n\n    updateValue(selectedOptions.value);\n  };\n\n  return {\n    style,\n    selectedOptions,\n    updateValue,\n    applyChanges,\n    isRequired,\n    fieldValue,\n    getKey,\n  };\n}\n"],"names":["fieldsInstance","useFields","pageConditions","usePageConditions","useMultiOptionsFieldShared","props","field","toRefs","conditionsStore","useConditionsStore","fieldStore","useFieldsStore","singleFieldInstance","useSingleField","style","ref","selectedOptions","isRequired","computed","fieldSelectedOption","fieldValue","_a","f","getKey","optionValue","updateValue","options","value","option","originalValue","_b","values","v"],"mappings":"wIAQA,MAAMA,EAAiBC,EAAU,EAC3BC,EAAiBC,EAAkB,EAElC,SAASC,EAA2BC,EAExC,CACD,KAAM,CAAE,MAAAC,CAAA,EAAUC,EAAOF,CAAK,EACxBG,EAAkBC,EAAmB,EAErCC,EAAaC,EAAe,EAC5BC,EAAsBC,EAAe,EAErCC,EAAQC,EAAY,SAAS,EAC7BC,EAAkBD,EAAgB,EAAE,EAEpCE,EAAaC,EAAS,IAAMR,EAAW,mBAAmBJ,EAAM,KAAK,CAAC,EACtEa,EAAsBD,EAAS,IAAMZ,EAAM,MAAM,gBAAkB,EAAE,EAErEc,EAAaF,EAAS,IAC1B,OAAA,OAAAG,EAAAF,EAAoB,QAApB,YAAAE,EAA2B,IAAKC,GAAgBA,EAAE,aACpD,EAEMC,EAASL,EAAS,IAAM,OAC5B,QACEG,EAAAD,EAAW,QAAX,YAAAC,EACI,IAAKG,GACEA,EAAY,MAAM,GAAG,EAAE,CAAC,GAAK,MAErC,KAAK,OAAQ,IAAA,CAEnB,EAEKC,EAAeC,GAAwB,SAC3CpB,EAAM,MAAM,eAAiBoB,EAE7B,IAAIC,EAAQ,EACR,GAAA,MAAM,QAAQD,CAAO,EACvB,UAAWE,KAAUF,EAAS,CAEtB,MAAAG,EAAwB,GADFC,GAAAT,EAAAO,EAAO,cAAP,YAAAP,EAAoB,aAApB,YAAAS,EAAgC,MAAM,MACvB,CAAC,EAG1C,CAAC,MAAMD,CAAa,GACpBvB,EAAM,MAAM,cAAgB,8BAEnBqB,GAAAE,EACX,CAIJvB,EAAM,MAAM,MAAQqB,EACpBrB,EAAM,MAAM,aACVM,EAAoB,mCAAmCN,EAAM,KAAK,EAEpEI,EAAW,YAAYJ,EAAM,MAAM,MAAOA,EAAM,KAAK,EACrCE,EAAA,uBAAuBF,EAAM,MAAM,KAAK,EAGtDN,EAAe,uBACfA,EAAe,cAAc,EAAE,SAAW,YAE1CE,EAAe,0BAA0B,CAE7C,EAmBO,MAAA,CACL,MAAAY,EACA,gBAAAE,EACA,YAAAS,EACA,aArBoBE,GAAwB,CAC5CX,EAAgB,MAAQ,CAAC,EACnB,MAAAe,EAASJ,EAAM,MAAM,GAAG,EAE9B,UAAWK,KAAKD,EAAQ,CAChB,MAAAH,EAAStB,EAAM,MAAM,QAAQ,KAChCgB,GAAgBA,EAAE,cAAgBU,CACrC,EAEIJ,GACcZ,EAAA,MAAM,KAAKY,CAAM,CACnC,CAGFH,EAAYT,EAAgB,KAAK,CACnC,EAOE,WAAAC,EACA,WAAAG,EACA,OAAAG,CACF,CACF"}