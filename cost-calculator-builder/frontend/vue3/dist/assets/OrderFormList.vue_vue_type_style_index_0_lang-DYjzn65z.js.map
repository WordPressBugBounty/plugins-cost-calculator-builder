{"version":3,"mappings":"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","names":["parseHtml","encodedStr","orderFormFieldRegistry","defineAsyncComponent","__vitePreload","props","__props","field","name","toRefs","FieldComponent","computed","key","settingStore","useSettingsStore","termValue","_b","_a","value","getTitle","termsAndConditionsField","isRequired","getPageName","getPageLink","payment","validateOrderFormSettings","useOrderForm","orderFormStore","useOrderFormStore","submissionStore","useSubmissionStore","settings","appStore","useAppStore","myCf7Root","ref","allowContactForm","fieldsInstance","useFields","formFields","getMakeOrderText","getSubmitOrderText","summaryDisplay","getPaymentType","showDemoNotice","isLive","submitForm","customSubmissionCreateOrder","event","orderInputs","input","showSendData","paymentStore","usePaymentStore","paymentAfterSubmitStore","usePaymentAfterSubmitStore","showButton","btnDisabledStatus","fieldsStore","useFieldsStore","nextButton","initContactFormActions","getCf7Content","contactFormData","showContactForm","form","cfRow","cfSentCallback","cfInitContent","text","$form","_c","subtotal","formFormulas","_e","_d","f","totalSubtotals","regexPattern","$textarea","forms","_f","e","cfSentHandler","onMounted"],"ignoreList":[],"sources":["../../src/widget/shared/utils/html-parser.utils.ts","../../src/widget/actions/pro-features/order-form/orderFormFieldRegistry.ts","../../src/widget/features/submission/order-form/OrderFormItem.vue","../../src/widget/features/submission/order-form/terms-and-conditions/TermsAndConditions.vue","../../src/widget/features/submission/order-form/OrderFormList.vue"],"sourcesContent":["export const parseHtml = (encodedStr: string): string => {\n  const parser = new DOMParser();\n  const dom = parser.parseFromString(\n    \"<!doctype html><body>\" + encodedStr,\n    \"text/html\",\n  );\n\n  return dom.body.textContent || \"\";\n};\n","import { defineAsyncComponent } from \"vue\";\nexport interface IOrderFormFields {\n  name: unknown;\n  dropdown: unknown;\n  email: unknown;\n  phone: unknown;\n  text: unknown;\n  textarea: unknown;\n  space: unknown;\n  number: unknown;\n  radio: unknown;\n  checkbox: unknown;\n  \"date-picker\": unknown;\n  \"time-picker\": unknown;\n  \"input-textbox\": unknown;\n  \"formatted-text\": unknown;\n}\n\nexport const orderFormFieldRegistry: IOrderFormFields = {\n  name: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderName.vue\"),\n  ),\n  dropdown: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderDropdown\"),\n  ),\n  email: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderEmail.vue\"),\n  ),\n  phone: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderPhone.vue\"),\n  ),\n  text: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderText.vue\"),\n  ),\n  textarea: defineAsyncComponent(\n    () =>\n      import(\n        \"@/widget/features/submission/order-form/fields/OrderTextarea.vue\"\n      ),\n  ),\n  \"input-textbox\": defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderTextBox.vue\"),\n  ),\n  number: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderNumber.vue\"),\n  ),\n  space: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderSpace.vue\"),\n  ),\n  radio: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderRadio.vue\"),\n  ),\n  checkbox: defineAsyncComponent(\n    () =>\n      import(\n        \"@/widget/features/submission/order-form/fields/OrderCheckbox.vue\"\n      ),\n  ),\n  \"formatted-text\": defineAsyncComponent(\n    () =>\n      import(\n        \"@/widget/features/submission/order-form/fields/OrderFormattedText.vue\"\n      ),\n  ),\n  \"date-picker\": defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/order-form/fields/OrderDate.vue\"),\n  ),\n  \"time-picker\": defineAsyncComponent(\n    () => import(\"@/widget/features/submission/order-form/fields/OrderTime\"),\n  ),\n};\n","<template>\n  <component :is=\"FieldComponent\" :field=\"field\"></component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs } from \"vue\";\nimport { IFormField } from \"@/widget/shared/types/fields\";\nimport {\n  IOrderFormFields,\n  orderFormFieldRegistry,\n} from \"@/widget/actions/pro-features/order-form/orderFormFieldRegistry.ts\";\n\ntype Props = {\n  name: string;\n  field: IFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field, name } = toRefs(props);\n\nconst FieldComponent = computed(() => {\n  const key: keyof IOrderFormFields = name.value as keyof IOrderFormFields;\n  return orderFormFieldRegistry[key] || \"\";\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-order-field__counter {\n  font-size: 12px;\n  opacity: 0.6;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  padding-top: 5px;\n}\n\n.ccb-order-required-mark {\n  color: var(--ccb-error-color) !important;\n}\n\n.ccb-order-field-required {\n  position: absolute;\n  top: -14px;\n  right: 0;\n\n  &__tooltip {\n    top: -16px;\n    right: 2px;\n    background-color: #d94141;\n    color: #fff;\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 12px;\n    white-space: nowrap;\n    z-index: 1000;\n    position: relative;\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      top: 100%;\n      left: 90%;\n      transform: translateX(-50%);\n      border-width: 5px;\n      border-style: solid;\n      border-color: #d94141 transparent transparent transparent;\n    }\n  }\n\n  &.left {\n    right: auto;\n    left: 0;\n    top: -20px;\n\n    .ccb-order-field-required__tooltip {\n      &::after {\n        left: 10%;\n      }\n    }\n  }\n}\n\n.ccb-datetime {\n  .error-tip {\n    display: none !important;\n  }\n}\n\n.ccb-order-field--required {\n  .ccb-order-field__label {\n    color: var(--ccb-error-color) !important;\n  }\n\n  .ccb-order-dropdown__input,\n  textarea,\n  select,\n  input {\n    border-color: var(--ccb-error-color) !important;\n  }\n\n  .ccb-default-checkbox {\n    label {\n      &:before {\n        border-color: var(--ccb-error-color) !important;\n      }\n    }\n  }\n}\n\n.ccb-order-field__label_confirmation {\n  color: var(--ccb-error-color) !important;\n}\n\n.ccb-order-field__wrapper {\n  position: relative;\n}\n</style>\n","<template>\n  <div\n    class=\"ccb-default-checkbox ccb-terms-check\"\n    :class=\"{\n      'ccb-terms-and-conditions-required': isRequired,\n    }\"\n  >\n    <div class=\"ccb-order-field__wrapper\">\n      <RequiredHint v-if=\"isRequired\" :text=\"termsAndConditionsField\" />\n\n      <label for=\"terms_and_conditions\">\n        <input\n          type=\"checkbox\"\n          id=\"terms_and_conditions\"\n          name=\"terms_and_conditions\"\n          v-model=\"termValue\"\n          :value=\"true\"\n        />\n        <span class=\"ccb-checkbox-label\">\n          {{ getTitle }}\n          <a :href=\"getPageLink\" target=\"_blank\">\n            {{ getPageName }}\n            <i class=\"ccb-icon-click-out\"></i>\n          </a>\n        </span>\n      </label>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore.ts\";\nimport { computed } from \"vue\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\n\nconst settingStore = useSettingsStore();\n\nconst termValue = computed({\n  get() {\n    return settingStore.getFormSettings?.termsAndConditions?.checkbox || false;\n  },\n  set(value: boolean) {\n    settingStore.updateTermsValue(value);\n  },\n});\n\nconst getTitle = computed(() => {\n  return settingStore.getFormSettings?.termsAndConditions?.text || \"\";\n});\n\nconst termsAndConditionsField = computed(() => {\n  return (\n    settingStore.getWarningTexts?.formFields?.termsAndConditionsField ||\n    \"Please, check out our terms and click on the checkbox\"\n  );\n});\n\nconst isRequired = computed(() => {\n  return settingStore.checkTermsAndConditionsApproved;\n});\n\nconst getPageName = computed(() => {\n  return settingStore.getFormSettings?.termsAndConditions?.linkText || \"\";\n});\n\nconst getPageLink = computed(() => {\n  return settingStore.getFormSettings?.termsAndConditions?.link || \"\";\n});\n</script>\n\n<style scoped lang=\"scss\">\n.ccb-default-checkbox {\n  grid-column: span 12;\n}\n\n.ccb-order-field__wrapper {\n  gap: 5px;\n}\n\n.ccb-terms-check {\n  input {\n    &:focus {\n      outline-width: 0;\n    }\n  }\n}\n\n.ccb-checkbox-label {\n  a {\n    margin-left: 0.3rem;\n    margin-bottom: 1px;\n    text-decoration: none;\n    outline: none;\n    box-shadow: none;\n    color: var(--ccb-accent-color) !important;\n    font-weight: 400;\n  }\n}\n\n.ccb-terms-and-conditions-required {\n  label {\n    &:before {\n      border-color: var(--ccb-error-color) !important;\n    }\n  }\n}\n\n.ccb-default-checkbox {\n  display: flex;\n  gap: 10px;\n  font-size: var(--ccb-field-size);\n  font-weight: var(--ccb-field-weight);\n  color: var(--ccb-text-color);\n  padding: 5px 0px;\n\n  label {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n    line-height: 1.4;\n    width: fit-content;\n    padding: 0 0 0 25px;\n    position: relative;\n\n    &:before {\n      left: 0;\n      content: \"\";\n      max-width: 20px;\n      min-width: 20px;\n      max-height: 20px;\n      min-height: 20px;\n      height: 20px;\n      width: 20px;\n      position: absolute;\n      margin: 0 !important;\n      background-color: var(--ccb-field-bg-color);\n      border: 2px solid var(--ccb-fields-border-color);\n      transition: transform 0.28s ease;\n      box-sizing: border-box;\n      border-radius: 3px;\n    }\n\n    &:after {\n      left: 5px;\n      height: 5px;\n      width: 10px;\n      content: \"\";\n      display: block;\n      position: absolute;\n      border-left: 2px solid #fff;\n      border-bottom: 2px solid #fff;\n      transition: transform ease 0.25s;\n      transform: rotate(-45deg) scale(0) translateY(-10%);\n      box-sizing: border-box;\n    }\n\n    input {\n      display: none;\n    }\n\n    .ccb-checkbox-label {\n      word-break: break-word;\n    }\n  }\n\n  label:has(input[type=\"checkbox\"]:checked):before {\n    background: var(--ccb-accent-color);\n    border-color: var(--ccb-accent-color);\n  }\n\n  label:has(input[type=\"checkbox\"]:checked):after {\n    transform: rotate(-45deg) scale(1) translateY(-10%);\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"ccb-order-form\"\n    :class=\"{\n      'ccb-order-form-legacy': !settings.getFormSettings?.contactFormId,\n      'is-live-form': !orderFormStore.getNextButtonStatus && isLive,\n    }\"\n  >\n    <ProBadge />\n    <template\n      v-if=\"\n        orderFormStore.getNextButtonStatus && getPaymentType !== 'woocommerce'\n      \"\n    >\n      <div class=\"ccb-order-form__submit ccb-col-12\">\n        <Button\n          type=\"success\"\n          :text=\"getMakeOrderText\"\n          :on-click=\"nextButton\"\n          :disabled=\"btnDisabledStatus\"\n        />\n      </div>\n    </template>\n    <template v-else>\n      <template v-if=\"showSendData && getPaymentType !== 'woocommerce'\">\n        <template v-if=\"settings.getFormSettings?.contactFormId\">\n          <div\n            class=\"ccb-contact-form7\"\n            :class=\"{\n              'calc-cf7-disabled': orderFormStore.getContactFormDisabled,\n            }\"\n          >\n            <div\n              class=\"ccb-contact-form7-container\"\n              v-html=\"getCf7Content\"\n            ></div>\n          </div>\n        </template>\n        <template v-else>\n          <OrderFormItem\n            v-for=\"formField in formFields\"\n            :field=\"formField\"\n            :key=\"formField.id\"\n            :name=\"formField.type\"\n          />\n\n          <TermsAndConditions\n            v-if=\"settings.getFormSettings?.accessTermsEmail\"\n          />\n        </template>\n      </template>\n\n      <div class=\"ccb-order-form__submit ccb-col-12\" v-if=\"showButton\">\n        <Button\n          type=\"success\"\n          :text=\"getSubmitOrderText\"\n          :on-click=\"submitForm\"\n          :disabled=\"btnDisabledStatus\"\n        />\n      </div>\n      <Transition name=\"fade\">\n        <DemoNotice v-if=\"showDemoNotice\" />\n      </Transition>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs, onMounted, ref } from \"vue\";\nimport { useOrderForm } from \"@/widget/actions/pro-features/order-form/composable/useOrderForm.ts\";\nimport { useSubmissionStore } from \"@/widget/app/providers/stores/submissionStore.ts\";\nimport { usePaymentStore } from \"@/widget/app/providers/stores/paymentsStore.ts\";\nimport { usePaymentAfterSubmitStore } from \"@/widget/app/providers/stores/paymentAfterSubmit.ts\";\nimport { useOrderFormStore } from \"@/widget/app/providers/stores/orderFormStore.ts\";\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore.ts\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore\";\nimport { useAppStore } from \"@/widget/app/providers/stores/appStore.ts\";\nimport { useFields } from \"@/widget/actions/fields/composable/useFields.ts\";\nimport { ContactFormFields } from \"@/widget/shared/types/orders/contact-form-fields.type\";\nimport { parseHtml } from \"@/widget/shared/utils/html-parser.utils\";\nimport DemoNotice from \"@/widget/shared/ui/components/Demo-notice/DemoNotice.vue\";\nimport OrderFormItem from \"./OrderFormItem.vue\";\nimport Button from \"@/widget/shared/ui/components/Button/Button.vue\";\nimport TermsAndConditions from \"@/widget/features/submission/order-form/terms-and-conditions/TermsAndConditions.vue\";\nimport ProBadge from \"@/widget/shared/ui/components/Pro-badge/ProBadge.vue\";\n\ntype Props = {\n  payment?: boolean;\n};\n\nconst props = defineProps<Props>();\nconst { payment } = toRefs(props);\n\nconst { validateOrderFormSettings } = useOrderForm();\nconst orderFormStore = useOrderFormStore();\nconst submissionStore = useSubmissionStore();\nconst settings = useSettingsStore();\nconst appStore = useAppStore();\nconst myCf7Root = ref<HTMLElement | null>(null);\nconst allowContactForm = ref<boolean>(false);\nconst fieldsInstance = useFields();\n\nconst formFields = computed(() => {\n  return orderFormStore.getFormFields;\n});\n\nconst getMakeOrderText = computed((): string => {\n  return settings.getFormSettings?.openModalBtnText || \"Make Order\";\n});\n\nconst getSubmitOrderText = computed((): string => {\n  const summaryDisplay = settings.getFormSettings?.summaryDisplay;\n\n  if (getPaymentType.value === \"woocommerce\") {\n    return \"Add to cart\";\n  }\n\n  if (summaryDisplay?.enable) {\n    return summaryDisplay.submitBtnText || \"View Summary\";\n  }\n\n  return settings.getFormSettings?.submitBtnText || \"Submit Order\";\n});\n\n// IF demo or live site ( demonstration only )\nconst showDemoNotice = ref(false);\nconst isLive = computed(() => {\n  return appStore.getIsLive;\n});\n// END| IF demo or live site ( demonstration only )\n\nconst submitForm = () => {\n  // IF demo or live site ( demonstration only )\n  if (isLive.value) {\n    showDemoNotice.value = true;\n    setTimeout(() => {\n      showDemoNotice.value = false;\n    }, 5000);\n    return;\n  }\n  // END| IF demo or live site ( demonstration only )\n\n  if (getPaymentType.value === \"woocommerce\" || !validateOrderFormSettings()) {\n    submissionStore.submissionCreateOrder();\n  }\n};\n\nconst customSubmissionCreateOrder = (event: any) => {\n  const orderInputs: ContactFormFields[] = event.detail.inputs.map(\n    (input: any) => {\n      return {\n        label: input.name || \"\",\n        value: input.value.replace(/\\n/g, \" \") || \"\",\n        attributes: {\n          label: input.name || \"\",\n          type: input.name || \"\",\n        },\n      };\n    },\n  );\n\n  submissionStore.submissionCreateOrder(orderInputs);\n};\n\nconst showSendData = computed((): boolean => {\n  const paymentStore = usePaymentStore();\n  const paymentAfterSubmitStore = usePaymentAfterSubmitStore();\n\n  if (!payment.value) return true;\n\n  if (\n    paymentAfterSubmitStore.isPaymentAfterSubmit &&\n    paymentAfterSubmitStore.getSubmit\n  ) {\n    return false;\n  }\n\n  return paymentStore.showForm;\n});\n\nconst getPaymentType = computed((): string => {\n  const paymentStore = usePaymentStore();\n  return paymentStore.paymentType;\n});\n\nconst showButton = computed((): boolean => {\n  if (settings.getFormSettings?.contactFormId) {\n    return false;\n  }\n\n  const paymentAfterSubmitStore = usePaymentAfterSubmitStore();\n  return !(\n    paymentAfterSubmitStore.isPaymentAfterSubmit &&\n    paymentAfterSubmitStore.getSubmit\n  );\n});\n\nconst btnDisabledStatus = computed((): boolean => {\n  const fieldsStore = useFieldsStore();\n  const paymentStore = usePaymentStore();\n\n  if (showSendData.value) return false;\n  if (paymentStore.paymentType && !fieldsStore.checkRequiredFields()) {\n    return true;\n  }\n\n  return !paymentStore.paymentType;\n});\n\nconst nextButton = () => {\n  const fieldsStore = useFieldsStore();\n\n  if (fieldsStore.checkRequiredFields()) {\n    orderFormStore.updateNextButtonStatus(false);\n    orderFormStore.updateNextButton(true);\n    allowContactForm.value = true;\n\n    setTimeout(() => {\n      initContactFormActions();\n    });\n  }\n};\n\nconst getCf7Content = computed((): string => {\n  const calcId = appStore.getCalcId;\n  const key: any = `ccb_front_template_${calcId}`;\n  const contactFormData = window[key] as unknown as { cf7_form: string };\n  if (contactFormData && \"cf7_form\" in contactFormData) {\n    return contactFormData.cf7_form;\n  }\n\n  return \"\";\n});\n\nconst cleanFormData = () => {};\n\nconst showContactForm = () => {\n  myCf7Root.value = document.querySelector(`#ccb_app_${appStore.getCalcId}`);\n\n  if (!myCf7Root.value) return;\n\n  if (\n    myCf7Root.value?.getElementsByClassName(\"ccb-contact-form7\").length <= 0\n  ) {\n    return;\n  }\n\n  if (\n    myCf7Root.value\n      .getElementsByClassName(\"ccb-contact-form7\")[0]\n      .getElementsByTagName(\"form\").length <= 0\n  ) {\n    return;\n  }\n\n  let form = myCf7Root.value\n    .getElementsByClassName(\"ccb-contact-form7\")[0]\n    .getElementsByTagName(\"form\")[0];\n\n  let formRows = [...form.getElementsByTagName(\"p\")];\n  formRows.forEach((cfRow) => {\n    if (cfRow.classList.contains(\"ccb-hidden\")) {\n      cfRow.classList.remove(\"ccb-hidden\");\n      cfRow.style.display = \"block\";\n    }\n  });\n\n  /** clean message **/\n  if (form.getElementsByClassName(\"wpcf7-response-output\").length > 0) {\n    form.getElementsByClassName(\"wpcf7-response-output\")[0].innerHTML = \"\";\n  }\n};\n\nconst cfSentCallback = (event: any): void => {\n  event.preventDefault();\n  if (isLive.value) {\n    return;\n  }\n\n  if (allowContactForm.value) {\n    customSubmissionCreateOrder(event);\n    allowContactForm.value = false;\n\n    if (event?.detail?.status === \"mail_sent\") {\n      orderFormStore.updateContactFormDisabled(true);\n    }\n  }\n};\n\nconst cfInitContent = () => {\n  if (settings.getFormSettings?.contactFormId) {\n    let text = settings.getFormSettings?.body;\n    const $form = myCf7Root.value?.querySelector(\".wpcf7-form\");\n\n    if (text.indexOf(\"[ccb-subtotal]\") !== -1) {\n      let subtotal: string = fieldsInstance.parseContactFormDescriptions();\n      let regex = \"[ccb-subtotal]\";\n      text = text.replaceAll(regex, subtotal);\n    }\n\n    const formFormulas = settings.getFormSettings?.formulas?.map(\n      (f) => f.alias,\n    );\n    const totalSubtotals = fieldsInstance.parseContactFormTotals(formFormulas);\n    const regexPattern = /\\[ccb-total(?:-\\d+)?\\]/g;\n    text = text.replaceAll(regexPattern, `${totalSubtotals}\\n`);\n\n    const $textarea = $form?.querySelector(\"textarea\");\n    if ($textarea) $textarea.value = parseHtml(text);\n    if (window.wpcf7 && \"init\" in window.wpcf7) {\n      const forms = myCf7Root.value?.querySelectorAll(\".wpcf7 > form\");\n      forms?.forEach((form) => {\n        window.wpcf7?.init(form as HTMLElement);\n        if (isLive.value) {\n          form.addEventListener(\"submit\", (e) => {\n            e.preventDefault();\n            showDemoNotice.value = true;\n            setTimeout(() => {\n              showDemoNotice.value = false;\n            }, 5000);\n          });\n        }\n      });\n    }\n  }\n};\n\nconst cfSentHandler = () => {\n  document.addEventListener(\"wpcf7mailsent\", cfSentCallback, false);\n};\n\nconst initContactFormActions = () => {\n  cleanFormData();\n  showContactForm();\n\n  cfSentHandler();\n\n  cfInitContent();\n};\n\nonMounted(() => {});\n</script>\n\n<style lang=\"scss\">\n.ccb-order-form {\n  .is-pro {\n    display: none;\n  }\n  &.is-live-form {\n    position: relative;\n    margin-top: 30px;\n    margin-bottom: 15px;\n    padding-top: 0;\n    .ccb-order-form__submit {\n      z-index: 1;\n    }\n    &::before {\n      content: \"\";\n      position: absolute;\n      border: 1px solid #8bdef9;\n      left: -20px;\n      top: -12px;\n      right: -20px;\n      bottom: -12px;\n      z-index: 0;\n    }\n    .is-pro {\n      display: block;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n      margin-left: 0;\n      top: -20px;\n      width: 40%;\n      text-align: center;\n    }\n  }\n  &__submit {\n    display: flex;\n    button {\n      width: 100%;\n    }\n  }\n\n  &.ccb-order-form-legacy {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    gap: 20px;\n\n    .ccb-col-2 {\n      grid-column: span 2;\n    }\n\n    .ccb-col-4 {\n      grid-column: span 4;\n    }\n\n    .ccb-col-6 {\n      grid-column: span 6;\n    }\n\n    .ccb-col-8 {\n      grid-column: span 8;\n    }\n\n    .ccb-col-10 {\n      grid-column: span 10;\n    }\n\n    .ccb-col-12 {\n      grid-column: span 12;\n    }\n  }\n\n  .ccb-contact-form7-container {\n    .wpcf7-submit {\n      padding: 10px 20px;\n      outline: none;\n      box-shadow: none;\n      min-height: var(--ccb-field-button-height);\n      border-radius: var(--ccb-fields-border-radius);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      column-gap: 6px;\n      cursor: pointer;\n      transition: 300ms ease;\n      font-size: var(--ccb-fields-button-size);\n      font-weight: var(--ccb-fields-button-weight);\n      background: var(--ccb-accent-color);\n      color: var(--ccb-fields-color);\n      border: none;\n      width: 100%;\n    }\n  }\n}\n\n.ccb-contact-form7 {\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  label {\n    font-size: 14px;\n    font-weight: 400;\n    width: 100%;\n\n    input,\n    textarea {\n      width: 100%;\n    }\n\n    input {\n      padding: 10px;\n      margin-bottom: 10px;\n    }\n\n    textarea {\n      padding: 10px;\n      resize: vertical;\n      margin-bottom: 10px;\n    }\n  }\n\n  &.calc-cf7-disabled {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n\n  .wpcf7-response-output {\n    display: none !important;\n    visibility: hidden !important;\n    z-index: -1 !important;\n  }\n}\n</style>\n"],"file":"assets/OrderFormList.vue_vue_type_style_index_0_lang-DYjzn65z.js"}