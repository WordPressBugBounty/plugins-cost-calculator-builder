{"version":3,"file":"BoxToggleWithDescription-DStyuC-4.js","sources":["../../src/widget/features/calculator-fields/components/Toggle/styles/BoxToggleWithDescription.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-box-toggle\">\n    <label\n      class=\"ccb-toggle-item\"\n      v-for=\"(option, idx) in field.options\"\n      :key=\"idx\"\n      :class=\"{\n        active: selectedOptions.includes(option.optionValue),\n        'ccb-option-disabled': field.disableOptions.includes(idx),\n      }\"\n      @click.prevent=\"toggleOption(option.optionValue)\"\n    >\n      <div class=\"ccb-toggle-wrapper\">\n        <input\n          :id=\"getName + '_' + idx + '_' + generateId\"\n          type=\"checkbox\"\n          :name=\"getName\"\n          v-model=\"optionValues\"\n          :value=\"option.optionValue\"\n          @click=\"toggleOption(option.optionValue)\"\n          :key=\"idx\"\n        />\n        <label :for=\"getName + '_' + idx + '_' + generateId\"></label>\n      </div>\n      <div class=\"ccb-toggle-item__label-wrap\">\n        <span class=\"ccb-toggle-item__label\">{{ option.optionText }}</span>\n        <span\n          class=\"ccb-toggle-item__description\"\n          v-html=\"option.optionHint\"\n        ></span>\n      </div>\n    </label>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed } from \"vue\";\nimport { IMultiOptionsField } from \"@/widget/shared/types/fields\";\nimport { useMultiOptionChildShared } from \"@/widget/actions/fields/composable/useMultiOptionChildShared\";\n\nconst emit = defineEmits<{\n  (event: \"update\", value: string): void;\n}>();\n\ntype Props = {\n  field: IMultiOptionsField;\n  values: string[];\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst generateId = computed(() => {\n  return Math.random().toString(36).substring(2, 15);\n});\n\nconst { optionValues, changeValue, getName, selectedOptions } =\n  useMultiOptionChildShared(props, emit);\n\nconst toggleOption = (value: string) => {\n  const index = optionValues.value.indexOf(value);\n\n  if (index === -1) {\n    optionValues.value.push(value);\n  } else {\n    optionValues.value.splice(index, 1);\n  }\n  changeValue();\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-box-toggle {\n  display: flex;\n  gap: 10px;\n  font-size: var(--ccb-field-size);\n  font-weight: var(--ccb-field-weight);\n  color: var(--ccb-text-color);\n  padding: 5px 0px;\n  flex-direction: column;\n\n  @media only screen and (max-width: 480px) {\n    font-size: var(--ccb-mobile-field-size);\n    font-weight: var(--ccb-mobile-field-weight);\n  }\n\n  .ccb-toggle-item {\n    display: flex;\n    vertical-align: middle;\n    align-items: center;\n    border: 1px solid var(--ccb-fields-border-color);\n    padding: 15px;\n    border-radius: var(--ccb-fields-border-radius);\n    background: var(--ccb-fields-color);\n    cursor: pointer;\n\n    &.active {\n      border-color: var(--ccb-accent-color);\n      background-color: color-mix(\n        in srgb,\n        var(--ccb-accent-color),\n        transparent 75%\n      );\n    }\n\n    &__postfix {\n      color: var(--ccb-toggle-label-bg);\n      cursor: pointer;\n    }\n\n    &__label-wrap {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .ccb-toggle-wrapper {\n      margin: 0;\n      margin-right: 10px;\n      position: relative;\n      display: flex;\n      align-items: center;\n\n      input {\n        display: none;\n      }\n\n      label {\n        cursor: pointer;\n        width: 45px;\n        height: 24px;\n        background: var(--ccb-toggle-label-bg);\n        position: relative;\n        border-radius: 46px;\n        display: inline-block;\n        margin: 0;\n        padding: 0;\n\n        &:after {\n          content: \"\";\n          background: #fff;\n          top: 3px;\n          width: 18px;\n          height: 18px;\n          position: absolute;\n          border-radius: 100%;\n          left: 3px;\n          z-index: 2;\n          box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n          transition: 0.4s;\n        }\n      }\n\n      input:checked + label:after {\n        left: 24px;\n      }\n\n      input:checked + label {\n        background: var(--ccb-accent-color);\n      }\n    }\n  }\n}\n</style>\n"],"names":["emit","__emit","props","__props","field","toRefs","generateId","computed","optionValues","changeValue","getName","selectedOptions","useMultiOptionChildShared","toggleOption","value","index"],"mappings":"muBAwCA,MAAMA,EAAOC,EASPC,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExBI,EAAaC,EAAS,IACnB,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,CAClD,EAEK,CAAE,aAAAC,EAAc,YAAAC,EAAa,QAAAC,EAAS,gBAAAC,GAC1CC,EAA0BV,EAAOF,CAAI,EAEjCa,EAAgBC,GAAkB,CACtC,MAAMC,EAAQP,EAAa,MAAM,QAAQM,CAAK,EAE1CC,IAAU,GACCP,EAAA,MAAM,KAAKM,CAAK,EAEhBN,EAAA,MAAM,OAAOO,EAAO,CAAC,EAExBN,EAAA,CACd"}