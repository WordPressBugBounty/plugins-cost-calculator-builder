{"version":3,"file":"Default-CLQ_ZdaY.js","sources":["../../src/widget/features/submission/order-form/fields/OrderDropdown/styles/Default.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-field__input-wrapper\" ref=\"dropdownWrapper\">\n    <div class=\"ccb-order-dropdown\">\n      <div class=\"ccb-order-dropdown__input\" @click=\"toggleBody\">\n        <span class=\"ccb-dropdown__label\" v-if=\"!selectedValue.length\">{{\n          field.placeholder\n            ? field.placeholder\n            : translationsStore.getTranslations.selectValue\n        }}</span>\n        <span v-else class=\"ccb-order-dropdown__label\">{{\n          selectedValue\n        }}</span>\n        <span class=\"ccb-order-dropdown__icon\">\n          <i class=\"ccb-icon-Path-3485\"></i>\n        </span>\n      </div>\n      <div class=\"ccb-order-dropdown__list\">\n        <ul>\n          <li @click.prevent=\"() => selectValue('')\">\n            {{ translationsStore.getTranslations.selectValue }}\n          </li>\n          <template v-if=\"field.attributes?.options\">\n            <li\n              v-for=\"(option, idx) in field.attributes.options\"\n              :key=\"idx\"\n              @click.prevent=\"() => selectValue(`${option.optionText}_${idx}`)\"\n            >\n              {{ option.optionText }}\n            </li>\n          </template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, toRefs, ref } from \"vue\";\nimport { IFormField } from \"@/widget/shared/types/fields\";\nimport { useOrderFormDropdown } from \"@/widget/actions/pro-features/order-form/composable/useOrderFormDropdown.ts\";\nimport { useOrderForm } from \"@/widget/actions/pro-features/order-form/composable/useOrderForm.ts\";\nimport { splitByLastUnderscore } from \"@/widget/shared/utils/split-by-last-underscore.utils.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\n\nconst emit = defineEmits<{\n  (event: \"toggle\", value: boolean): void;\n}>();\n\ntype Props = {\n  field: IFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst dropdownWrapper = ref<HTMLElement | null>(null);\nconst { toggleBody } = useOrderFormDropdown(props, emit, dropdownWrapper);\nconst translationsStore = useTranslationsStore();\n\nconst selectedValue = computed(() => {\n  return splitByLastUnderscore(field.value.value || \"\");\n});\n\nconst selectValue = (value: string): void => {\n  field.value.value = value;\n  toggleBody();\n\n  const { updateValue } = useOrderForm();\n  updateValue(field.value.id, field.value.value);\n};\n\nonMounted(() => {\n  if (Array.isArray(field.value?.value)) {\n    field.value.value = field.value.value[0];\n  }\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["emit","__emit","props","__props","field","toRefs","dropdownWrapper","ref","toggleBody","useOrderFormDropdown","translationsStore","useTranslationsStore","selectedValue","computed","splitByLastUnderscore","selectValue","value","updateValue","useOrderForm","onMounted","_a"],"mappings":"0kBA4CA,MAAMA,EAAOC,EAQPC,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExBI,EAAkBC,EAAwB,IAAI,EAC9C,CAAE,WAAAC,CAAW,EAAIC,EAAqBP,EAAOF,EAAMM,CAAe,EAClEI,EAAoBC,EAAqB,EAEzCC,EAAgBC,EAAS,IACtBC,EAAsBV,EAAM,MAAM,OAAS,EAAE,CACrD,EAEKW,EAAeC,GAAwB,CAC3CZ,EAAM,MAAM,MAAQY,EACTR,EAAA,EAEL,KAAA,CAAE,YAAAS,CAAY,EAAIC,EAAa,EACrCD,EAAYb,EAAM,MAAM,GAAIA,EAAM,MAAM,KAAK,CAC/C,EAEA,OAAAe,EAAU,IAAM,OACV,MAAM,SAAQC,EAAAhB,EAAM,QAAN,YAAAgB,EAAa,KAAK,IAClChB,EAAM,MAAM,MAAQA,EAAM,MAAM,MAAM,CAAC,EACzC,CACD"}