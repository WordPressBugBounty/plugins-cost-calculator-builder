{"version":3,"file":"GroupItem-Ddbn7tMO.js","sources":["../../src/widget/shared/ui/total-summary/items/GroupItem.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-summary-group\">\n    <template v-for=\"elements in summary.groupElements\">\n      <template v-for=\"element in getFieldsFromMap(elements)\">\n        <Transition name=\"fade\">\n          <TotalSummaryItem\n            item-type=\"summary\"\n            :summary=\"element\"\n            v-if=\"!element.alias.includes('total')\"\n          ></TotalSummaryItem>\n        </Transition>\n      </template>\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs } from \"vue\";\nimport { Field, IRepeaterField } from \"@/widget/shared/types/fields\";\nimport TotalSummaryItem from \"@/widget/shared/ui/total-summary/TotalSummaryItem.vue\";\n\ntype Props = {\n  summary: IRepeaterField;\n};\n\nconst props = defineProps<Props>();\nconst { summary } = toRefs(props);\n\nconst getFieldsFromMap = computed(() => {\n  return (data: Map<string, Field>): Field[] => {\n    return Array.from(data.values());\n  };\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-summary-group {\n  display: flex;\n  flex-direction: column;\n  gap: var(--ccb-summary-spacing);\n  @media only screen and (max-width: 480px) {\n    gap: var(--ccb-mobile-summary-spacing);\n  }\n}\n</style>\n"],"names":["props","__props","summary","toRefs","getFieldsFromMap","computed","data"],"mappings":"ugBAyBA,MAAMA,EAAQC,EACR,CAAE,QAAAC,CAAA,EAAYC,EAAOH,CAAK,EAE1BI,EAAmBC,EAAS,IACxBC,GACC,MAAM,KAAKA,EAAK,OAAA,CAAQ,CAElC"}