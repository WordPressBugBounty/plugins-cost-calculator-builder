{"version":3,"file":"TwoPoints-B9-e1jA-.js","sources":["../../src/widget/features/calculator-fields/components/Geolocation/styles/TwoPoints.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-two-points-location\">\n    <div class=\"ccb-two-points-location__input-wrapper\">\n      <button class=\"ccb-two-points-location__action\" @click=\"showPopup\">\n        <span class=\"icon\">\n          <i class=\"ccb-icon-location\"></i>\n        </span>\n        <span class=\"label\">{{\n          translationsStore.getTranslations.openMap\n        }}</span>\n      </button>\n      <div class=\"ccb-two-points-location__description\">\n        <span v-if=\"!showInfo\">{{\n          translationsStore.getTranslations.chooseFromMap\n        }}</span>\n        <span v-else class=\"ccb-two-points-location__adressname\">\n          <span>{{ translationsStore.getTranslations.from }}:</span>\n          {{ addressNames.from.addressName }} <br />\n          <span>{{ translationsStore.getTranslations.to }}:</span>\n          {{ addressNames.to.addressName }}\n        </span>\n      </div>\n    </div>\n    <CCBPopup ref=\"popup\">\n      <div class=\"ccb-location-modal\">\n        <div class=\"ccb-location-modal__body\">\n          <div class=\"ccb-location-modal__sidebar\">\n            <div class=\"ccb-location-modal__inputs\">\n              <div class=\"ccb-location-modal__input\">\n                <label for=\"latitude\">{{\n                  translationsStore.getTranslations.from\n                }}</label>\n                <input\n                  :id=\"locationFromId\"\n                  type=\"text\"\n                  :placeholder=\"translationsStore.getTranslations.enterAddress\"\n                  v-model=\"addressNames.from.addressName\"\n                  @click=\"setActiveInput('from')\"\n                />\n              </div>\n              <div class=\"ccb-location-modal__input\">\n                <label for=\"longitude\">{{\n                  translationsStore.getTranslations.toDestination\n                }}</label>\n                <input\n                  :id=\"locationToId\"\n                  v-model=\"addressNames.to.addressName\"\n                  type=\"text\"\n                  :placeholder=\"translationsStore.getTranslations.enterAddress\"\n                  @click=\"setActiveInput('to')\"\n                />\n              </div>\n            </div>\n            <div class=\"ccb-location-modal__distance\">\n              {{ translationsStore.getTranslations.distance }}:\n              <span>{{ `${distance} ${getMeasure()}` }}</span>\n            </div>\n          </div>\n          <div :id=\"randomID\" class=\"ccb-location-modal__map\"></div>\n        </div>\n        <div class=\"ccb-location-modal__footer\">\n          <CCBButton\n            type=\"light\"\n            :text=\"translationsStore.getTranslations.clearLocation\"\n            :class=\"['clear', { disable: !showInfo }]\"\n            @click=\"clearLocation\"\n          ></CCBButton>\n          <CCBButton\n            type=\"light\"\n            :text=\"translationsStore.getTranslations.cancel\"\n            @click=\"hidePopup\"\n          ></CCBButton>\n          <CCBButton\n            type=\"success\"\n            :text=\"translationsStore.getTranslations.saveLocation\"\n            @click=\"setLocation\"\n          ></CCBButton>\n        </div>\n      </div>\n    </CCBPopup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport CCBPopup from \"@/widget/shared/ui/components/Popup/Popup.vue\";\nimport CCBButton from \"@/widget/shared/ui/components/Button/Button.vue\";\nimport { useSingleField } from \"@/widget/actions/fields/composable/useSingleField.ts\";\nimport { useConditionsStore } from \"@/widget/app/providers/stores/conditionsStore.ts\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore.ts\";\nimport { useCurrency } from \"@/widget/actions/fields/composable/useCurrency.ts\";\nimport { ref, toRefs, defineProps, computed, onMounted } from \"vue\";\nimport { IGeolocationField } from \"@/widget/shared/types/fields\";\nimport { useGeolocationFieldHelper } from \"@/widget/actions/fields/composable/useGeolocationFieldHelper.ts\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport { usePageBreakerStore } from \"@/widget/app/providers/stores/pageBreakerStore.ts\";\n\ntype Props = {\n  field: IGeolocationField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst singleFieldMixins = useSingleField();\nconst conditionsStore = useConditionsStore();\nconst fieldStore = useFieldsStore();\nconst currencyInstance = useCurrency();\nconst translationsStore = useTranslationsStore();\nconst pageBreakerStore = usePageBreakerStore();\n\nconst popup = ref();\n\nconst {\n  getGoogleApiKey,\n  mapOptions,\n  generateId,\n  getMeasure,\n  getMarkerIconPath,\n  calculateValueByEachCost,\n  eachCost,\n  generateGoogleLink,\n} = useGeolocationFieldHelper();\n\n// Location Variables\nlet randomID = generateId(4);\nlet coordinates = ref({ lat: 51.554867, lng: -0.109112 });\nlet addressNames = ref({\n  from: { addressName: \"\", coordinates: { lat: 0, lng: 0 } },\n  to: { addressName: \"\", coordinates: { lat: 0, lng: 0 } },\n});\n\nlet distance = ref<string>(\"\");\nlet activeInput = ref<\"from\" | \"to\">(\"from\");\nlet directionsRenderer = ref<google.maps.DirectionsRenderer | null>(null);\nlet markers = ref<{\n  from: google.maps.marker.AdvancedMarkerElement | null;\n  to: google.maps.marker.AdvancedMarkerElement | null;\n}>({\n  from: null,\n  to: null,\n});\n\nconst loader = new Loader({\n  apiKey: getGoogleApiKey(),\n  version: \"weekly\",\n  libraries: [\"places\", \"geometry\"],\n});\n\nonMounted(() => {\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        let result = {\n          lat: latitude,\n          lng: longitude,\n        };\n\n        coordinates.value = result;\n        initMap();\n      },\n      () => {\n        initMap();\n      },\n    );\n  } else {\n    initMap();\n  }\n});\n\n// Methods\n\nlet map: google.maps.Map;\n\nconst initMap = () => {\n  loader.load().then(async () => {\n    const { Map } = (await google.maps.importLibrary(\n      \"maps\",\n    )) as google.maps.MapsLibrary;\n\n    map = new Map(document.getElementById(randomID) as HTMLElement, {\n      ...mapOptions(),\n      mapId: randomID,\n      center: {\n        ...coordinates.value,\n      },\n    });\n\n    const inputFrom = document.getElementById(\n      locationFromId.value,\n    ) as HTMLInputElement;\n    const inputTo = document.getElementById(\n      locationToId.value,\n    ) as HTMLInputElement;\n\n    const searchBoxFrom = new google.maps.places.SearchBox(inputFrom);\n    const searchBoxTo = new google.maps.places.SearchBox(inputTo);\n\n    searchBoxFrom.addListener(\"places_changed\", () => {\n      handlePlacesChanged(searchBoxFrom, \"from\");\n    });\n\n    searchBoxTo.addListener(\"places_changed\", () => {\n      handlePlacesChanged(searchBoxTo, \"to\");\n    });\n\n    google.maps.event.addListener(\n      map,\n      \"click\",\n      (event: google.maps.MapMouseEvent) => {\n        if (activeInput) {\n          const position = {\n            lat: event.latLng ? event.latLng.lat() : 0,\n            lng: event.latLng ? event.latLng.lng() : 0,\n          };\n\n          addressNames.value[activeInput.value].coordinates = position;\n          setMarker(activeInput.value, position);\n          const inputId =\n            activeInput.value === \"from\"\n              ? locationFromId.value\n              : locationToId.value;\n          const geocoder = new google.maps.Geocoder();\n          geocoder.geocode(\n            { location: event.latLng },\n            (\n              results: google.maps.GeocoderResult[] | null,\n              status: google.maps.GeocoderStatus,\n            ) => {\n              if (status === \"OK\" && results && results.length > 0) {\n                const formattedAddress = results[0].formatted_address;\n\n                document\n                  .getElementById(inputId)\n                  ?.setAttribute(\"value\", formattedAddress);\n                addressNames.value[activeInput.value].addressName =\n                  formattedAddress;\n\n                if (\n                  addressNames.value.from.coordinates &&\n                  addressNames.value.to.coordinates\n                ) {\n                  calculateAndDisplayRoute();\n                }\n              } else {\n                console.error(\"Geocoding failed:\", status);\n              }\n            },\n          );\n        }\n      },\n    );\n  });\n};\n\nconst setLocation = () => {\n  if (showInfo.value) {\n    updateValue();\n  }\n};\n\nconst updateValue = () => {\n  field.value.value = parseFloat(\n    calculateValueByEachCost(\n      parseFloat(distance.value),\n      dataValue.value,\n    ).toFixed(2),\n  );\n  field.value.displayValue = getDisplayValue.value;\n  field.value.extraDisplayView = [\n    `${translationsStore.getTranslations.from}: ${\n      addressNames.value.from.addressName.length > 30\n        ? addressNames.value.from.addressName.slice(0, 30) + \"...\"\n        : addressNames.value.from.addressName\n    }`,\n    `${translationsStore.getTranslations.toDestination}: ${\n      addressNames.value.to.addressName.length > 34\n        ? addressNames.value.to.addressName.slice(0, 34) + \"...\"\n        : addressNames.value.to.addressName\n    }`,\n    `${getDistanceView.value}`,\n  ];\n\n  const userSelectedOptions = {\n    distance: distance.value,\n    distance_view: getDistanceView.value,\n    measure: getMeasure(),\n    eachCost: field.value.eachCost,\n    twoPoints: {\n      from: {\n        addressName: addressNames.value.from.addressName,\n        coordinates: addressNames.value.from.coordinates,\n        addressLink: generateGoogleLink(addressNames.value.from.coordinates),\n      },\n      to: {\n        addressName: addressNames.value.to.addressName,\n        coordinates: addressNames.value.to.coordinates,\n        addressLink: generateGoogleLink(addressNames.value.to.coordinates),\n      },\n    },\n  };\n  field.value.userSelectedOptions = userSelectedOptions;\n  fieldStore.updateField(field.value.alias, field.value);\n  conditionsStore.applyConditionForField(field.value.alias);\n\n  if (\n    fieldStore.getPageBreakEnabled &&\n    fieldStore.getActivePage.action === \"not_skip\"\n  ) {\n    pageBreakerStore.checkPageFieldsConditions();\n  }\n\n  hidePopup();\n};\n\nconst setActiveInput = (type: \"from\" | \"to\") => {\n  activeInput.value = type;\n};\n\nconst clearLocation = () => {\n  field.value.userSelectedOptions = {};\n\n  Object.values(markers.value).forEach(\n    (marker: google.maps.marker.AdvancedMarkerElement | null) => {\n      if (marker) {\n        marker.map = null;\n      }\n    },\n  );\n\n  markers.value.from = null;\n  markers.value.to = null;\n\n  if (directionsRenderer.value !== null) {\n    directionsRenderer.value.setMap(null);\n  }\n\n  distance.value = \"0\";\n  addressNames.value = {\n    from: { addressName: \"\", coordinates: { lat: 0, lng: 0 } },\n    to: { addressName: \"\", coordinates: { lat: 0, lng: 0 } },\n  };\n\n  field.value.value = 0;\n  field.value.displayValue = \"\";\n  field.value.extraDisplayView = [];\n  fieldStore.updateField(field.value.alias, field.value);\n  conditionsStore.applyConditionForField(field.value.alias);\n\n  if (\n    fieldStore.getPageBreakEnabled &&\n    fieldStore.getActivePage.action === \"not_skip\"\n  ) {\n    pageBreakerStore.checkPageFieldsConditions();\n  }\n\n  hidePopup();\n};\n\nconst setMarker = async (\n  type: \"from\" | \"to\",\n  latLng: google.maps.LatLngLiteral,\n) => {\n  if (type === \"from\" && markers.value.from) {\n    markers.value.from.map = null;\n    markers.value.from = null;\n  } else if (type === \"to\" && markers.value.to) {\n    markers.value.to.map = null;\n    markers.value.to = null;\n  }\n\n  const glyphImg = document.createElement(\"img\");\n  glyphImg.style.width = \"40px\";\n  glyphImg.style.height = \"40px\";\n  glyphImg.src = getMarkerIconPath();\n\n  const { AdvancedMarkerElement } = (await google.maps.importLibrary(\n    \"marker\",\n  )) as google.maps.MarkerLibrary;\n\n  const newMarker = new AdvancedMarkerElement({\n    position: latLng,\n    map: map,\n  });\n\n  if (getMarkerIconPath()) {\n    newMarker.content = glyphImg;\n  }\n\n  if (type === \"from\") {\n    markers.value.from = newMarker;\n  } else {\n    markers.value.to = newMarker;\n  }\n};\n\nconst handlePlacesChanged = (\n  searchBox: google.maps.places.SearchBox,\n  type: \"from\" | \"to\",\n) => {\n  const places = searchBox.getPlaces() || [];\n\n  if (!Array.isArray(places) || places?.length === 0) {\n    return;\n  }\n\n  const place = places[0];\n\n  const position = {\n    lat: place?.geometry?.location?.lat() || 0,\n    lng: place?.geometry?.location?.lng() || 0,\n  };\n\n  const addressName = place.formatted_address;\n\n  addressNames.value[type].coordinates = {\n    lat: position.lat,\n    lng: position.lng,\n  };\n  addressNames.value[type].addressName = addressName || \"\";\n\n  if (\n    addressNames.value.from.coordinates &&\n    addressNames.value.to.coordinates\n  ) {\n    calculateAndDisplayRoute();\n  }\n};\n\nconst calculateAndDisplayRoute = async () => {\n  try {\n    const dist = await calculateDistance();\n    distance.value = dist as string;\n\n    if (directionsRenderer.value) {\n      directionsRenderer.value.setMap(null);\n      directionsRenderer.value = null;\n    }\n\n    const directionsService = new google.maps.DirectionsService();\n    directionsRenderer.value = new google.maps.DirectionsRenderer({\n      suppressMarkers: true,\n    });\n\n    if (directionsRenderer.value) {\n      directionsRenderer.value.setMap(map);\n    }\n\n    const waypoints = [\n      { location: addressNames.value.from.coordinates, stopover: true },\n      { location: addressNames.value.to.coordinates, stopover: true },\n    ];\n\n    const fromAddress = new google.maps.LatLng(\n      addressNames.value.from.coordinates,\n    );\n    const toAddress = new google.maps.LatLng(addressNames.value.to.coordinates);\n\n    const request = {\n      origin: fromAddress,\n      destination: toAddress,\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n\n    directionsService.route(\n      request,\n      (\n        result: google.maps.DirectionsResult | null,\n        status: google.maps.DirectionsStatus,\n      ) => {\n        if (status === \"OK\") {\n          directionsRenderer.value?.setDirections(result);\n          calculateDistance().then((dist: unknown) => {\n            distance.value = dist as string;\n          });\n        }\n      },\n    );\n  } catch (error) {\n    throw error;\n  }\n};\n\nconst calculateDistance = () => {\n  const directionsService = new google.maps.DirectionsService();\n\n  const waypoints = [\n    {\n      location: new google.maps.LatLng(\n        addressNames.value.from.coordinates.lat,\n        addressNames.value.from.coordinates.lng,\n      ),\n      stopover: true,\n    },\n    {\n      location: new google.maps.LatLng(\n        addressNames.value.to.coordinates.lat,\n        addressNames.value.to.coordinates.lng,\n      ),\n      stopover: true,\n    },\n  ];\n\n  const request = {\n    origin: new google.maps.LatLng(\n      addressNames.value.from.coordinates.lat,\n      addressNames.value.from.coordinates.lng,\n    ),\n    destination: new google.maps.LatLng(\n      addressNames.value.to.coordinates.lat,\n      addressNames.value.to.coordinates.lng,\n    ),\n    waypoints: waypoints,\n    travelMode: google.maps.TravelMode.DRIVING,\n  };\n\n  return new Promise((resolve) => {\n    directionsService.route(\n      request,\n      (\n        result: google.maps.DirectionsResult | null,\n        status: google.maps.DirectionsStatus,\n      ) => {\n        if (status === \"OK\") {\n          const distanceInMeters =\n            result?.routes[0]?.legs?.reduce(\n              (total: number, leg: google.maps.DirectionsLeg) => {\n                return total + (leg?.distance?.value || 0);\n              },\n              0,\n            ) || 0;\n\n          let distance;\n          if (getMeasure() === \"miles\") {\n            distance = (distanceInMeters * 0.000621371).toFixed(2);\n          } else {\n            distance = (distanceInMeters * 0.001).toFixed(2);\n          }\n          resolve(distance);\n        } else {\n        }\n      },\n    );\n  });\n};\n\nconst showPopup = () => {\n  popup.value.showPopup();\n};\n\nconst hidePopup = () => {\n  popup.value.hidePopup();\n};\n\n// Computed\nconst getDisplayValue = computed(() => {\n  return field.value.useCurrency\n    ? singleFieldMixins.getCommonFieldDisplayView(field.value)\n    : field.value.value?.toString() || \"\";\n});\n\nconst getDistanceView = computed(() => {\n  const settings = currencyInstance.getCurrencyOptions(field.value);\n  const currency = settings.currency;\n  const position = settings.currencyPosition;\n  let num = 0;\n  if (field.value.value) {\n    num = eachCost(parseFloat(distance.value), dataValue.value);\n  }\n\n  const formattedEachCost = currencyInstance.parseCurrencyPosition(\n    num.toString(),\n    currency,\n    position || \"left\",\n  );\n\n  let cost = field.value.useCurrency ? `${formattedEachCost}` : num;\n  return `${translationsStore.getTranslations.distance}: ${distance.value} ${getMeasure()} x ${cost}`;\n});\n\nconst showInfo = computed(() => {\n  return (\n    addressNames.value.from.addressName &&\n    addressNames.value.to.addressName &&\n    distance.value\n  );\n});\n\nconst dataValue = computed(() => ({\n  value: {\n    pricingType: field.value.pricingType,\n    eachCost: String(field.value.eachCost),\n    distanceCostList: field.value.distanceCostList.map((costItem) => ({\n      from: (costItem as any).from,\n      to: (costItem as any).to,\n      cost: String((costItem as any).cost),\n    })),\n    lastDistanceCost: {\n      cost: String((field.value.lastDistanceCost as any)?.cost || \"0\"),\n    },\n  },\n}));\n\nconst locationFromId = computed(() => {\n  return `${field.value.alias}-locationFrom-${randomID}`;\n});\n\nconst locationToId = computed(() => {\n  return `${field.value.alias}-locationTo-${randomID}`;\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-two-points-location {\n  @media (max-width: 1024px) {\n    .ccb-location-modal__body {\n      height: 500px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    .ccb-location-modal {\n      &__body {\n        display: grid;\n        grid-template-columns: 1fr;\n        width: 100%;\n      }\n\n      &__sidebar {\n        height: 232px;\n        box-sizing: border-box;\n      }\n\n      &__input {\n        margin-bottom: 5px;\n        max-width: 100%;\n\n        input {\n          width: 100%;\n        }\n      }\n\n      &__map {\n        height: 268px;\n      }\n\n      &__inputs,\n      &__distance,\n      &__footer,\n      &__sidebar {\n        width: 100%;\n      }\n\n      &__footer {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n\n        .ccb-button {\n          &:first-child {\n            grid-column: span 2;\n          }\n\n          &.clear {\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n\n  @media (max-width: 400px) {\n    .ccb-location-modal__sidebar {\n      height: 200px;\n      padding: 17px;\n    }\n\n    .ccb-location-modal__body {\n      height: 400px;\n    }\n\n    .ccb-location-modal__map {\n      height: 201px;\n    }\n\n    .ccb-location-modal {\n      &__footer {\n        display: flex;\n        flex-direction: column;\n      }\n    }\n  }\n\n  &__input-wrapper {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  &__action {\n    background: var(--ccb-fields-color);\n    color: var(--ccb-accent-color);\n    font-size: var(--ccb-fields-button-size);\n    font-weight: var(--ccb-fields-button-weight);\n    border: var(--ccb-button-border) var(--ccb-button-border-style)\n      var(--ccb-accent-color);\n    border-radius: var(--ccb-button-border-radius);\n    height: var(--ccb-field-button-height);\n    padding: 0 15px 0 15px;\n    cursor: pointer;\n    transition: 300ms ease;\n    margin-right: 14px;\n    white-space: nowrap;\n\n    @media only screen and (max-width: 480px) {\n      min-height: var(--ccb-mobile-field-button-height);\n      font-size: var(--ccb-mobile-fields-button-size);\n      font-weight: var(--ccb-mobile-fields-button-weight);\n    }\n\n    &:hover {\n      background: var(--ccb-accent-color);\n      color: var(--ccb-fields-color);\n    }\n\n    .icon {\n      margin-right: 5px;\n    }\n  }\n\n  &__description {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--ccb-fields-description-color);\n  }\n\n  &__adressname {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--ccb-text-color);\n\n    span {\n      font-weight: 700;\n    }\n  }\n}\n</style>\n"],"names":["props","__props","field","toRefs","singleFieldMixins","useSingleField","conditionsStore","useConditionsStore","fieldStore","useFieldsStore","currencyInstance","useCurrency","translationsStore","useTranslationsStore","pageBreakerStore","usePageBreakerStore","popup","ref","getGoogleApiKey","mapOptions","generateId","getMeasure","getMarkerIconPath","calculateValueByEachCost","eachCost","generateGoogleLink","useGeolocationFieldHelper","randomID","coordinates","addressNames","distance","activeInput","directionsRenderer","markers","loader","Loader","onMounted","position","latitude","longitude","result","initMap","map","Map","inputFrom","locationFromId","inputTo","locationToId","searchBoxFrom","searchBoxTo","handlePlacesChanged","event","setMarker","inputId","results","status","formattedAddress","_a","calculateAndDisplayRoute","setLocation","showInfo","updateValue","dataValue","getDisplayValue","getDistanceView","userSelectedOptions","hidePopup","setActiveInput","type","clearLocation","marker","latLng","glyphImg","AdvancedMarkerElement","newMarker","searchBox","places","place","_b","_d","_c","addressName","dist","calculateDistance","directionsService","waypoints","fromAddress","toAddress","request","error","resolve","distanceInMeters","total","leg","showPopup","computed","settings","currency","num","formattedEachCost","cost","costItem"],"mappings":"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"}