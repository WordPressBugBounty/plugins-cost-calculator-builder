{"version":3,"file":"UserLocation-CMSneq3x.js","sources":["../../src/widget/features/calculator-fields/components/Geolocation/styles/UserLocation.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-user-location\">\n    <div class=\"ccb-user-location__input-wrapper\">\n      <button class=\"ccb-user-location__action\" @click=\"showPopup\">\n        <span class=\"icon\">\n          <i class=\"ccb-icon-location\"></i>\n        </span>\n        <span class=\"label\">{{\n          translationsStore.getTranslations.openMap\n        }}</span>\n      </button>\n      <div class=\"ccb-user-location__description\">\n        <span v-if=\"!addressName\">{{\n          translationsStore.getTranslations.chooseFromMap\n        }}</span>\n        <span v-else class=\"ccb-user-location__adressname\">\n          {{ addressName }}\n        </span>\n      </div>\n    </div>\n    <CCBPopup ref=\"popup\">\n      <div class=\"ccb-location-modal\">\n        <div class=\"ccb-location-modal__body\">\n          <div :id=\"randomID\" class=\"ccb-location-modal__map\"></div>\n          <div class=\"ccb-location-modal__search\">\n            <i class=\"ccb-icon-Search-Magnifier\"></i>\n            <input\n              :id=\"searchInputId\"\n              class=\"controls\"\n              type=\"text\"\n              :placeholder=\"translationsStore.getTranslations.searchLocation\"\n            />\n          </div>\n        </div>\n        <div class=\"ccb-location-modal__footer\">\n          <CCBButton\n            type=\"light\"\n            :text=\"translationsStore.getTranslations.clearLocation\"\n            :class=\"['clear', { disable: !addressName }]\"\n            :on-click=\"resetLocation\"\n          ></CCBButton>\n          <CCBButton\n            type=\"light\"\n            :text=\"translationsStore.getTranslations.cancel\"\n            :on-click=\"hidePopup\"\n          ></CCBButton>\n          <CCBButton\n            type=\"success\"\n            :text=\"translationsStore.getTranslations.saveLocation\"\n            :on-click=\"setLocation\"\n          ></CCBButton>\n        </div>\n      </div>\n    </CCBPopup>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport CCBPopup from \"@/widget/shared/ui/components/Popup/Popup.vue\";\nimport CCBButton from \"@/widget/shared/ui/components/Button/Button.vue\";\nimport { computed, onMounted, ref, toRefs } from \"vue\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore.ts\";\nimport { useSingleField } from \"@/widget/actions/fields/composable/useSingleField.ts\";\nimport { useConditionsStore } from \"@/widget/app/providers/stores/conditionsStore.ts\";\nimport { IGeolocationField } from \"@/widget/shared/types/fields\";\nimport { useGeolocationFieldHelper } from \"@/widget/actions/fields/composable/useGeolocationFieldHelper.ts\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { useCurrency } from \"@/widget/actions/fields/composable/useCurrency.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport { usePageBreakerStore } from \"@/widget/app/providers/stores/pageBreakerStore.ts\";\n\ntype Props = {\n  field: IGeolocationField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst fieldStore = useFieldsStore();\nconst conditionsStore = useConditionsStore();\nconst singleFieldMixins = useSingleField();\nconst currencyInstance = useCurrency();\nconst translationsStore = useTranslationsStore();\nconst pageBreakerStore = usePageBreakerStore();\n\nconst popup = ref();\n\nconst {\n  getGoogleApiKey,\n  mapOptions,\n  generateId,\n  parseLocationCoordinates,\n  calculateValueByEachCost,\n  getMeasure,\n  eachCost,\n  getMarkerIconPath,\n} = useGeolocationFieldHelper();\n\nconst loader = new Loader({\n  apiKey: getGoogleApiKey(),\n  version: \"weekly\",\n  libraries: [\"places\", \"geometry\"],\n});\n\n// Location variables\nlet coordinates = ref({ lat: 51.554867, lng: -0.109112 });\nlet markers = ref<google.maps.marker.AdvancedMarkerElement[]>([]);\nlet addressName = ref(\"\");\nlet randomID = generateId(4);\nlet distance = ref(0);\nlet distanceView = ref(\"\");\n\nlet map: google.maps.Map;\n\n// computed\n\nconst dataValue = computed(() => ({\n  value: {\n    pricingType: field.value.pricingType,\n    eachCost: String(field.value.eachCost),\n    distanceCostList: field.value.distanceCostList.map((costItem) => ({\n      from: (costItem as any).from,\n      to: (costItem as any).to,\n      cost: String((costItem as any).cost),\n    })),\n    lastDistanceCost: {\n      cost: String((field.value.lastDistanceCost as any)?.cost || \"0\"),\n    },\n  },\n}));\n\nconst getUserLocation = computed(() => {\n  return field.value.userLocation;\n});\n\nconst getAdressnameView = computed(() => {\n  return addressName.value.length > 40\n    ? `${addressName.value.slice(0, 40)} + ...`\n    : addressName.value;\n});\n\nconst getDisplayValue = computed(() => {\n  return field.value.useCurrency\n    ? singleFieldMixins.getCommonFieldDisplayView(field.value)\n    : field.value.value?.toString() || \"\";\n});\n\nconst getDistanceView = computed(() => {\n  const settings = currencyInstance.getCurrencyOptions(field.value);\n  const currency = settings.currency;\n  const position = settings.currencyPosition;\n  let num = 0;\n  if (field.value.value) {\n    num = eachCost(distance.value, dataValue.value);\n  }\n\n  const formattedEachCost = currencyInstance.parseCurrencyPosition(\n    num.toString(),\n    currency,\n    position || \"left\",\n  );\n\n  let cost = field.value.useCurrency ? `${formattedEachCost}` : num;\n  return `${translationsStore.getTranslations.distance}: ${distance.value} ${getMeasure()} x ${cost}`;\n});\n\nconst searchInputId = computed(() => {\n  return `${field.value.alias}-search-input-${randomID}`;\n});\n\n// end computed\n\n// methods\nconst initMap = () => {\n  loader.load().then(async () => {\n    const { Map } = (await google.maps.importLibrary(\n      \"maps\",\n    )) as google.maps.MapsLibrary;\n    map = new Map(document.getElementById(randomID) as HTMLElement, {\n      ...mapOptions(),\n      mapId: randomID,\n      center: {\n        ...coordinates.value,\n      },\n    });\n\n    const input = document.getElementById(\n      searchInputId.value,\n    ) as HTMLInputElement;\n    const searchBox = new google.maps.places.SearchBox(input);\n\n    map.addListener(\"bounds_changed\", () => {\n      searchBox.setBounds(map.getBounds() as google.maps.LatLngBounds);\n    });\n\n    searchBox.addListener(\"places_changed\", () => {\n      const places = searchBox.getPlaces();\n\n      if (places?.length === 0) {\n        return;\n      }\n\n      const bounds = new google.maps.LatLngBounds();\n\n      places?.forEach((place: google.maps.places.PlaceResult) => {\n        if (!place.geometry || !place.geometry.location) {\n          return;\n        }\n\n        const latLngLiteral: google.maps.LatLngLiteral = {\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n        };\n\n        setMarker(latLngLiteral);\n\n        if (place.geometry.viewport) {\n          bounds.union(place.geometry.viewport);\n        } else {\n          bounds.extend(place.geometry.location);\n        }\n\n        addressName.value = place.formatted_address || \"\";\n\n        coordinates.value.lat = place.geometry.location.lat();\n        coordinates.value.lng = place.geometry.location.lng();\n      });\n\n      map.fitBounds(bounds);\n    });\n\n    map.addListener(\"click\", (event: google.maps.MapMouseEvent) => {\n      const latLng = event.latLng;\n\n      setMarker({\n        lat: latLng?.lat() || 0,\n        lng: latLng?.lng() || 0,\n      });\n\n      coordinates.value.lat = latLng?.lat() || 0;\n      coordinates.value.lng = latLng?.lng() || 0;\n\n      const geocoder = new google.maps.Geocoder();\n\n      geocoder.geocode(\n        { location: latLng },\n        (\n          results: google.maps.GeocoderResult[] | null,\n          status: google.maps.GeocoderStatus,\n        ) => {\n          if (status === \"OK\") {\n            if (Array.isArray(results) && results[0]) {\n              addressName.value = results[0].formatted_address;\n              input.value = results[0].formatted_address;\n            }\n          }\n        },\n      );\n    });\n  });\n};\n\nconst clearAddressName = () => {\n  addressName.value = \"\";\n};\n\nconst showPopup = () => {\n  popup.value.showPopup();\n};\n\nconst hidePopup = () => {\n  popup.value.hidePopup();\n};\n\nconst clearMarkers = () => {\n  markers.value.forEach((marker) => {\n    marker.map = null;\n  });\n  markers.value = [];\n};\n\nconst setMarker = async (latLng: google.maps.LatLngLiteral) => {\n  clearMarkers();\n\n  const glyphImg = document.createElement(\"img\");\n  glyphImg.style.width = \"40px\";\n  glyphImg.style.height = \"40px\";\n  glyphImg.src = getMarkerIconPath();\n\n  const { AdvancedMarkerElement } = (await google.maps.importLibrary(\n    \"marker\",\n  )) as google.maps.MarkerLibrary;\n\n  const newMarker = new AdvancedMarkerElement({\n    position: latLng,\n    map: map,\n  });\n\n  if (getMarkerIconPath()) {\n    newMarker.content = glyphImg;\n  }\n\n  markers.value.push(newMarker);\n};\n\nconst resetLocation = () => {\n  if (addressName.value) {\n    clearAddressName();\n    const input = document.getElementById(randomID);\n    clearMarkers();\n\n    if (input) {\n      (input as HTMLInputElement).value = \"\";\n    }\n    resetValue();\n    hidePopup();\n  }\n};\n\nconst calculateDistance = () => {\n  const directionsService = new google.maps.DirectionsService();\n  const userCoordinates = parseLocationCoordinates(\n    getUserLocation.value.toString(),\n  );\n  const selectedCoordinates = coordinates.value;\n\n  const waypoints = [\n    { location: userCoordinates, stopover: true },\n    { location: selectedCoordinates, stopover: true },\n  ];\n\n  const request = {\n    origin: userCoordinates,\n    destination: selectedCoordinates,\n    waypoints: waypoints,\n    travelMode: google.maps.TravelMode.DRIVING,\n  };\n\n  const measure = getMeasure();\n\n  return new Promise((resolve) => {\n    directionsService.route(\n      request,\n      (\n        result: google.maps.DirectionsResult | null,\n        status: google.maps.DirectionsStatus,\n      ) => {\n        if (status === \"OK\") {\n          const distanceInMeters =\n            result?.routes[0]?.legs?.reduce(\n              (total: number, leg: google.maps.DirectionsLeg) => {\n                return total + (leg?.distance?.value || 0);\n              },\n              0,\n            ) || 0;\n\n          let distance;\n          if (measure === \"miles\") {\n            distance = (distanceInMeters * 0.000621371).toFixed(2);\n          } else {\n            distance = (distanceInMeters * 0.001).toFixed(2);\n          }\n          resolve(distance);\n        } else {\n          // distancePopup = true;\n        }\n      },\n    );\n  });\n};\n\nconst setLocation = async () => {\n  if (addressName.value) {\n    distance.value = Number(await calculateDistance());\n    distanceView.value = `${calculateValueByEachCost(\n      distance.value,\n      dataValue.value,\n    )} ${getMeasure()}`;\n    updateValue();\n    hidePopup();\n  }\n};\n\nconst resetValue = () => {\n  field.value.value = 0;\n  field.value.displayValue = \"0\";\n  field.value.extraDisplayView = [];\n  fieldStore.updateField(field.value.alias, field.value);\n  conditionsStore.applyConditionForField(field.value.alias);\n  if (\n    fieldStore.getPageBreakEnabled &&\n    fieldStore.getActivePage.action === \"not_skip\"\n  ) {\n    pageBreakerStore.checkPageFieldsConditions();\n  }\n};\n\nconst updateValue = () => {\n  field.value.value =\n    parseFloat(\n      calculateValueByEachCost(distance.value, dataValue.value).toFixed(2),\n    ) || 0;\n  field.value.displayValue = getDisplayValue.value;\n  field.value.extraDisplayView = [\n    getAdressnameView.value.toString(),\n    getDistanceView.value.toString(),\n  ];\n  fieldStore.updateField(field.value.alias, field.value);\n  conditionsStore.applyConditionForField(field.value.alias);\n  if (\n    fieldStore.getPageBreakEnabled &&\n    fieldStore.getActivePage.action === \"not_skip\"\n  ) {\n    pageBreakerStore.checkPageFieldsConditions();\n  }\n};\n\n// end methods\n\nonMounted(() => {\n  if (getUserLocation.value) {\n    coordinates.value = parseLocationCoordinates(\n      getUserLocation.value.toString(),\n    );\n  }\n\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const latitude = position.coords.latitude;\n        const longitude = position.coords.longitude;\n\n        coordinates.value = {\n          lat: latitude,\n          lng: longitude,\n        };\n        initMap();\n      },\n      () => {\n        initMap();\n      },\n    );\n  } else {\n    initMap();\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-user-location {\n  .ccb-popup {\n    z-index: 999;\n  }\n\n  @media (max-width: 768px) {\n    .ccb-location-modal {\n      &__footer {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n\n        .ccb-button {\n          &:first-child {\n            width: 100%;\n            grid-column: span 2;\n          }\n        }\n      }\n    }\n  }\n\n  @media (max-width: 400px) {\n    .ccb-location-modal {\n      &__footer {\n        display: flex;\n        flex-direction: column;\n      }\n    }\n  }\n\n  .ccb-location-modal__body {\n    position: relative;\n    @media (max-width: 768px) {\n      max-height: 400px;\n      width: 100%;\n    }\n\n    .ccb-location-modal__search {\n      left: 16px;\n      position: absolute;\n      top: 18px;\n      z-index: 99;\n\n      i {\n        left: 10px;\n        position: absolute;\n        top: 12px;\n        font-size: 16px;\n        color: var(--ccb-text-color);\n        opacity: 0.7;\n      }\n\n      input {\n        font-size: var(--ccb-fields-button-size);\n        padding: 11px 11px 11px 35px;\n\n        @media only screen and (max-width: 480px) {\n          font-size: var(--ccb-mobile-fields-button-size);\n        }\n\n        &::placeholder {\n          color: var(--ccb-text-color);\n          opacity: 0.7;\n        }\n      }\n    }\n  }\n\n  &__input-wrapper {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n  }\n\n  &__action {\n    background: var(--ccb-fields-color);\n    color: var(--ccb-accent-color);\n    font-size: var(--ccb-fields-button-size);\n    font-weight: var(--ccb-fields-button-weight);\n    border: var(--ccb-button-border) var(--ccb-button-border-style)\n      var(--ccb-accent-color);\n    border-radius: var(--ccb-button-border-radius);\n    height: var(--ccb-field-button-height);\n    padding: 0 15px 0 15px;\n    cursor: pointer;\n    transition: 300ms ease;\n    margin-right: 14px;\n    white-space: nowrap;\n    @media only screen and (max-width: 480px) {\n      min-height: var(--ccb-mobile-field-button-height);\n      font-size: var(--ccb-mobile-fields-button-size);\n      font-weight: var(--ccb-mobile-fields-button-weight);\n    }\n\n    &:hover {\n      background: var(--ccb-accent-color);\n      color: var(--ccb-fields-color);\n    }\n\n    .icon {\n      margin-right: 5px;\n    }\n  }\n\n  &__description {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--ccb-fields-description-color);\n    max-width: 296px;\n  }\n\n  &__adressname {\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 20px;\n    color: var(--ccb-text-color);\n  }\n}\n</style>\n"],"names":["props","__props","field","toRefs","fieldStore","useFieldsStore","conditionsStore","useConditionsStore","singleFieldMixins","useSingleField","currencyInstance","useCurrency","translationsStore","useTranslationsStore","pageBreakerStore","usePageBreakerStore","popup","ref","getGoogleApiKey","mapOptions","generateId","parseLocationCoordinates","calculateValueByEachCost","getMeasure","eachCost","getMarkerIconPath","useGeolocationFieldHelper","loader","Loader","coordinates","markers","addressName","randomID","distance","distanceView","map","dataValue","computed","costItem","_a","getUserLocation","getAdressnameView","getDisplayValue","getDistanceView","settings","currency","position","num","formattedEachCost","cost","searchInputId","initMap","Map","input","searchBox","places","bounds","place","latLngLiteral","setMarker","event","latLng","results","status","clearAddressName","showPopup","hidePopup","clearMarkers","marker","glyphImg","AdvancedMarkerElement","newMarker","resetLocation","resetValue","calculateDistance","directionsService","userCoordinates","selectedCoordinates","request","measure","resolve","result","distanceInMeters","_b","total","leg","setLocation","updateValue","onMounted","latitude","longitude"],"mappings":"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"}