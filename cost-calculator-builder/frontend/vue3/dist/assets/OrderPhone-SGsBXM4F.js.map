{"version":3,"file":"OrderPhone-SGsBXM4F.js","sources":["../../src/widget/features/submission/order-form/fields/OrderPhone.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-order-field ccb-order-phone\"\n    :class=\"{\n      [`ccb-col-${field.fieldWidth}`]: true,\n      'ccb-order-field--required': isRequired,\n    }\"\n  >\n    <div class=\"ccb-order-field__wrapper\">\n      <RequiredHint v-if=\"isRequired\" :text=\"warningTextPhoneField\" />\n      <label class=\"ccb-order-field__label\">\n        {{ field.label }}\n        <span class=\"ccb-order-required-mark\" v-if=\"field.required\">*</span>\n      </label>\n      <input\n        type=\"tel\"\n        :placeholder=\"field.placeholder\"\n        v-model=\"field.value\"\n        @input=\"updateValue\"\n        pattern=\"[0-9+]*\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { IFormField } from \"@/widget/shared/types/fields\";\nimport { toRefs, computed } from \"vue\";\nimport { useOrderFormFieldsRequired } from \"@/widget/actions/pro-features/order-form/composable/useOrderFormFieldsRequired.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\n\ntype Props = {\n  field: IFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nif (field.value.value === undefined) {\n  field.value.value = \"\";\n}\n\nconst { checkFieldRequired } = useOrderFormFieldsRequired();\nconst translationsStore = useTranslationsStore();\nconst settingStore = useSettingsStore();\n\nconst warningTextPhoneField = computed(() => {\n  return (\n    settingStore.getWarningTexts?.formFields?.phoneField ||\n    translationsStore.getTranslations.requiredField\n  );\n});\n\nconst updateValue = (event: Event) => {\n  const input = event.target as HTMLInputElement;\n  let value = input.value;\n\n  value = value.replace(/[^0-9+]/g, \"\");\n\n  if (value.includes(\"+\")) {\n    if (value.indexOf(\"+\") !== 0) {\n      value = value.replace(/\\+/g, \"\");\n    }\n    if ((value.match(/\\+/g) || []).length > 1) {\n      value = \"+\" + value.replace(/\\+/g, \"\");\n    }\n  }\n\n  field.value.value = value;\n};\n\nconst isRequired = computed(() => {\n  if (!field.value.required) return false;\n  return checkFieldRequired(field.value);\n});\n</script>\n\n<style lang=\"scss\">\ninput[type=\"number\"]::-webkit-outer-spin-button,\ninput[type=\"number\"]::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n</style>\n"],"names":["props","__props","field","toRefs","checkFieldRequired","useOrderFormFieldsRequired","translationsStore","useTranslationsStore","settingStore","useSettingsStore","warningTextPhoneField","computed","_b","_a","updateValue","event","value","isRequired"],"mappings":"siBAqCA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAE1BE,EAAM,MAAM,QAAU,SACxBA,EAAM,MAAM,MAAQ,IAGhB,KAAA,CAAE,mBAAAE,CAAmB,EAAIC,EAA2B,EACpDC,EAAoBC,EAAqB,EACzCC,EAAeC,EAAiB,EAEhCC,EAAwBC,EAAS,IAAM,SAC3C,QACEC,GAAAC,EAAAL,EAAa,kBAAb,YAAAK,EAA8B,aAA9B,YAAAD,EAA0C,aAC1CN,EAAkB,gBAAgB,aAAA,CAErC,EAEKQ,EAAeC,GAAiB,CAEpC,IAAIC,EADUD,EAAM,OACF,MAEVC,EAAAA,EAAM,QAAQ,WAAY,EAAE,EAEhCA,EAAM,SAAS,GAAG,IAChBA,EAAM,QAAQ,GAAG,IAAM,IACjBA,EAAAA,EAAM,QAAQ,MAAO,EAAE,IAE5BA,EAAM,MAAM,KAAK,GAAK,CAAC,GAAG,OAAS,IACtCA,EAAQ,IAAMA,EAAM,QAAQ,MAAO,EAAE,IAIzCd,EAAM,MAAM,MAAQc,CACtB,EAEMC,EAAaN,EAAS,IACrBT,EAAM,MAAM,SACVE,EAAmBF,EAAM,KAAK,EADH,EAEnC"}