{"version":3,"file":"Default-DImoj4gJ.js","sources":["../../src/widget/features/calculator-fields/components/Range/styles/Default.vue"],"sourcesContent":["<template>\n  <Slider\n    style=\"margin: 10px 0\"\n    v-model=\"rawInput\"\n    :format=\"getFormatValue\"\n    :min=\"field.min\"\n    :max=\"field.max\"\n    :step=\"field.step\"\n    :disabled=\"field.disabled\"\n    @change=\"updateValue\"\n    show-tooltip=\"focus\"\n  ></Slider>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, ref } from \"vue\";\nimport { IRangeField } from \"@/widget/shared/types/fields\";\nimport Slider from \"@vueform/slider\";\n\ntype Props = {\n  field: IRangeField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\nconst rawInput = ref<number>(field.value.value);\n\nconst emit = defineEmits<{\n  (event: \"update\", value: string): void;\n}>();\n\nconst updateValue = (value: number) => {\n  emit(\"update\", value.toString());\n};\n\nconst getFormatValue = (num: number): string => {\n  const rounded = num.toFixed(2);\n  return parseFloat(rounded).toString();\n};\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["props","__props","field","toRefs","rawInput","ref","emit","__emit","updateValue","value","getFormatValue","num","rounded"],"mappings":"+NAuBA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EACxBI,EAAWC,EAAYH,EAAM,MAAM,KAAK,EAExCI,EAAOC,EAIPC,EAAeC,GAAkB,CAChCH,EAAA,SAAUG,EAAM,UAAU,CACjC,EAEMC,EAAkBC,GAAwB,CACxC,MAAAC,EAAUD,EAAI,QAAQ,CAAC,EACtB,OAAA,WAAWC,CAAO,EAAE,SAAS,CACtC"}