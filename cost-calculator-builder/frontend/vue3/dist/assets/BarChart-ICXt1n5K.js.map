{"version":3,"file":"BarChart-ICXt1n5K.js","sources":["../../src/admin/shared/ui/components/charts/BarChart.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-dashboard-card ccb-dashboard-card-chart ccb-bar-chart\">\n    <Skeleton v-if=\"isLoading\"></Skeleton>\n    <div\n      class=\"ccb-dashboard-card-wrapper\"\n      :class=\"{ 'ccb-is-loading': isLoading }\"\n    >\n      <div class=\"ccb-dashboard-chart-header\">\n        <div class=\"ccb-dashboard-chart-controls\">\n          <span>{{ chart.title }}</span>\n        </div>\n      </div>\n      <div class=\"ccb-dashboard-large-chart\">\n        <VueApexCharts\n          type=\"bar\"\n          height=\"320\"\n          :options=\"barChartOptions\"\n          :series=\"barChartSeries\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, toRefs } from \"vue\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport { IChartData } from \"@/admin/shared/types/analytics/api/response.type\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\nimport { Skeleton } from \"@/admin/shared/ui/components/Skeleton\";\n\ntype Props = {\n  chart: IChartData;\n  page: \"dashboard\" | \"single\";\n};\n\nconst props = defineProps<Props>();\nconst { chart } = toRefs(props);\n\nconst barChartOptions = ref({\n  chart: {\n    type: \"bar\",\n    toolbar: { show: false },\n  },\n  plotOptions: {\n    bar: {\n      horizontal: true,\n      barHeight: \"16px\",\n      borderRadius: 6,\n      distributed: false,\n    },\n  },\n  dataLabels: {\n    enabled: false,\n  },\n  xaxis: {\n    categories: chart.value.categories,\n    min: Math.min(...chart.value.series),\n    max: Math.max(...chart.value.series),\n    labels: {\n      style: {\n        colors: \"#888\",\n        fontSize: \"13px\",\n      },\n    },\n    axisBorder: { show: true, offsetX: -10 },\n    axisTicks: { show: true },\n  },\n  yaxis: {\n    labels: {\n      style: {\n        colors: \"#222\",\n        fontSize: \"14px\",\n      },\n    },\n  },\n  grid: {\n    borderColor: \"#f1f1f1\",\n    xaxis: { lines: { show: false } },\n    yaxis: { lines: { show: false } },\n    padding: { left: 0, right: 0 },\n  },\n  colors: [\"#27ae60\"],\n  tooltip: { enabled: true },\n  legend: { show: false },\n});\n\nconst barChartSeries = ref([\n  {\n    name: chart.value.title,\n    data: chart.value.series,\n  },\n]);\n\nconst isLoading = computed(() => {\n  const store = useAnalyticsStore();\n  return store.isLoading;\n});\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["props","__props","chart","toRefs","barChartOptions","ref","barChartSeries","isLoading","computed","useAnalyticsStore"],"mappings":"+nBAoCA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExBI,EAAkBC,EAAI,CAC1B,MAAO,CACL,KAAM,MACN,QAAS,CAAE,KAAM,EAAM,CACzB,EACA,YAAa,CACX,IAAK,CACH,WAAY,GACZ,UAAW,OACX,aAAc,EACd,YAAa,EAAA,CAEjB,EACA,WAAY,CACV,QAAS,EACX,EACA,MAAO,CACL,WAAYH,EAAM,MAAM,WACxB,IAAK,KAAK,IAAI,GAAGA,EAAM,MAAM,MAAM,EACnC,IAAK,KAAK,IAAI,GAAGA,EAAM,MAAM,MAAM,EACnC,OAAQ,CACN,MAAO,CACL,OAAQ,OACR,SAAU,MAAA,CAEd,EACA,WAAY,CAAE,KAAM,GAAM,QAAS,GAAI,EACvC,UAAW,CAAE,KAAM,EAAK,CAC1B,EACA,MAAO,CACL,OAAQ,CACN,MAAO,CACL,OAAQ,OACR,SAAU,MAAA,CACZ,CAEJ,EACA,KAAM,CACJ,YAAa,UACb,MAAO,CAAE,MAAO,CAAE,KAAM,GAAQ,EAChC,MAAO,CAAE,MAAO,CAAE,KAAM,GAAQ,EAChC,QAAS,CAAE,KAAM,EAAG,MAAO,CAAE,CAC/B,EACA,OAAQ,CAAC,SAAS,EAClB,QAAS,CAAE,QAAS,EAAK,EACzB,OAAQ,CAAE,KAAM,EAAM,CAAA,CACvB,EAEKI,EAAiBD,EAAI,CACzB,CACE,KAAMH,EAAM,MAAM,MAClB,KAAMA,EAAM,MAAM,MAAA,CACpB,CACD,EAEKK,EAAYC,EAAS,IACXC,EAAkB,EACnB,SACd"}