{"version":3,"file":"RangeTime-DXVZQcO_.js","sources":["../../src/widget/features/calculator-fields/components/TimePicker/styles/RangeTime.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-range-timePicker\">\n    <div class=\"ccb-range-timePicker__from\">\n      <VueDatePicker\n        v-model=\"from\"\n        time-picker\n        :is-24=\"format\"\n        minutes-grid-increment=\"5\"\n        @update:model-value=\"handleFromUpdate\"\n      >\n        <template #input-icon>\n          <i class=\"ccb-icon-timepicker-light-clock\"></i>\n        </template>\n      </VueDatePicker>\n    </div>\n    <div class=\"ccb-range-timePicker__separator\">\n      <span>to</span>\n    </div>\n    <div class=\"ccb-range-timePicker__to\">\n      <VueDatePicker\n        v-model=\"to\"\n        time-picker\n        :is-24=\"format\"\n        minutes-grid-increment=\"5\"\n        @update:model-value=\"handleToUpdate\"\n      >\n        <template #input-icon>\n          <i class=\"ccb-icon-timepicker-light-clock\"></i>\n        </template>\n      </VueDatePicker>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, watch, onMounted } from \"vue\";\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport { useCallbackStore } from \"@/widget/app/providers/stores/callbackStore.ts\";\n\nconst callbackStore = useCallbackStore();\n\nconst props = defineProps<{\n  format: boolean;\n  minInterval: string;\n  modelValue?: {\n    from?: { hours: number; minutes: number; seconds: number };\n    to?: { hours: number; minutes: number; seconds: number };\n  } | null;\n}>();\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst parseInterval = (interval: string): number => {\n  const match = interval.match(/^(\\d+)(h|m)$/);\n  if (!match) return 0;\n  const [, value, unit] = match;\n  return unit === \"h\" ? parseInt(value) * 60 : parseInt(value);\n};\n\nconst from = ref<Date | { hours: number; minutes: number; seconds: number }>(\n  props.modelValue?.from || new Date(),\n);\n\nconst to = ref<Date | { hours: number; minutes: number; seconds: number }>(\n  props.modelValue?.to || new Date(),\n);\n\nonMounted(() => {\n  if (props.minInterval) {\n    const initialFromTime =\n      from.value instanceof Date\n        ? {\n            hours: from.value.getHours(),\n            minutes: from.value.getMinutes(),\n            seconds: 0,\n          }\n        : from.value;\n\n    handleFromUpdate(initialFromTime);\n  }\n});\n\nconst changeFormat = (val: string) => {\n  const [timePart, period] = val.toLowerCase().split(\" \");\n  const [hours, minutes] = timePart.split(\":\").map(Number);\n\n  let convertedHours = hours;\n  if (period === \"pm\" && hours !== 12) {\n    convertedHours = hours + 12;\n  } else if (period === \"am\" && hours === 12) {\n    convertedHours = 0;\n  }\n\n  return {\n    hours: convertedHours,\n    minutes: minutes,\n    seconds: 0,\n  };\n};\n\ncallbackStore.add(\n  \"updateRangeTimePicker\",\n  (val: { start: string; end: string }) => {\n    from.value = changeFormat(val.start);\n    to.value = changeFormat(val.end);\n  },\n);\n\nconst toDateFromTimeObject = (time: {\n  hours: number;\n  minutes: number;\n  seconds?: number;\n}): Date => {\n  const date = new Date();\n  date.setHours(time.hours);\n  date.setMinutes(time.minutes);\n  date.setSeconds(time.seconds || 0);\n  return date;\n};\n\nconst handleFromUpdate = (newTime: {\n  hours: number;\n  minutes: number;\n  seconds: number;\n}) => {\n  from.value = newTime;\n\n  const fromDate = toDateFromTimeObject(newTime);\n\n  const interval = parseInterval(props.minInterval);\n  const newToDate = new Date(fromDate);\n  newToDate.setMinutes(newToDate.getMinutes() + interval);\n\n  to.value = {\n    hours: newToDate.getHours(),\n    minutes: newToDate.getMinutes(),\n    seconds: 0,\n  };\n};\n\nconst handleToUpdate = (newTime: {\n  hours: number;\n  minutes: number;\n  seconds: number;\n}) => {\n  to.value = newTime;\n\n  const toDate = toDateFromTimeObject(newTime);\n\n  const interval = parseInterval(props.minInterval);\n  const newFromDate = new Date(toDate);\n  newFromDate.setMinutes(newFromDate.getMinutes() - interval);\n\n  from.value = {\n    hours: newFromDate.getHours(),\n    minutes: newFromDate.getMinutes(),\n    seconds: 0,\n  };\n};\n\nwatch([from, to], (newTime: unknown) => {\n  if (!Array.isArray(newTime)) return;\n\n  const formattedTime = newTime.map((time) => {\n    if (time instanceof Date) {\n      return {\n        hours: time.getHours(),\n        minutes: time.getMinutes(),\n        seconds: 0,\n      };\n    }\n    return time;\n  });\n\n  emit(\"update:modelValue\", formattedTime);\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-range-timePicker {\n  display: flex;\n\n  &__separator {\n    padding: 0 10px;\n    border: 1px solid var(--ccb-fields-border-color);\n    background: var(--ccb-fields-bg-color);\n    border-right: none;\n    border-left: none;\n    min-height: 44px;\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n    color: var(--ccb-text-color);\n\n    span {\n      font-size: var(--ccb-fields-button-size);\n\n      @media only screen and (max-width: 480px) {\n        font-size: var(--ccb-mobile-fields-button-size);\n      }\n    }\n  }\n\n  &__from {\n    input {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &__to {\n    input {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n}\n</style>\n"],"names":["callbackStore","useCallbackStore","props","__props","emit","__emit","parseInterval","interval","match","value","unit","from","ref","_a","to","_b","onMounted","initialFromTime","handleFromUpdate","changeFormat","val","timePart","period","hours","minutes","convertedHours","toDateFromTimeObject","time","date","newTime","fromDate","newToDate","handleToUpdate","toDate","newFromDate","watch","formattedTime"],"mappings":"+iBAwCA,MAAMA,EAAgBC,EAAiB,EAEjCC,EAAQC,EASRC,EAAOC,EAEPC,EAAiBC,GAA6B,CAC5C,MAAAC,EAAQD,EAAS,MAAM,cAAc,EACvC,GAAA,CAACC,EAAc,MAAA,GACnB,KAAM,CAAG,CAAAC,EAAOC,CAAI,EAAIF,EACxB,OAAOE,IAAS,IAAM,SAASD,CAAK,EAAI,GAAK,SAASA,CAAK,CAC7D,EAEME,EAAOC,IACXC,EAAAX,EAAM,aAAN,YAAAW,EAAkB,OAAQ,IAAI,IAChC,EAEMC,EAAKF,IACTG,EAAAb,EAAM,aAAN,YAAAa,EAAkB,KAAM,IAAI,IAC9B,EAEAC,EAAU,IAAM,CACd,GAAId,EAAM,YAAa,CACf,MAAAe,EACJN,EAAK,iBAAiB,KAClB,CACE,MAAOA,EAAK,MAAM,SAAS,EAC3B,QAASA,EAAK,MAAM,WAAW,EAC/B,QAAS,GAEXA,EAAK,MAEXO,EAAiBD,CAAe,CAAA,CAClC,CACD,EAEK,MAAAE,EAAgBC,GAAgB,CAC9B,KAAA,CAACC,EAAUC,CAAM,EAAIF,EAAI,YAAY,EAAE,MAAM,GAAG,EAChD,CAACG,EAAOC,CAAO,EAAIH,EAAS,MAAM,GAAG,EAAE,IAAI,MAAM,EAEvD,IAAII,EAAiBF,EACjB,OAAAD,IAAW,MAAQC,IAAU,GAC/BE,EAAiBF,EAAQ,GAChBD,IAAW,MAAQC,IAAU,KACrBE,EAAA,GAGZ,CACL,MAAOA,EACP,QAAAD,EACA,QAAS,CACX,CACF,EAEcxB,EAAA,IACZ,wBACCoB,GAAwC,CAClCT,EAAA,MAAQQ,EAAaC,EAAI,KAAK,EAChCN,EAAA,MAAQK,EAAaC,EAAI,GAAG,CAAA,CAEnC,EAEM,MAAAM,EAAwBC,GAIlB,CACJ,MAAAC,MAAW,KACZ,OAAAA,EAAA,SAASD,EAAK,KAAK,EACnBC,EAAA,WAAWD,EAAK,OAAO,EACvBC,EAAA,WAAWD,EAAK,SAAW,CAAC,EAC1BC,CACT,EAEMV,EAAoBW,GAIpB,CACJlB,EAAK,MAAQkB,EAEP,MAAAC,EAAWJ,EAAqBG,CAAO,EAEvCtB,EAAWD,EAAcJ,EAAM,WAAW,EAC1C6B,EAAY,IAAI,KAAKD,CAAQ,EACnCC,EAAU,WAAWA,EAAU,WAAW,EAAIxB,CAAQ,EAEtDO,EAAG,MAAQ,CACT,MAAOiB,EAAU,SAAS,EAC1B,QAASA,EAAU,WAAW,EAC9B,QAAS,CACX,CACF,EAEMC,EAAkBH,GAIlB,CACJf,EAAG,MAAQe,EAEL,MAAAI,EAASP,EAAqBG,CAAO,EAErCtB,EAAWD,EAAcJ,EAAM,WAAW,EAC1CgC,EAAc,IAAI,KAAKD,CAAM,EACnCC,EAAY,WAAWA,EAAY,WAAW,EAAI3B,CAAQ,EAE1DI,EAAK,MAAQ,CACX,MAAOuB,EAAY,SAAS,EAC5B,QAASA,EAAY,WAAW,EAChC,QAAS,CACX,CACF,EAEA,OAAAC,EAAM,CAACxB,EAAMG,CAAE,EAAIe,GAAqB,CACtC,GAAI,CAAC,MAAM,QAAQA,CAAO,EAAG,OAE7B,MAAMO,EAAgBP,EAAQ,IAAKF,GAC7BA,aAAgB,KACX,CACL,MAAOA,EAAK,SAAS,EACrB,QAASA,EAAK,WAAW,EACzB,QAAS,CACX,EAEKA,CACR,EAEDvB,EAAK,oBAAqBgC,CAAa,CAAA,CACxC"}