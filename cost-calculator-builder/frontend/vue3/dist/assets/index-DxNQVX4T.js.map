{"version":3,"file":"index-DxNQVX4T.js","sources":["../../src/widget/features/calculator-fields/components/Group/Group.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-group\"\n    :class=\"{ 'ccb-group-collapsed': collapsed, [additionalClasses]: true }\"\n  >\n    <div class=\"ccb-group__header\" @click=\"toggleCollapse\">\n      <div class=\"ccb-group__icon\" v-if=\"collapsible\">\n        <i class=\"ccb-icon-Path-3514\"></i>\n      </div>\n      <div class=\"ccb-group__label\" v-if=\"showName\">{{ groupLabel }}</div>\n      <ProBadge />\n    </div>\n    <Transition name=\"fade\">\n      <div class=\"ccb-group__body\" v-if=\"!collapsed\">\n        <div class=\"ccb-group__fields\" ref=\"fields\">\n          <template v-for=\"groupFieldMap in field.groupElements\">\n            <template v-for=\"groupElement in getFieldsFromMap(groupFieldMap)\">\n              <CalculatorField\n                :name=\"groupElement.fieldName\"\n                :field=\"groupElement\"\n              />\n            </template>\n          </template>\n        </div>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, toRefs, onMounted } from \"vue\";\nimport CalculatorField from \"@/widget/features/calculator-fields/CalculatorField.vue\";\nimport { IGroupField, Field } from \"@/widget/shared/types/fields\";\nimport ProBadge from \"@/widget/shared/ui/components/Pro-badge/ProBadge.vue\";\n\ntype Props = {\n  field: IGroupField;\n};\n\nonMounted(() => {\n  if (collapsedDefault.value) {\n    collapsed.value = true;\n  }\n});\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\nconst collapsed = ref(false);\n\nconst groupLabel = computed(() => {\n  return field.value.label ? field.value.label : \"Group\";\n});\n\nconst getFieldsFromMap = computed(() => {\n  return (data: Map<string, Field>): Field[] => {\n    return Array.from(data.values());\n  };\n});\n\nconst showName = computed(() => {\n  return field.value.showTitle;\n});\n\nconst collapsible = computed(() => {\n  return field.value.collapsible;\n});\n\nconst collapsedDefault = computed(() => {\n  return field.value.collapse;\n});\n\nconst toggleCollapse = () => {\n  if (collapsible.value) {\n    collapsed.value = !collapsed.value;\n  }\n};\n\nconst additionalClasses = computed(() => {\n  return field.value?.additionalStyles || \"\";\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-group {\n  border-bottom: 2px solid var(--ccb-container-dark-color);\n  padding-bottom: 20px;\n\n  &__fields {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  &.ccb-group-collapsed {\n    .ccb-group__icon {\n      transform: rotate(180deg);\n    }\n  }\n\n  &__header {\n    color: var(--ccb-text-color);\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    cursor: pointer;\n    margin-block: 10px;\n  }\n\n  &__label {\n    font-size: var(--ccb-field-size);\n    font-weight: var(--ccb-field-label-weight);\n    color: var(--ccb-text-color);\n  }\n\n  &__icon {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 12px;\n    transition: 300ms ease;\n  }\n}\n</style>\n"],"names":["onMounted","collapsedDefault","collapsed","props","__props","field","toRefs","ref","groupLabel","computed","getFieldsFromMap","data","showName","collapsible","toggleCollapse","additionalClasses","_a"],"mappings":"gmBAuCAA,EAAU,IAAM,CACVC,EAAiB,QACnBC,EAAU,MAAQ,GACpB,CACD,EAED,MAAMC,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EACxBD,EAAYK,EAAI,EAAK,EAErBC,EAAaC,EAAS,IACnBJ,EAAM,MAAM,MAAQA,EAAM,MAAM,MAAQ,OAChD,EAEKK,EAAmBD,EAAS,IACxBE,GACC,MAAM,KAAKA,EAAK,OAAA,CAAQ,CAElC,EAEKC,EAAWH,EAAS,IACjBJ,EAAM,MAAM,SACpB,EAEKQ,EAAcJ,EAAS,IACpBJ,EAAM,MAAM,WACpB,EAEKJ,EAAmBQ,EAAS,IACzBJ,EAAM,MAAM,QACpB,EAEKS,EAAiB,IAAM,CACvBD,EAAY,QACJX,EAAA,MAAQ,CAACA,EAAU,MAEjC,EAEMa,EAAoBN,EAAS,IAAM,OAChC,QAAAO,EAAAX,EAAM,QAAN,YAAAW,EAAa,mBAAoB,EAAA,CACzC"}