{"version":3,"mappings":";+5BAoEA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExBI,EAAeC,EAAY,EAAE,EAE7BC,EAAkBC,EAAmB,EACrCC,EAAoBC,EAAqB,EACzCC,EAAaC,EAAe,EAE5BC,EAAsBC,EAAS,IAAM,OAElC,QAAAC,EADcC,EAAiB,EAClB,kBAAb,YAAAD,EAA8B,cAAe,GACrD,EAEKE,EAAoBH,EAAS,IAAM,OACjC,MAAAI,GAAOH,EAAAZ,EAAM,QAAN,YAAAY,EAAa,UAC1B,OAAIG,IAAS,OACJC,EAAqB,IAAMC,EAAA,WAAO,oBAAuB,qBAAC,EACxDF,IAAS,QACXC,EAAqB,IAAMC,EAAA,WAAO,qBAAwB,qBAAC,EACzDF,IAAS,QACXC,EAAqB,IAAMC,EAAA,WAAO,qBAAwB,uCAAC,EACzDF,IAAS,cACXC,EAAqB,IAAMC,EAAA,WAAO,0BAA6B,qBAAC,EAGlE,GACR,EAEKC,EAAeC,GAAkB,SACrCjB,EAAa,MAAQ,KAEnBU,EAAAZ,EAAM,QAAN,YAAAY,EAAa,aAAc,SAC3B,CAACQ,EAAcD,CAAK,GACpBA,EAAM,KAAK,IAAM,GAEjBjB,EAAa,MAAQ,kBAErBmB,EAAArB,EAAM,QAAN,YAAAqB,EAAa,aAAc,eAC3B,CAACC,EAAYH,CAAK,GAClBA,EAAM,KAAK,IAAM,KAEjBjB,EAAa,MAAQ,eAGvBF,EAAM,MAAM,aAAemB,EAC3BX,EAAW,YAAYR,EAAM,MAAM,MAAOA,EAAM,KAAK,CACvD,EAEMuB,EAAaZ,EAAS,IAExBT,EAAa,QAAU,iBACvBA,EAAa,QAAU,cAEhB,GAGFM,EAAW,mBAAmBR,EAAM,KAAK,CACjD,EAEKwB,EAAoBb,EAAS,IAAM,OAChC,QAAAC,EAAAZ,EAAM,QAAN,YAAAY,EAAa,mBAAoB,GACzC","names":["props","__props","field","toRefs","requiredType","ref","appearanceStore","useAppearanceStore","translationsStore","useTranslationsStore","fieldStore","useFieldsStore","requiredWarningText","computed","_a","useSettingsStore","currentComponents","type","defineAsyncComponent","__vitePreload","updateValue","value","validateEmail","_b","validateUrl","isRequired","additionalClasses"],"ignoreList":[],"sources":["../../src/widget/features/calculator-fields/components/ValidatedForm/ValidatedForm.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-field ccb-field-quantity ccb-field-form-fields\"\n    :class=\"{\n      required: isRequired,\n      'ccb-field-disabled': field.disabled,\n      [additionalClasses]: true,\n    }\"\n  >\n    <div class=\"ccb-field__label\">\n      <div class=\"ccb-required-tooltip\" v-if=\"isRequired\">\n        <RequiredHint\n          v-if=\"requiredType === 'invalid_email'\"\n          :text=\"translationsStore.getTranslations.validEmailAddress\"\n        />\n        <RequiredHint\n          v-else-if=\"requiredType === 'invalid_url'\"\n          :text=\"translationsStore.getTranslations.enterValidUrl\"\n        />\n        <RequiredHint v-else :text=\"requiredWarningText\" />\n      </div>\n      <div class=\"ccb-field__title\">\n        {{ field.label\n        }}<span v-if=\"field.required\" class=\"ccb-field-required-mark\">*</span\n        ><ProBadge />\n      </div>\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'before'\"\n      class=\"ccb-field__descriptions ccb-before\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n\n    <div class=\"ccb-field__input-wrapper\">\n      <component :is=\"currentComponents\" @update=\"updateValue\" :field=\"field\" />\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'after'\"\n      class=\"ccb-field__descriptions ccb-after\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed, defineAsyncComponent, ref } from \"vue\";\nimport { useAppearanceStore } from \"@/widget/app/providers/stores/appearanceStore.ts\";\nimport { IValidatedFormField } from \"@/widget/shared/types/fields/input.type\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore.ts\";\nimport { validateEmail } from \"@/widget/shared/utils/validate-email.utils\";\nimport { validateUrl } from \"@/widget/shared/utils/validate-url.utils\";\nimport ProBadge from \"@/widget/shared/ui/components/Pro-badge/ProBadge.vue\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore.ts\";\n\ntype Props = {\n  field: IValidatedFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst requiredType = ref<string>(\"\");\n\nconst appearanceStore = useAppearanceStore();\nconst translationsStore = useTranslationsStore();\nconst fieldStore = useFieldsStore();\n\nconst requiredWarningText = computed(() => {\n  const settingStore = useSettingsStore();\n  return settingStore.getWarningTexts?.requiredMsg || \"\";\n});\n\nconst currentComponents = computed(() => {\n  const type = field.value?.fieldType;\n  if (type === \"name\") {\n    return defineAsyncComponent(() => import(\"./components/Name.vue\"));\n  } else if (type === \"email\") {\n    return defineAsyncComponent(() => import(\"./components/Email.vue\"));\n  } else if (type === \"phone\") {\n    return defineAsyncComponent(() => import(\"./components/Phone.vue\"));\n  } else if (type === \"website_url\") {\n    return defineAsyncComponent(() => import(\"./components/WebsiteUrl.vue\"));\n  }\n\n  return \"\";\n});\n\nconst updateValue = (value: string) => {\n  requiredType.value = \"\";\n  if (\n    field.value?.fieldType === \"email\" &&\n    !validateEmail(value) &&\n    value.trim() !== \"\"\n  ) {\n    requiredType.value = \"invalid_email\";\n  } else if (\n    field.value?.fieldType === \"website_url\" &&\n    !validateUrl(value) &&\n    value.trim() !== \"\"\n  ) {\n    requiredType.value = \"invalid_url\";\n  }\n\n  field.value.displayValue = value;\n  fieldStore.updateField(field.value.alias, field.value);\n};\n\nconst isRequired = computed(() => {\n  if (\n    requiredType.value === \"invalid_email\" ||\n    requiredType.value === \"invalid_url\"\n  ) {\n    return true;\n  }\n\n  return fieldStore.checkFieldRequired(field.value);\n});\n\nconst additionalClasses = computed(() => {\n  return field.value?.additionalStyles || \"\";\n});\n</script>\n\n<style lang=\"scss\">\n@use \"@/styles/widget/_mixins.scss\" as mixins;\n\n.ccb-radio-field {\n}\n</style>\n"],"file":"assets/index-C8UT3sy7.js"}