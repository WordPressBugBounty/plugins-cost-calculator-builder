{"version":3,"mappings":"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","names":["analyticsStore","useAnalyticsStore","getSingleCharts","computed","getChartComponent","type","defineAsyncComponent","__vitePreload","getChartsSolidPageSettings","props","__props","emit","__emit","items","current","toRefs","showList","ref","dropdownRef","toggleList","selectItem","item","closeDropdown","handleClickOutside","event","onMounted","onUnmounted","cart","updateWidgetSettings","action","key","formatValue","number","num","translationsStore","useAdminTranslationsStore","translations","selectedWidget","getSingleCarts","getWidgetsSolidPageSettings","getAvailableWidgets","singlePageCartsWidgetKeys","widget","addWidget","_a","allWidgets","getPageSettings","handleWidgetSettingsUpdate","singlePageSettings"],"ignoreList":[],"sources":["../../src/admin/widgets/Analytics/components/ChartsSection.vue","../../src/admin/shared/ui/components/WidgetSettings/WidgetSettings.vue","../../src/admin/shared/ui/components/LargeWidget/LargeWidget.vue","../../src/admin/shared/ui/components/SmallWidget/SmallWidget.vue","../../src/admin/widgets/Analytics/components/WidgetsSection.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-singlepage-content\">\n    <template v-for=\"chart in getSingleCharts\" :key=\"chart.key\">\n      <component\n        :is=\"getChartComponent(chart.type)\"\n        :key=\"chart.key\"\n        :chart=\"chart\"\n        page=\"single\"\n        v-if=\"getChartsSolidPageSettings[chart.key]\"\n      />\n    </template>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, defineAsyncComponent } from \"vue\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\n\nconst analyticsStore = useAnalyticsStore();\n\nconst getSingleCharts = computed(() => {\n  return analyticsStore.getSingleCharts;\n});\n\nconst getChartComponent = computed(() => {\n  return (type: string) => {\n    if (type === \"bar\") {\n      return defineAsyncComponent(\n        () => import(\"@/admin/shared/ui/components/charts/BarChart.vue\"),\n      );\n    } else if (type === \"columns\") {\n      return defineAsyncComponent(\n        () => import(\"@/admin/shared/ui/components/charts/ColumnsChart.vue\"),\n      );\n    } else if (type === \"line\") {\n      return defineAsyncComponent(\n        () => import(\"@/admin/shared/ui/components/charts/LinearChart.vue\"),\n      );\n    } else if (type === \"pie\") {\n      return defineAsyncComponent(\n        () => import(\"@/admin/shared/ui/components/charts/PieChart.vue\"),\n      );\n    }\n  };\n});\n\nconst getChartsSolidPageSettings = computed(() => {\n  return analyticsStore.getChartsPageSettings;\n});\n</script>\n\n<style scoped lang=\"scss\">\n.ccb-singlepage-content {\n  flex: 1 1 0;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n}\n</style>\n","<template>\n  <div class=\"ccb-widget-settings-wrapper\" ref=\"dropdownRef\">\n    <div class=\"ccb-widget-settings-block\" @click=\"toggleList\">\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n    <div v-if=\"showList\" class=\"ccb-widget-settings-dropdown\">\n      <div class=\"ccb-widget-settings-list\">\n        <div\n          v-for=\"item in items\"\n          :key=\"item.value\"\n          class=\"ccb-widget-settings-item\"\n          @click=\"selectItem(item)\"\n        >\n          {{ item.label }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, defineEmits, toRefs, onMounted, onUnmounted } from \"vue\";\n\nconst props = defineProps<{\n  items: { value: string; label: string }[];\n  current?: string;\n}>();\n\nconst emit = defineEmits<{\n  (e: \"update\", action: string, key: string): void;\n}>();\n\nconst { items, current } = toRefs(props);\n\nconst showList = ref(false);\nconst dropdownRef = ref<HTMLElement | null>(null);\n\nfunction toggleList() {\n  showList.value = !showList.value;\n}\n\nfunction selectItem(item: { value: string; label: string }) {\n  showList.value = false;\n  emit(\"update\", item.value, current.value || \"\");\n}\n\nconst closeDropdown = (): void => {\n  showList.value = false;\n};\n\nconst handleClickOutside = (event: MouseEvent): void => {\n  if (dropdownRef.value && !dropdownRef.value.contains(event.target as Node)) {\n    closeDropdown();\n  }\n};\n\nonMounted(() => {\n  document.addEventListener(\"click\", handleClickOutside);\n});\n\nonUnmounted(() => {\n  document.removeEventListener(\"click\", handleClickOutside);\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-widget-settings-wrapper {\n  position: relative;\n  width: 10px;\n  height: 10px;\n}\n\n.ccb-widget-settings-block {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  cursor: pointer;\n  span {\n    width: 4px;\n    height: 4px;\n    border-radius: 50%;\n    background: rgba(22, 36, 50, 0.35);\n  }\n}\n\n.ccb-widget-settings-value {\n  flex: 1 1 auto;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.ccb-widget-settings-dropdown {\n  position: absolute;\n  top: -6px;\n  left: -100%;\n  width: 100%;\n  background: #fff;\n  border: 1.5px solid #e3e6ea;\n  border-radius: 12px;\n  box-shadow: 0 2px 8px 0 rgba(16, 30, 54, 0.06);\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  z-index: 10;\n  min-width: 110px;\n  transform: translateX(-95%);\n}\n\n.ccb-widget-settings-item {\n  height: 32px;\n  padding: 0 16px;\n  cursor: pointer;\n  color: rgba(22, 36, 50, 0.85);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n}\n\n.ccb-widget-settings-item.selected {\n  background: #f5f7fa;\n}\n\n.ccb-widget-settings-item:hover {\n  background: #f5f7fa;\n}\n</style>\n","<template>\n  <div class=\"ccb-dashboard-card card-wrapper\">\n    <Skeleton v-if=\"analyticsStore.isLoading\" />\n    <div\n      class=\"ccb-dashboard-card-wrapper\"\n      :class=\"{ 'is-loading': analyticsStore.isLoading }\"\n    >\n      <div class=\"ccb-dashboard-content\">\n        <div class=\"ccb-dashboard-content-header\">\n          <div class=\"ccb-dashboard-title\">\n            {{ cart.title }}\n            <span\n              class=\"ccb-dashboard-currency\"\n              v-if=\"currency && cart.key === 'revenue'\"\n            >\n              ({{ currency }})\n            </span>\n          </div>\n          <div class=\"ccb-dashboard-sub\">\n            <WidgetSettings\n              :items=\"items\"\n              @update=\"updateWidgetSettings\"\n              :current=\"cart.key\"\n            />\n          </div>\n        </div>\n        <div class=\"ccb-dashboard-content-footer\">\n          <div class=\"ccb-dashboard-value\">\n            {{ formatValue(cart.value) }}\n          </div>\n        </div>\n      </div>\n      <div class=\"ccb-dashboard-chart\">\n        <VueApexCharts\n          :options=\"cart.options\"\n          :series=\"cart.series\"\n          width=\"100%\"\n          height=\"24\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed } from \"vue\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\nimport { WidgetSettings } from \"@/admin/shared/ui/components/WidgetSettings\";\nimport { Skeleton } from \"@/admin/shared/ui/components/Skeleton\";\nimport { IAnalyticsCarts } from \"@/admin/shared/types/analytics/analyticsCarts.type\";\nimport VueApexCharts from \"vue3-apexcharts\";\n\nconst analyticsStore = useAnalyticsStore();\n\nconst emit = defineEmits<{\n  (e: \"change\", action: string, key: string): void;\n}>();\n\nconst props = defineProps<{\n  cart: IAnalyticsCarts;\n  items: { value: string; label: string }[];\n  currency?: string;\n}>();\n\nconst { cart, items } = toRefs(props);\n\nconst updateWidgetSettings = (action: string, key: string) => {\n  emit(\"change\", action, key);\n};\n\nconst formatValue = computed(() => {\n  return (number: string) => {\n    const num = parseFloat(number);\n    if (num > 1000) {\n      return (num / 1000).toFixed(1) + \"k\";\n    }\n    return num;\n  };\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-dashboard-card {\n  min-height: 130px !important;\n  height: 130px !important;\n}\n</style>\n","<template>\n  <div class=\"ccb-dashboard-card card-wrapper\">\n    <Skeleton v-if=\"analyticsStore.isLoading\" />\n    <div\n      class=\"ccb-dashboard-card-wrapper\"\n      :class=\"{ 'is-loading': analyticsStore.isLoading }\"\n    >\n      <div class=\"ccb-dashboard-content\">\n        <div class=\"ccb-dashboard-content-header\">\n          <div class=\"ccb-dashboard-title\">\n            {{ cart.title }}\n            <span\n              class=\"ccb-dashboard-currency\"\n              v-if=\"currency && cart.key === 'revenue'\"\n            >\n              ({{ currency }})\n            </span>\n          </div>\n          <div class=\"ccb-dashboard-sub\">\n            <WidgetSettings\n              :items=\"items\"\n              @update=\"updateWidgetSettings\"\n              :current=\"cart.key\"\n            />\n          </div>\n        </div>\n        <div class=\"ccb-dashboard-content-footer\">\n          <div class=\"ccb-dashboard-value\">\n            {{ formatValue(cart.value) }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed } from \"vue\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\nimport { WidgetSettings } from \"@/admin/shared/ui/components/WidgetSettings\";\nimport { Skeleton } from \"@/admin/shared/ui/components/Skeleton\";\nimport { IAnalyticsCarts } from \"@/admin/shared/types/analytics/analyticsCarts.type\";\n\nconst analyticsStore = useAnalyticsStore();\n\nconst emit = defineEmits<{\n  (e: \"change\", action: string, key: string): void;\n}>();\n\nconst props = defineProps<{\n  cart: IAnalyticsCarts;\n  items: { value: string; label: string }[];\n  currency?: string;\n}>();\n\nconst { cart, items } = toRefs(props);\n\nconst updateWidgetSettings = (action: string, key: string) => {\n  emit(\"change\", action, key);\n};\n\nconst formatValue = computed(() => {\n  return (number: string) => {\n    const num = parseFloat(number);\n    if (num > 1000) {\n      return (num / 1000).toFixed(1) + \"k\";\n    }\n    return num;\n  };\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ccb-dashboard-card {\n  min-width: 46%;\n  max-width: 50%;\n  min-height: 80px !important;\n  height: auto;\n}\n\n.ccb-dashboard-content {\n  justify-content: space-between;\n}\n\n.ccb-dashboard-value {\n  font-size: 18px !important;\n}\n\n.ccb-dashboard-title {\n  width: 80%;\n}\n</style>\n","<template>\n  <div class=\"ccb-singlepage-sidebar\">\n    <div class=\"ccb-singlepage-add-widget-container\">\n      <div class=\"ccb-singlepage-widgets-options\">\n        <div class=\"ccb-singlepage-widget-option\">\n          <span>{{ translations.type }}</span>\n          <div class=\"ccb-singlepage-widget-option-select\">\n            <select v-model=\"selectedWidget\">\n              <option value=\"\" selected>{{ translations.selectWidget }}</option>\n              <option :value=\"widget.key\" v-for=\"widget in getAvailableWidgets\">\n                {{ widget.title }}\n              </option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <button\n        class=\"ccb-singlepage-add-widget\"\n        :class=\"{\n          'ccb-is-loading-for-settings':\n            analyticsStore.isLoading || !selectedWidget,\n        }\"\n        @click.prevent=\"addWidget\"\n      >\n        {{ translations.addWidget }}\n      </button>\n    </div>\n    <div class=\"ccb-dashboard-row\">\n      <template v-for=\"(cart, i) in getSingleCarts\" :key=\"i\">\n        <LargeWidget\n          v-if=\"\n            getWidgetsSolidPageSettings[cart.key || ''] && cart.size === 'large'\n          \"\n          :cart=\"cart\"\n          :items=\"items\"\n          @change=\"handleWidgetSettingsUpdate\"\n          :currency=\"analyticsStore.getCurrency\"\n        />\n        <SmallWidget\n          v-if=\"\n            getWidgetsSolidPageSettings[cart.key || ''] && cart.size === 'small'\n          \"\n          :cart=\"cart\"\n          :items=\"items\"\n          @change=\"handleWidgetSettingsUpdate\"\n          :currency=\"analyticsStore.getCurrency\"\n        />\n      </template>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from \"vue\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\nimport { LargeWidget } from \"@/admin/shared/ui/components/LargeWidget\";\nimport { SmallWidget } from \"@/admin/shared/ui/components/SmallWidget\";\nimport { useAdminTranslationsStore } from \"@/admin/store/analytics/translationsStore\";\n\nconst analyticsStore = useAnalyticsStore();\nconst translationsStore = useAdminTranslationsStore();\n\nconst translations = computed(() => translationsStore.getTranslations);\n\nconst selectedWidget = ref<string>(\"\");\n\nconst getSingleCarts = computed(() => {\n  return analyticsStore.getSingleCarts;\n});\n\nconst items = ref<{ value: string; label: string }[]>([\n  { value: \"hide\", label: translations.value.hide },\n  { value: \"small/large\", label: translations.value.smallLarge },\n  { value: \"delete\", label: translations.value.deleted },\n]);\n\nconst getWidgetsSolidPageSettings = computed(() => {\n  return analyticsStore.getWidgetsPageSettings;\n});\n\nconst getAvailableWidgets = computed(() => {\n  const singlePageCartsWidgetKeys = analyticsStore.getSingleCarts.map(\n    (widget) => widget.key,\n  );\n\n  return analyticsStore.getAvailableWidgets.filter(\n    (widget) => !singlePageCartsWidgetKeys.includes(widget.key),\n  );\n});\n\nconst addWidget = () => {\n  if (selectedWidget.value?.trim()) {\n    const exists = analyticsStore.getSingleCarts.find((widget) => {\n      return widget.key === selectedWidget.value.trim();\n    });\n\n    if (exists) {\n      return;\n    }\n\n    const widget = getAvailableWidgets.value.find(\n      (widget) => widget.key === selectedWidget.value,\n    );\n\n    if (widget) {\n      widget.size = \"large\";\n      widget.options = {\n        ...widget.options,\n        chart: {\n          ...widget.options.chart,\n        },\n      };\n\n      const allWidgets = [...analyticsStore.getSingleCarts, widget];\n      const getPageSettings = analyticsStore.getSolidPageSettings;\n      if (!getPageSettings[\"widgets\"]) {\n        getPageSettings[\"widgets\"] = {};\n      }\n\n      getPageSettings[\"widgets\"][widget.key || \"\"] = true;\n      analyticsStore.updatePageSettings(getPageSettings);\n      analyticsStore.updateSingleCarts(allWidgets);\n      analyticsStore.saveWidgets();\n      analyticsStore.savePageSettings();\n    }\n  }\n\n  selectedWidget.value = \"\";\n};\n\nconst handleWidgetSettingsUpdate = (action: string, key: string) => {\n  const widget = analyticsStore.getSingleCarts.find(\n    (widget) => widget.key === key,\n  );\n\n  if (!widget) {\n    return;\n  }\n\n  if (action === \"hide\") {\n    const singlePageSettings = analyticsStore.getSolidPageSettings;\n    if (widget.key && widget.key in singlePageSettings[\"widgets\"]) {\n      singlePageSettings[\"widgets\"][widget.key] = false;\n      analyticsStore.updatePageSettings(singlePageSettings);\n      analyticsStore.saveWidgets();\n      analyticsStore.savePageSettings();\n    }\n  }\n\n  if (action === \"small/large\") {\n    widget.size = widget.size === \"large\" ? \"small\" : \"large\";\n    analyticsStore.updateSingleCarts(analyticsStore.getSingleCarts);\n    analyticsStore.saveWidgets();\n  }\n\n  if (action === \"delete\") {\n    const singlePageSettings = analyticsStore.getSolidPageSettings;\n    if (widget.key && widget.key in singlePageSettings[\"widgets\"]) {\n      delete singlePageSettings[\"widgets\"][widget.key];\n      const allWidgets = analyticsStore.getSingleCarts.filter(\n        (widget) => widget.key !== key,\n      );\n      analyticsStore.updateSingleCarts(allWidgets);\n      analyticsStore.updatePageSettings(singlePageSettings);\n      analyticsStore.saveWidgets();\n      analyticsStore.savePageSettings();\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.ccb-dashboard-row {\n  flex-wrap: wrap;\n}\n\n.ccb-singlepage-sidebar {\n  width: 280px;\n  min-width: 220px;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  .ccb-singlepage-add-widget-container {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 8px;\n  }\n\n  .ccb-singlepage-widgets-options {\n    padding: 26px;\n    background: #fff;\n    border-radius: 12px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);\n    display: flex;\n    width: 100%;\n    box-sizing: border-box;\n    flex: 1;\n    flex-direction: column;\n    row-gap: 16px;\n\n    .ccb-singlepage-widget-option {\n      width: 100%;\n\n      span {\n        font-size: 14px;\n        font-weight: 500;\n        color: #333333;\n        text-indent: 3px;\n        display: block;\n        margin-bottom: 4px;\n      }\n\n      select {\n        width: 100%;\n        display: flex;\n        align-items: center;\n        background: #ffffff;\n        padding: 0 10px;\n        border-radius: 8px;\n        border: 1px solid #e0e0e0;\n        font-size: 14px;\n        font-weight: 400;\n        color: #333333;\n        cursor: pointer;\n        height: 40px;\n        outline: none;\n        box-shadow: none;\n      }\n    }\n  }\n}\n\n.ccb-singlepage-add-widget {\n  width: 100%;\n  padding: 10px 0;\n  color: rgba(22, 36, 50, 0.85);\n  border-radius: 8px;\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 8px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  border: none;\n  outline: none;\n\n  border-radius: 8px;\n  background: rgba(22, 36, 50, 0.1);\n\n  &:hover {\n    background: rgba(22, 36, 50, 0.15);\n  }\n}\n\n.ccb-dashboard-card-wrapper {\n  min-height: 90px !important;\n}\n\n@media (max-width: 900px) {\n  .ccb-singlepage-layout {\n    flex-direction: column;\n    gap: 16px;\n  }\n  .ccb-singlepage-sidebar {\n    width: 100%;\n    max-width: 100%;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 8px;\n  }\n}\n\n.ccb-singlepage-sidebar {\n  .ccb-dashboard-card {\n    row-gap: 16px !important;\n    width: 100% !important;\n  }\n}\n</style>\n"],"file":"assets/SinglePage-D3gSsw0L.js"}