{"version":3,"file":"useMultiOptionChildShared-DVdYxyg2.js","sources":["../../src/widget/actions/fields/composable/useMultiOptionChildShared.ts"],"sourcesContent":["import { toRefs, computed, ref, onMounted, watch } from \"vue\";\nimport { IMultiOptionsField, IOptions } from \"@/widget/shared/types/fields\";\nimport { colorFilter } from \"@/widget/shared/utils/color-filter.utils\";\nimport { useAppearanceStore } from \"@/widget/app/providers/stores/appearanceStore\";\n\nexport function useMultiOptionChildShared(\n  props: {\n    field: IMultiOptionsField;\n    values: string[];\n    repeater?: number;\n  },\n  emit: (event: \"update\", value: string) => void,\n) {\n  const { field, values } = toRefs(props);\n  const optionValues = ref<string[]>([]);\n\n  watch(\n    () => props.values,\n    (newOptions) => {\n      optionValues.value = newOptions;\n    },\n  );\n\n  const repeater = ref<number | undefined>(field.value.repeaterIdx);\n  const alias = ref<string>(field.value.alias);\n\n  const getName = computed(() => {\n    return typeof repeater?.value !== \"undefined\"\n      ? `repeater_${repeater.value}_${alias.value}`\n      : alias.value;\n  });\n\n  const changeValue = () => {\n    const optionsLength = optionValues.value.length;\n    if (+field.value.maxAllowedOptions < optionsLength) {\n      optionValues.value.shift();\n    }\n\n    const newValue: string = Object.values(optionValues.value).join(\",\");\n    emit(\"update\", newValue);\n  };\n\n  const getPriceValue = computed(() => {\n    return (o: IOptions) => {\n      const val = (o?.optionValue || \"\").split(\"_\")[0];\n      return val || 0;\n    };\n  });\n\n  const selectedOptions = computed(() => {\n    return (\n      field.value.selectedOption?.map((f: IOptions) => f.optionValue) || []\n    );\n  });\n\n  const getImageStyles = computed(() => {\n    const appearanceStore = useAppearanceStore();\n    const accentColor = appearanceStore.getAppearanceAccentColor;\n    const svgColor = appearanceStore.getAppearanceSvgColor;\n    if (svgColor && accentColor) {\n      return colorFilter(accentColor);\n    }\n\n    return {};\n  });\n\n  const showPrice = computed(() => {\n    return field.value.showValueInOption || false;\n  });\n\n  onMounted(() => {\n    if (Array.isArray(values.value)) {\n      optionValues.value = values.value;\n    }\n  });\n\n  return {\n    optionValues,\n    changeValue,\n    getName,\n    getPriceValue,\n    selectedOptions,\n    getImageStyles,\n    showPrice,\n  };\n}\n"],"names":["useMultiOptionChildShared","props","emit","field","values","toRefs","optionValues","ref","watch","newOptions","repeater","alias","getName","computed","changeValue","optionsLength","newValue","getPriceValue","o","selectedOptions","_a","f","getImageStyles","appearanceStore","useAppearanceStore","accentColor","colorFilter","showPrice","onMounted"],"mappings":"6LAKgB,SAAAA,EACdC,EAKAC,EACA,CACA,KAAM,CAAE,MAAAC,EAAO,OAAAC,GAAWC,EAAOJ,CAAK,EAChCK,EAAeC,EAAc,EAAE,EAErCC,EACE,IAAMP,EAAM,OACXQ,GAAe,CACdH,EAAa,MAAQG,CAAA,CAEzB,EAEA,MAAMC,EAAWH,EAAwBJ,EAAM,MAAM,WAAW,EAC1DQ,EAAQJ,EAAYJ,EAAM,MAAM,KAAK,EAErCS,EAAUC,EAAS,IAChB,OAAOH,GAAA,YAAAA,EAAU,OAAU,IAC9B,YAAYA,EAAS,KAAK,IAAIC,EAAM,KAAK,GACzCA,EAAM,KACX,EAEKG,EAAc,IAAM,CAClB,MAAAC,EAAgBT,EAAa,MAAM,OACrC,CAACH,EAAM,MAAM,kBAAoBY,GACnCT,EAAa,MAAM,MAAM,EAG3B,MAAMU,EAAmB,OAAO,OAAOV,EAAa,KAAK,EAAE,KAAK,GAAG,EACnEJ,EAAK,SAAUc,CAAQ,CACzB,EAEMC,EAAgBJ,EAAS,IACrBK,KACOA,GAAA,YAAAA,EAAG,cAAe,IAAI,MAAM,GAAG,EAAE,CAAC,GACjC,CAEjB,EAEKC,EAAkBN,EAAS,IAAM,OAEnC,QAAAO,EAAAjB,EAAM,MAAM,iBAAZ,YAAAiB,EAA4B,IAAKC,GAAgBA,EAAE,eAAgB,CAAC,CAAA,CAEvE,EAEKC,EAAiBT,EAAS,IAAM,CACpC,MAAMU,EAAkBC,EAAmB,EACrCC,EAAcF,EAAgB,yBAEpC,OADiBA,EAAgB,uBACjBE,EACPC,EAAYD,CAAW,EAGzB,CAAC,CAAA,CACT,EAEKE,EAAYd,EAAS,IAClBV,EAAM,MAAM,mBAAqB,EACzC,EAED,OAAAyB,EAAU,IAAM,CACV,MAAM,QAAQxB,EAAO,KAAK,IAC5BE,EAAa,MAAQF,EAAO,MAC9B,CACD,EAEM,CACL,aAAAE,EACA,YAAAQ,EACA,QAAAF,EACA,cAAAK,EACA,gBAAAE,EACA,eAAAG,EACA,UAAAK,CACF,CACF"}