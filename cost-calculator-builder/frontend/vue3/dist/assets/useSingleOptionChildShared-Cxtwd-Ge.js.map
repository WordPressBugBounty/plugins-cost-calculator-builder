{"version":3,"file":"useSingleOptionChildShared-Cxtwd-Ge.js","sources":["../../src/widget/actions/fields/composable/useSingleOptionChildShared.ts"],"sourcesContent":["import { computed, onMounted, ref, toRefs } from \"vue\";\nimport { IOptions, ISingleOptionsField } from \"@/widget/shared/types/fields\";\nimport { useAppearanceStore } from \"@/widget/app/providers/stores/appearanceStore\";\nimport { colorFilter } from \"@/widget/shared/utils/color-filter.utils\";\nexport function useSingleOptionChildShared(\n  props: {\n    options: IOptions[];\n    alias: string;\n    current?: IOptions;\n    repeater?: number;\n    field: ISingleOptionsField;\n  },\n  emit: (event: \"update\", option: IOptions) => void,\n) {\n  const { options, alias, current, repeater } = toRefs(props);\n\n  const optionValues = ref<string>(\"\");\n\n  const changeValue = () => {\n    const found = options.value?.find(\n      (f: IOptions) => f.optionValue === optionValues.value?.toString(),\n    );\n    emit(\"update\", found as IOptions);\n  };\n\n  const getRandomId = () => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n\n  const getName = computed(() => {\n    return typeof repeater?.value !== \"undefined\"\n      ? `repeater_${repeater.value}_${alias.value}_${getRandomId()}`\n      : `${alias.value}_${getRandomId()}`;\n  });\n\n  const getPriceValue = computed(() => {\n    return (o: IOptions) => {\n      const val = (o?.optionValue || \"\").split(\"_\")[0];\n      return val || 0;\n    };\n  });\n\n  const getCurrentIndex = computed(() => {\n    const index = (optionValues.value || \"\").split(\"_\")[1];\n    return index ? +index : \"\";\n  });\n\n  const getImageStyles = computed(() => {\n    const appearanceStore = useAppearanceStore();\n    const accentColor = appearanceStore.getAppearanceAccentColor;\n    const svgColor = appearanceStore.getAppearanceSvgColor;\n    if (svgColor && accentColor) {\n      return colorFilter(accentColor);\n    }\n\n    return {};\n  });\n\n  onMounted(() => {\n    if (current?.value) {\n      optionValues.value = current.value?.optionValue || \"\";\n    }\n  });\n\n  return {\n    optionValues,\n    changeValue,\n    getName,\n    current,\n    getPriceValue,\n    getCurrentIndex,\n    getImageStyles,\n  };\n}\n"],"names":["useSingleOptionChildShared","props","emit","options","alias","current","repeater","toRefs","optionValues","ref","changeValue","found","_a","f","getRandomId","getName","computed","getPriceValue","o","getCurrentIndex","index","getImageStyles","appearanceStore","useAppearanceStore","accentColor","colorFilter","onMounted"],"mappings":"sLAIgB,SAAAA,EACdC,EAOAC,EACA,CACA,KAAM,CAAE,QAAAC,EAAS,MAAAC,EAAO,QAAAC,EAAS,SAAAC,CAAS,EAAIC,EAAON,CAAK,EAEpDO,EAAeC,EAAY,EAAE,EAE7BC,EAAc,IAAM,OAClB,MAAAC,GAAQC,EAAAT,EAAQ,QAAR,YAAAS,EAAe,KAC1BC,GAAgB,OAAA,OAAAA,EAAE,gBAAgBD,EAAAJ,EAAa,QAAb,YAAAI,EAAoB,cAEzDV,EAAK,SAAUS,CAAiB,CAClC,EAEMG,EAAc,IACX,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,EAAE,EAG7CC,EAAUC,EAAS,IAChB,OAAOV,GAAA,YAAAA,EAAU,OAAU,IAC9B,YAAYA,EAAS,KAAK,IAAIF,EAAM,KAAK,IAAIU,GAAa,GAC1D,GAAGV,EAAM,KAAK,IAAIU,GAAa,EACpC,EAEKG,EAAgBD,EAAS,IACrBE,KACOA,GAAA,YAAAA,EAAG,cAAe,IAAI,MAAM,GAAG,EAAE,CAAC,GACjC,CAEjB,EAEKC,EAAkBH,EAAS,IAAM,CACrC,MAAMI,GAASZ,EAAa,OAAS,IAAI,MAAM,GAAG,EAAE,CAAC,EAC9C,OAAAY,EAAQ,CAACA,EAAQ,EAAA,CACzB,EAEKC,EAAiBL,EAAS,IAAM,CACpC,MAAMM,EAAkBC,EAAmB,EACrCC,EAAcF,EAAgB,yBAEpC,OADiBA,EAAgB,uBACjBE,EACPC,EAAYD,CAAW,EAGzB,CAAC,CAAA,CACT,EAED,OAAAE,EAAU,IAAM,OACVrB,GAAA,MAAAA,EAAS,QACEG,EAAA,QAAQI,EAAAP,EAAQ,QAAR,YAAAO,EAAe,cAAe,GACrD,CACD,EAEM,CACL,aAAAJ,EACA,YAAAE,EACA,QAAAK,EACA,QAAAV,EACA,cAAAY,EACA,gBAAAE,EACA,eAAAE,CACF,CACF"}