{"version":3,"mappings":";saASO,MAAMA,GAAqC,CAChD,OAAQC,EACN,IACEC,EAAA,WAAO,sBAAgE,yCAC3E,EACA,OAAQD,EACN,IACEC,EAAA,WAAO,sBAAgE,uCAC3E,EACA,KAAMD,EACJ,IACEC,EAAA,WAAO,oBAA8D,uCACzE,EACA,SAAUD,EACR,IACEC,EAAA,WACE,wBACF,uCACJ,EACA,YAAaD,EACX,IACEC,EAAA,WACE,2BACF,wCAEN,wDCpBA,MAAMC,EAAQC,EACR,CAAE,KAAAC,CAAA,EAASC,EAAOH,CAAK,EAEvBI,EAAiBC,EAAS,IAAM,CACpC,MAAMC,EAA2BJ,EAAK,MAC/B,OAAAL,GAAoBS,CAAG,GAAK,GACpC,2KCYD,MAAMN,EAAQC,EACR,CAAE,QAAAM,CAAA,EAAYJ,EAAOH,CAAK,EAE1BQ,EAAoBC,EAAqB,EACzCC,EAAWC,EAAY,EAEvBC,EAAcP,EAAS,IAAM,2DACjC,MAAMQ,EAAgBC,EAAiB,EAEjCC,EAAuC,CAAC,EACxCC,EAAiBH,EAAc,kBAC/BI,EAAeJ,EAAc,gBAC7BK,GAA2BD,GAAA,YAAAA,EAAc,iBAAkB,CAAC,EAC5DE,EAA+B,CACnC,KAAM,eACN,YAAa,cACf,EAgCA,OA9BIH,KAEAI,GAAAC,GAAAC,EAAAN,EAAe,QAAf,YAAAM,EAAsB,eAAtB,YAAAD,EAAoC,SAApC,MAAAD,EAA4C,UAC5CG,GAAAC,GAAAC,GAAAC,EAAAV,EAAe,QAAf,YAAAU,EAAsB,eAAtB,YAAAD,EAAoC,SAApC,YAAAD,EAA4C,aAA5C,MAAAD,EAAwD,WACxDI,GAAAC,GAAAC,GAAAC,EAAAd,EAAe,QAAf,YAAAc,EAAsB,eAAtB,YAAAD,EAAoC,SAApC,YAAAD,EAA4C,YAA5C,MAAAD,EAAuD,SAEvDZ,EAAS,KAAK,QAAQ,GAItBgB,GAAAC,GAAAC,EAAAjB,EAAe,QAAf,YAAAiB,EAAsB,eAAtB,YAAAD,EAAoC,WAApC,MAAAD,EAA8C,UAC9CG,GAAAC,GAAAC,GAAAC,EAAArB,EAAe,QAAf,YAAAqB,EAAsB,eAAtB,YAAAD,EAAoC,WAApC,YAAAD,EAA8C,QAA9C,MAAAD,EAAqD,WACrDI,GAAAC,GAAAC,GAAAC,EAAAzB,EAAe,QAAf,YAAAyB,EAAsB,eAAtB,YAAAD,EAAoC,WAApC,YAAAD,EAA8C,YAA9C,MAAAD,EAAyD,SAEzDvB,EAAS,KAAK,UAAU,GAGtB2B,EAAA1B,EAAe,SAAf,MAAA0B,EAAuB,QAAU1B,EAAe,OAAO,aACzDD,EAAS,KAAK,QAAQ,GAGpB4B,EAAA3B,EAAe,cAAf,MAAA2B,EAA4B,QAC9B5B,EAAS,KAAK,MAAM,GAGlB6B,EAAA/B,EAAc,yBAAd,MAAA+B,EAAsC,QACxC7B,EAAS,KAAK,aAAa,IAK7B8B,EAAAhC,EAAc,kBAAd,MAAAgC,EAA+B,eAC/BC,EAAAjC,EAAc,kBAAd,MAAAiC,EAA+B,SAExB/B,EAAS,OAAQgC,GACtB7B,EAAe,SAASC,EAAK4B,CAAC,EAAI5B,EAAK4B,CAAC,EAAIA,CAAC,CAC/C,EAGKhC,CAAA,CACR","names":["paymentTypeRegistry","defineAsyncComponent","__vitePreload","props","__props","type","toRefs","FieldComponent","computed","key","payment","translationsStore","useTranslationsStore","appStore","useAppStore","getPayments","settingsStore","useSettingsStore","payments","paymentGateway","formSettings","paymentMethods","keys","_c","_b","_a","_g","_f","_e","_d","_k","_j","_i","_h","_n","_m","_l","_r","_q","_p","_o","_v","_u","_t","_s","_w","_x","_y","_z","_A","p"],"ignoreList":[],"sources":["../../src/widget/actions/pro-features/payments/paymentTypeRegistry.ts","../../src/widget/features/submission/payments/PaymentMethod.vue","../../src/widget/features/submission/payments/PaymentList.vue"],"sourcesContent":["import { defineAsyncComponent } from \"vue\";\nexport interface IPaymentTypes {\n  stripe: unknown;\n  paypal: unknown;\n  cash: unknown;\n  razorpay: unknown;\n  woocommerce: unknown;\n}\n\nexport const paymentTypeRegistry: IPaymentTypes = {\n  stripe: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/payments/payment-types/Stripe.vue\"),\n  ),\n  paypal: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/payments/payment-types/Paypal.vue\"),\n  ),\n  cash: defineAsyncComponent(\n    () =>\n      import(\"@/widget/features/submission/payments/payment-types/Cash.vue\"),\n  ),\n  razorpay: defineAsyncComponent(\n    () =>\n      import(\n        \"@/widget/features/submission/payments/payment-types/RazorPay.vue\"\n      ),\n  ),\n  woocommerce: defineAsyncComponent(\n    () =>\n      import(\n        \"@/widget/features/submission/payments/payment-types/Woocommerce.vue\"\n      ),\n  ),\n};\n","<template>\n  <component :is=\"FieldComponent\"></component>\n</template>\n<script setup lang=\"ts\">\nimport { computed, toRefs } from \"vue\";\nimport {\n  IPaymentTypes,\n  paymentTypeRegistry,\n} from \"@/widget/actions/pro-features/payments/paymentTypeRegistry.ts\";\n\ntype Props = {\n  type: keyof IPaymentTypes;\n};\n\nconst props = defineProps<Props>();\nconst { type } = toRefs(props);\n\nconst FieldComponent = computed(() => {\n  const key: keyof IPaymentTypes = type.value as keyof IPaymentTypes;\n  return paymentTypeRegistry[key] || \"\";\n});\n</script>\n\n<style lang=\"scss\"></style>\n","<template>\n  <div class=\"ccb-payments\" :class=\"{ 'is-live': appStore.getIsLive }\">\n    <div class=\"ccb-payments__title\">\n      {{ translationsStore.getTranslations.paymentMethods }}\n      <ProBadge />\n    </div>\n    <div class=\"ccb-payments__list\">\n      <PaymentMethod\n        v-for=\"payment in getPayments\"\n        :type=\"payment\"\n        :key=\"payment\"\n      />\n    </div>\n  </div>\n\n  <OrderForm style=\"padding-top: 20px\" v-if=\"!payment\" :payment=\"true\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed } from \"vue\";\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore.ts\";\nimport { IPaymentTypes } from \"@/widget/actions/pro-features/payments/paymentTypeRegistry.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport ProBadge from \"@/widget/shared/ui/components/Pro-badge/ProBadge.vue\";\nimport PaymentMethod from \"@/widget/features/submission/payments/PaymentMethod.vue\";\nimport OrderForm from \"@/widget/features/submission/order-form\";\nimport { useAppStore } from \"@/widget/app/providers/stores/appStore\";\n\ntype Props = {\n  payment?: boolean;\n};\n\nconst props = defineProps<Props>();\nconst { payment } = toRefs(props);\n\nconst translationsStore = useTranslationsStore();\nconst appStore = useAppStore();\n\nconst getPayments = computed(() => {\n  const settingsStore = useSettingsStore();\n\n  const payments: Array<keyof IPaymentTypes> = [];\n  const paymentGateway = settingsStore.getPaymentGateway;\n  const formSettings = settingsStore.getFormSettings;\n  const paymentMethods: string[] = formSettings?.paymentMethods || [];\n  const keys: Record<string, string> = {\n    cash: \"cash_payment\",\n    woocommerce: \"woo_checkout\",\n  };\n\n  if (paymentGateway) {\n    if (\n      paymentGateway.cards?.cardPayments?.stripe?.enable &&\n      paymentGateway.cards?.cardPayments?.stripe?.publishKey?.length &&\n      paymentGateway.cards?.cardPayments?.stripe?.secretKey?.length\n    ) {\n      payments.push(\"stripe\");\n    }\n\n    if (\n      paymentGateway.cards?.cardPayments?.razorpay?.enable &&\n      paymentGateway.cards?.cardPayments?.razorpay?.keyId?.length &&\n      paymentGateway.cards?.cardPayments?.razorpay?.secretKey?.length\n    ) {\n      payments.push(\"razorpay\");\n    }\n\n    if (paymentGateway.paypal?.enable && paymentGateway.paypal.paypalEmail) {\n      payments.push(\"paypal\");\n    }\n\n    if (paymentGateway.cashPayment?.enable) {\n      payments.push(\"cash\");\n    }\n\n    if (settingsStore.getWooCheckoutSettings?.enable) {\n      payments.push(\"woocommerce\");\n    }\n  }\n\n  if (\n    settingsStore.getFormSettings?.accessEmail &&\n    settingsStore.getFormSettings?.payment\n  ) {\n    return payments.filter((p: string) =>\n      paymentMethods.includes(keys[p] ? keys[p] : p),\n    );\n  }\n\n  return payments;\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-payments {\n  &.is-live {\n    padding: 15px 15px;\n    background: #f7f8fb;\n    border: 1px solid #eaeaea;\n    border-radius: 6px;\n    .ccb-payments__title {\n      font-size: 12px;\n      font-weight: 700;\n      color: #001931;\n      margin-bottom: 21px;\n      .is-pro {\n        top: 0;\n      }\n    }\n    .ccb-payments__list {\n      .ccb-payment {\n        background-color: #0019310d;\n        .ccb-payment-body {\n          background-color: transparent;\n        }\n        label {\n          margin-bottom: 0;\n        }\n        .ccb-payment-header {\n          .ccb-payment-header__label {\n            font-size: 14px;\n            font-weight: 700;\n            color: #001931;\n          }\n        }\n      }\n    }\n  }\n  .ccb-payments__title {\n    font-size: var(--ccb-summary-text-size);\n    font-weight: var(--ccb-field-weight);\n    color: var(--ccb-text-color);\n    margin-bottom: 6px;\n\n    @media only screen and (max-width: 480px) {\n      font-weight: var(--ccb-mobile-field-weight);\n      font-size: var(--ccb-mobile-summary-text-size);\n    }\n  }\n\n  .ccb-payments__list {\n    display: flex;\n    flex-direction: column;\n    row-gap: 10px;\n  }\n\n  .ccb-payment-body {\n    border-top: 1px solid #dddddd;\n    background: var(--ccb-fields-bg-color);\n    padding: 7px 0 10px;\n\n    span {\n      font-size: var(--ccb-summary-text-size);\n      font-weight: var(--ccb-summary-text-weight);\n      color: #00193180 !important;\n\n      @media only screen and (max-width: 480px) {\n        font-size: var(--ccb-mobile-summary-text-size);\n        font-weight: var(--ccb-mobile-summary-text-weight);\n      }\n    }\n  }\n}\n</style>\n"],"file":"assets/PaymentList.vue_vue_type_style_index_0_lang-DJkC5gjp.js"}