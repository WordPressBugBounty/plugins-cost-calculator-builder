{"version":3,"mappings":";syBA2EA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EACxBI,EAAoBC,EAAqB,EACzCC,EAAkBC,EAAmB,EACrC,CAAE,aAAAC,EAAc,WAAAC,EAAY,WAAAC,EAAY,oBAAAC,CAAoB,EAChEC,EAA2BZ,CAAK,EAE5Ba,EAAoBC,EAAS,IAAM,SACvC,MAAMC,IAAQC,GAAAC,EAAAf,EAAM,QAAN,YAAAe,EAAa,SAAb,YAAAD,EAAqB,QAAS,UAE5C,OAAID,IAAU,UACLG,EAAqB,IAAMC,EAAA,WAAO,4BAA2B,2CAAC,EAC5DJ,IAAU,MACZG,EAAqB,IAAMC,EAAA,WAAO,mBAAkB,yCAAC,EACnDJ,IAAU,oBACZG,EAAqB,IAAMC,EAAA,WAAO,+BAA8B,yCAAC,EAC/DJ,IAAU,oCACZG,EACL,IAAAC,EAAA,IAAM,OAAO,6CAA4C,yCAC3D,EACSJ,IAAU,4CACZG,EACL,IAAAC,EAAA,IAAM,OAAO,oDAAmD,yCAClE,EAGK,GACR,EAEKC,EAAWN,EAAS,IAAM,SAC9B,QAAOE,GAAAC,EAAAf,EAAM,QAAN,YAAAe,EAAa,SAAb,YAAAD,EAAqB,YAAa,WACrC,wBACA,GACL,EAEKK,EAAoBP,EAAS,IAAM,OAChC,QAAAG,EAAAf,EAAM,QAAN,YAAAe,EAAa,mBAAoB,GACzC","names":["props","__props","field","toRefs","translationsStore","useTranslationsStore","appearanceStore","useAppearanceStore","applyChanges","isRequired","fieldValue","requiredWarningText","useMultiOptionsFieldShared","currentComponents","computed","style","_b","_a","defineAsyncComponent","__vitePreload","boxStyle","additionalClasses"],"ignoreList":[],"sources":["../../src/widget/features/calculator-fields/components/Checkbox/Checkbox.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-field ccb-checkbox-field\"\n    :class=\"{\n      required: isRequired,\n      'ccb-field-disabled': field.disabled,\n      [boxStyle]: boxStyle,\n      [additionalClasses]: true,\n    }\"\n  >\n    <div class=\"ccb-field__label\">\n      <RequiredHint\n        v-if=\"\n          isRequired &&\n          field.selectedOption &&\n          field.selectedOption.length < field.minAllowedOptions\n        \"\n        :text=\"\n          field.minAllowedOptions === 1\n            ? field.minAllowedOptions +\n              ' ' +\n              translationsStore.getTranslations.minRequiredSingle\n            : field.minAllowedOptions +\n              ' ' +\n              translationsStore.getTranslations.minRequiredPlural\n        \"\n      />\n      <RequiredHint v-else-if=\"isRequired\" :text=\"requiredWarningText\" />\n      <div class=\"ccb-field__title\">\n        {{ field.label.trim()\n        }}<span v-if=\"field.required\" class=\"ccb-field-required-mark\">*</span>\n      </div>\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'before'\"\n      class=\"ccb-field__descriptions ccb-before\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n\n    <div class=\"ccb-field__input-wrapper\">\n      <component\n        :is=\"currentComponents\"\n        :values=\"fieldValue\"\n        @update=\"applyChanges\"\n        :field=\"field\"\n      />\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'after'\"\n      class=\"ccb-field__descriptions ccb-after\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, computed, defineAsyncComponent } from \"vue\";\nimport { useAppearanceStore } from \"@/widget/app/providers/stores/appearanceStore.ts\";\nimport { IMultiOptionsField } from \"@/widget/shared/types/fields\";\nimport { useMultiOptionsFieldShared } from \"@/widget/actions/fields/composable/useMultiOptionsFieldShared.ts\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\n\ntype Props = {\n  field: IMultiOptionsField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\nconst translationsStore = useTranslationsStore();\nconst appearanceStore = useAppearanceStore();\nconst { applyChanges, isRequired, fieldValue, requiredWarningText } =\n  useMultiOptionsFieldShared(props);\n\nconst currentComponents = computed(() => {\n  const style = field.value?.styles?.style || \"default\";\n\n  if (style === \"default\") {\n    return defineAsyncComponent(() => import(\"./styles/DefaultStyle.vue\"));\n  } else if (style === \"box\") {\n    return defineAsyncComponent(() => import(\"./styles/Box.vue\"));\n  } else if (style === \"box-with-checkbox\") {\n    return defineAsyncComponent(() => import(\"./styles/BoxWithCheckbox.vue\"));\n  } else if (style === \"box-with-checkbox-and-description\") {\n    return defineAsyncComponent(\n      () => import(\"./styles/BoxWithCheckboxAndDescription.vue\"),\n    );\n  } else if (style === \"box-with-heading-checkbox-and-description\") {\n    return defineAsyncComponent(\n      () => import(\"./styles/BoxWithHeadingCheckboxAndDescription.vue\"),\n    );\n  }\n\n  return \"\";\n});\n\nconst boxStyle = computed(() => {\n  return field.value?.styles?.boxStyle === \"vertical\"\n    ? \"ccb-vertical-checkbox\"\n    : \"\";\n});\n\nconst additionalClasses = computed(() => {\n  return field.value?.additionalStyles || \"\";\n});\n</script>\n\n<style lang=\"scss\">\n@use \"@/styles/widget/_mixins.scss\" as mixins;\n\n.ccb-checkbox-label {\n  font-size: var(--ccb-fields-button-size) !important;\n\n  @media only screen and (max-width: 480px) {\n    font-size: var(--ccb-mobile-fields-button-size) !important;\n  }\n}\n</style>\n"],"file":"assets/index-QTy7QEtJ.js"}