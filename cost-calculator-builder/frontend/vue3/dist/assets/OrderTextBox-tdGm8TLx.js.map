{"version":3,"file":"OrderTextBox-tdGm8TLx.js","sources":["../../src/widget/features/submission/order-form/fields/OrderTextBox.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-order-field ccb-order-textbox\"\n    :class=\"{\n      [`ccb-col-${field.fieldWidth}`]: true,\n      'ccb-order-field--required': isRequired,\n    }\"\n  >\n    <div class=\"ccb-order-field__wrapper\">\n      <div v-if=\"isRequired\" class=\"ccb-required-tooltip\">\n        <RequiredHint\n          v-if=\"requiredType === 'characterLimit'\"\n          :text=\"\n            field.attributes.characterLimit +\n            translationsStore.getTranslations.charactersMax\n          \"\n        />\n        <RequiredHint\n          v-else\n          :text=\"translationsStore.getTranslations.requiredField\"\n        />\n      </div>\n      <label class=\"ccb-order-field__label\">\n        {{ field.label }}\n        <span class=\"ccb-order-required-mark\" v-if=\"field.required\">*</span>\n      </label>\n      <input\n        type=\"text\"\n        :placeholder=\"field.placeholder\"\n        @input=\"updateValueHandler\"\n        v-model=\"field.value\"\n        :maxlength=\"field.attributes.characterLimit\"\n      />\n      <div class=\"ccb-order-field__counter\">\n        <span>{{ valueLength }} / {{ field.attributes.characterLimit }}</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, toRefs, ref } from \"vue\";\nimport { IFormField } from \"@/widget/shared/types/fields\";\nimport { useOrderForm } from \"@/widget/actions/pro-features/order-form/composable/useOrderForm.ts\";\nimport { useOrderFormFieldsRequired } from \"@/widget/actions/pro-features/order-form/composable/useOrderFormFieldsRequired.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\n\ntype Props = {\n  field: IFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst requiredType = ref<\"required\" | \"characterLimit\">(\"required\");\n\nconst { checkFieldRequired } = useOrderFormFieldsRequired();\nconst translationsStore = useTranslationsStore();\n\nconst updateValueHandler = (e: Event): void => {\n  requiredType.value = \"required\";\n  const { updateValue } = useOrderForm();\n  const target = e.target as HTMLInputElement;\n  const value: string = target.value;\n\n  if (value.length > (field.value.attributes.characterLimit || 0)) {\n    requiredType.value = \"characterLimit\";\n  }\n\n  updateValue(field.value.id, value);\n};\n\nconst isRequired = computed(() => {\n  if (requiredType.value === \"characterLimit\") return true;\n  if (!field.value.required) return false;\n  return checkFieldRequired(field.value);\n});\n\nconst valueLength = computed(() => {\n  return field.value.value?.length || 0;\n});\n</script>\n\n<style lang=\"scss\"></style>\n"],"names":["props","__props","field","toRefs","requiredType","ref","checkFieldRequired","useOrderFormFieldsRequired","translationsStore","useTranslationsStore","updateValueHandler","e","updateValue","useOrderForm","value","isRequired","computed","valueLength","_a"],"mappings":"4oBAoDA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExBI,EAAeC,EAAmC,UAAU,EAE5D,CAAE,mBAAAC,CAAmB,EAAIC,EAA2B,EACpDC,EAAoBC,EAAqB,EAEzCC,EAAsBC,GAAmB,CAC7CP,EAAa,MAAQ,WACf,KAAA,CAAE,YAAAQ,CAAY,EAAIC,EAAa,EAE/BC,EADSH,EAAE,OACY,MAEzBG,EAAM,QAAUZ,EAAM,MAAM,WAAW,gBAAkB,KAC3DE,EAAa,MAAQ,kBAGXQ,EAAAV,EAAM,MAAM,GAAIY,CAAK,CACnC,EAEMC,EAAaC,EAAS,IACtBZ,EAAa,QAAU,iBAAyB,GAC/CF,EAAM,MAAM,SACVI,EAAmBJ,EAAM,KAAK,EADH,EAEnC,EAEKe,EAAcD,EAAS,IAAM,OAC1B,QAAAE,EAAAhB,EAAM,MAAM,QAAZ,YAAAgB,EAAmB,SAAU,CAAA,CACrC"}