{"version":3,"file":"RangeTime-Cd3VB5RK.js","sources":["../../src/widget/features/submission/order-form/fields/OrderTime/styles/RangeTime.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-range-timePicker\">\n    <div class=\"ccb-range-timePicker__from\">\n      <VueDatePicker\n        v-model=\"from\"\n        time-picker\n        :is-24=\"format\"\n        minutes-grid-increment=\"5\"\n        placeholder=\"hh:mm\"\n      >\n        <template #input-icon>\n          <i class=\"ccb-icon-timepicker-light-clock\"></i>\n        </template>\n      </VueDatePicker>\n    </div>\n    <div class=\"ccb-range-timePicker__separator\">\n      <span>to</span>\n    </div>\n    <div class=\"ccb-range-timePicker__to\">\n      <VueDatePicker\n        v-model=\"to\"\n        time-picker\n        :is-24=\"format\"\n        minutes-grid-increment=\"5\"\n        placeholder=\"hh:mm\"\n      >\n        <template #input-icon>\n          <i class=\"ccb-icon-timepicker-light-clock\"></i>\n        </template>\n      </VueDatePicker>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, toRefs, computed, watch, defineEmits, onMounted } from \"vue\";\nimport VueDatePicker from \"@vuepic/vue-datepicker\";\nimport \"@vuepic/vue-datepicker/dist/main.css\";\nimport { IFormField } from \"@/widget/shared/types/fields\";\n\nconst props = defineProps<{\n  field: IFormField;\n}>();\n\nconst emit = defineEmits([\"update:modelValue\"]);\n\nconst { field } = toRefs(props);\n\nconst from = ref<Date | { hours: number; minutes: number; seconds: number }>(\n  new Date(),\n);\n\nconst to = ref<Date | { hours: number; minutes: number; seconds: number }>(\n  new Date(),\n);\n\nconst format = computed(() => {\n  return field.value?.attributes?.format || false;\n});\n\nconst formatTime = (time: { hours: number; minutes: number }) => {\n  const { hours, minutes } = time;\n  const formattedMinutes = minutes.toString().padStart(2, \"0\");\n\n  if (!format.value) {\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${formattedMinutes} ${ampm}`;\n  } else {\n    const formattedHours = hours.toString().padStart(2, \"0\");\n    return `${formattedHours}:${formattedMinutes}`;\n  }\n};\n\nonMounted(() => {\n  if (from.value instanceof Date && to.value instanceof Date) {\n    const fromTime = {\n      hours: from.value.getHours(),\n      minutes: from.value.getMinutes(),\n      seconds: from.value.getSeconds(),\n    };\n    const toTime = {\n      hours: to.value.getHours(),\n      minutes: to.value.getMinutes(),\n      seconds: to.value.getSeconds(),\n    };\n\n    const fromTimeFormatted = formatTime(fromTime);\n    const toTimeFormatted = formatTime(toTime);\n    emit(\"update:modelValue\", `${fromTimeFormatted} - ${toTimeFormatted}`);\n  }\n});\n\nwatch([from, to], (newTime: unknown) => {\n  if (!Array.isArray(newTime)) return;\n  const fromTime =\n    newTime[0] instanceof Date\n      ? {\n          hours: newTime[0].getHours(),\n          minutes: newTime[0].getMinutes(),\n          seconds: newTime[0].getSeconds(),\n        }\n      : newTime[0];\n  const toTime =\n    newTime[1] instanceof Date\n      ? {\n          hours: newTime[1].getHours(),\n          minutes: newTime[1].getMinutes(),\n          seconds: newTime[1].getSeconds(),\n        }\n      : newTime[1];\n\n  const fromTimeFormatted = formatTime(fromTime);\n  const toTimeFormatted = formatTime(toTime);\n  emit(\"update:modelValue\", `${fromTimeFormatted} - ${toTimeFormatted}`);\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-range-timePicker {\n  display: flex;\n\n  &__separator {\n    padding: 0 10px;\n    border: 1px solid var(--ccb-fields-border-color);\n    background: var(--ccb-fields-bg-color);\n    border-right: none;\n    border-left: none;\n    min-height: 43px;\n    display: flex;\n    align-items: center;\n    font-weight: 500;\n    color: var(--ccb-text-color);\n\n    span {\n      font-size: var(--ccb-fields-button-size);\n\n      @media only screen and (max-width: 480px) {\n        font-size: var(--ccb-mobile-fields-button-size);\n      }\n    }\n  }\n\n  &__from {\n    input {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n\n  &__to {\n    input {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n}\n</style>\n"],"names":["props","__props","emit","__emit","field","toRefs","from","ref","to","format","computed","_b","_a","formatTime","time","hours","minutes","formattedMinutes","ampm","onMounted","fromTime","toTime","fromTimeFormatted","toTimeFormatted","watch","newTime"],"mappings":"iaAwCA,MAAMA,EAAQC,EAIRC,EAAOC,EAEP,CAAE,MAAAC,CAAA,EAAUC,EAAOL,CAAK,EAExBM,EAAOC,MACP,IACN,EAEMC,EAAKD,MACL,IACN,EAEME,EAASC,EAAS,IAAM,SACrB,QAAAC,GAAAC,EAAAR,EAAM,QAAN,YAAAQ,EAAa,aAAb,YAAAD,EAAyB,SAAU,EAAA,CAC3C,EAEKE,EAAcC,GAA6C,CACzD,KAAA,CAAE,MAAAC,EAAO,QAAAC,CAAA,EAAYF,EACrBG,EAAmBD,EAAQ,SAAW,EAAA,SAAS,EAAG,GAAG,EAEvD,GAACP,EAAO,MAMH,MAAA,GADgBM,EAAM,SAAW,EAAA,SAAS,EAAG,GAAG,CAC/B,IAAIE,CAAgB,GAN3B,CACX,MAAAC,EAAOH,GAAS,GAAK,KAAO,KAElC,MAAO,GADgBA,EAAQ,IAAM,EACb,IAAIE,CAAgB,IAAIC,CAAI,EAAA,CAKxD,EAEA,OAAAC,EAAU,IAAM,CACd,GAAIb,EAAK,iBAAiB,MAAQE,EAAG,iBAAiB,KAAM,CAC1D,MAAMY,EAAW,CACf,MAAOd,EAAK,MAAM,SAAS,EAC3B,QAASA,EAAK,MAAM,WAAW,EAC/B,QAASA,EAAK,MAAM,WAAW,CACjC,EACMe,EAAS,CACb,MAAOb,EAAG,MAAM,SAAS,EACzB,QAASA,EAAG,MAAM,WAAW,EAC7B,QAASA,EAAG,MAAM,WAAW,CAC/B,EAEMc,EAAoBT,EAAWO,CAAQ,EACvCG,EAAkBV,EAAWQ,CAAM,EACzCnB,EAAK,oBAAqB,GAAGoB,CAAiB,MAAMC,CAAe,EAAE,CAAA,CACvE,CACD,EAEDC,EAAM,CAAClB,EAAME,CAAE,EAAIiB,GAAqB,CACtC,GAAI,CAAC,MAAM,QAAQA,CAAO,EAAG,OAC7B,MAAML,EACJK,EAAQ,CAAC,YAAa,KAClB,CACE,MAAOA,EAAQ,CAAC,EAAE,SAAS,EAC3B,QAASA,EAAQ,CAAC,EAAE,WAAW,EAC/B,QAASA,EAAQ,CAAC,EAAE,WAAW,CAAA,EAEjCA,EAAQ,CAAC,EACTJ,EACJI,EAAQ,CAAC,YAAa,KAClB,CACE,MAAOA,EAAQ,CAAC,EAAE,SAAS,EAC3B,QAASA,EAAQ,CAAC,EAAE,WAAW,EAC/B,QAASA,EAAQ,CAAC,EAAE,WAAW,CAAA,EAEjCA,EAAQ,CAAC,EAETH,EAAoBT,EAAWO,CAAQ,EACvCG,EAAkBV,EAAWQ,CAAM,EACzCnB,EAAK,oBAAqB,GAAGoB,CAAiB,MAAMC,CAAe,EAAE,CAAA,CACtE"}