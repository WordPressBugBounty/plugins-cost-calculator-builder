{"version":3,"file":"OrderEmail-B8jlCncR.js","sources":["../../src/widget/features/submission/order-form/fields/OrderEmail.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-order-field ccb-order-email\"\n    :class=\"{\n      [`ccb-col-${field.fieldWidth}`]: true,\n      'ccb-order-field--required': isRequired,\n    }\"\n  >\n    <div class=\"ccb-order-field__wrapper\">\n      <div v-if=\"isRequired\" class=\"ccb-required-tooltip\">\n        <RequiredHint\n          v-if=\"errorType === 'incorrect_email'\"\n          :text=\"warningTextEmailFormat\"\n        />\n        <RequiredHint v-else :text=\"warningTextEmailField\" />\n      </div>\n      <label class=\"ccb-order-field__label\">\n        {{ field.label }}\n        <span class=\"ccb-order-required-mark\" v-if=\"field.required\">*</span>\n      </label>\n      <input\n        type=\"text\"\n        @focusout=\"validateEmailHandler\"\n        @input=\"updateValueHandler\"\n        :placeholder=\"field.placeholder\"\n      />\n    </div>\n\n    <div\n      class=\"ccb-order-field__wrapper\"\n      style=\"padding-top: 10px\"\n      v-if=\"field.attributes?.confirmation\"\n    >\n      <label class=\"ccb-order-field__label\">\n        {{ field.attributes?.confirmationLabel }}\n        <span class=\"ccb-order-required-mark\">*</span>\n      </label>\n      <input\n        type=\"text\"\n        v-model=\"confirmationEmail\"\n        @input=\"updateValueConfirmValue\"\n        :placeholder=\"field.attributes.confirmationPlaceholder\"\n      />\n      <span class=\"ccb-order-field__same-email\" v-if=\"!isSameEmail\">\n        {{ translationsStore.getTranslations.theEmailDoNotMatch }}</span\n      >\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { IFormField } from \"@/widget/shared/types/fields\";\nimport { toRefs, ref, computed } from \"vue\";\nimport { useOrderForm } from \"@/widget/actions/pro-features/order-form/composable/useOrderForm.ts\";\nimport { validateEmail } from \"@/widget/shared/utils/validate-email.utils\";\nimport { useOrderFormFieldsRequired } from \"@/widget/actions/pro-features/order-form/composable/useOrderFormFieldsRequired.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore\";\nimport { useSettingsStore } from \"@/widget/app/providers/stores/settingsStore\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint/RequiredHint.vue\";\n\ntype Props = {\n  field: IFormField;\n};\n\nconst props = defineProps<Props>();\nconst { field } = toRefs(props);\n\nconst { checkFieldRequired } = useOrderFormFieldsRequired();\nconst translationsStore = useTranslationsStore();\nconst settingStore = useSettingsStore();\n\nconst warningTextEmailField = computed(() => {\n  return (\n    settingStore.getWarningTexts?.formFields?.emailField ||\n    translationsStore.getTranslations.requiredField\n  );\n});\n\nconst warningTextEmailFormat = computed(() => {\n  return (\n    settingStore.getWarningTexts?.formFields?.emailFormat ||\n    translationsStore.getTranslations.incorrectEmailFormat\n  );\n});\n\nconst errorType = ref<string>(\"\");\nconst isSameEmail = ref<boolean>(true);\nconst confirmationEmail = ref<string>(\"\");\n\nconst updateValueHandler = (e: Event): void => {\n  errorType.value = \"\";\n  const { updateValue } = useOrderForm();\n  const target = e.target as HTMLInputElement;\n  const value: string = target.value;\n  if (value && !validateEmail(value)) {\n    errorType.value = \"incorrect_email\";\n  }\n\n  updateValue(field.value.id, value);\n  updateValueConfirmValue();\n};\n\nconst updateValueConfirmValue = (): void => {\n  isSameEmail.value = field.value.value === confirmationEmail.value;\n};\n\nconst validateEmailHandler = (e: Event): void => {\n  const target = e.target as HTMLInputElement;\n  const value: string = target.value;\n\n  if (value && !validateEmail(value)) {\n    errorType.value = \"incorrect_email\";\n  }\n};\n\nconst isRequired = computed(() => {\n  if (errorType.value === \"incorrect_email\") return true;\n  if (!field.value.required) return false;\n  return checkFieldRequired(field.value);\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-order-field {\n  &__same-email {\n    color: red;\n    font-size: 12px;\n    font-weight: 500;\n    text-transform: none;\n  }\n}\n</style>\n"],"names":["props","__props","field","toRefs","checkFieldRequired","useOrderFormFieldsRequired","translationsStore","useTranslationsStore","settingStore","useSettingsStore","warningTextEmailField","computed","_b","_a","warningTextEmailFormat","errorType","ref","isSameEmail","confirmationEmail","updateValueHandler","e","updateValue","useOrderForm","value","validateEmail","updateValueConfirmValue","validateEmailHandler","isRequired"],"mappings":"8wBAgEA,MAAMA,EAAQC,EACR,CAAE,MAAAC,CAAA,EAAUC,EAAOH,CAAK,EAExB,CAAE,mBAAAI,CAAmB,EAAIC,EAA2B,EACpDC,EAAoBC,EAAqB,EACzCC,EAAeC,EAAiB,EAEhCC,EAAwBC,EAAS,IAAM,SAC3C,QACEC,GAAAC,EAAAL,EAAa,kBAAb,YAAAK,EAA8B,aAA9B,YAAAD,EAA0C,aAC1CN,EAAkB,gBAAgB,aAAA,CAErC,EAEKQ,EAAyBH,EAAS,IAAM,SAC5C,QACEC,GAAAC,EAAAL,EAAa,kBAAb,YAAAK,EAA8B,aAA9B,YAAAD,EAA0C,cAC1CN,EAAkB,gBAAgB,oBAAA,CAErC,EAEKS,EAAYC,EAAY,EAAE,EAC1BC,EAAcD,EAAa,EAAI,EAC/BE,EAAoBF,EAAY,EAAE,EAElCG,EAAsBC,GAAmB,CAC7CL,EAAU,MAAQ,GACZ,KAAA,CAAE,YAAAM,CAAY,EAAIC,EAAa,EAE/BC,EADSH,EAAE,OACY,MACzBG,GAAS,CAACC,EAAcD,CAAK,IAC/BR,EAAU,MAAQ,mBAGRM,EAAAnB,EAAM,MAAM,GAAIqB,CAAK,EACTE,EAAA,CAC1B,EAEMA,EAA0B,IAAY,CAC1CR,EAAY,MAAQf,EAAM,MAAM,QAAUgB,EAAkB,KAC9D,EAEMQ,EAAwBN,GAAmB,CAE/C,MAAMG,EADSH,EAAE,OACY,MAEzBG,GAAS,CAACC,EAAcD,CAAK,IAC/BR,EAAU,MAAQ,kBAEtB,EAEMY,EAAahB,EAAS,IACtBI,EAAU,QAAU,kBAA0B,GAC7Cb,EAAM,MAAM,SACVE,EAAmBF,EAAM,KAAK,EADH,EAEnC"}