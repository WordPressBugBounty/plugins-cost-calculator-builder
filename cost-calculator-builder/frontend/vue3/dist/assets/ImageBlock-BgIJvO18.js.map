{"version":3,"file":"ImageBlock-BgIJvO18.js","sources":["../../src/widget/features/pdf-invoice/invoice/components/items/ImageBlock.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-pdf-layout__item\"\n    :style=\"{\n      ...getImageHeight,\n      backgroundImage: getImageUrl ? `url(${getImageUrl})` : 'none',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n    }\"\n  >\n    <div\n      class=\"ccb-pdf-layout__item--wrapper image_block\"\n      style=\"height: 100%\"\n      data-id=\"image_block\"\n    ></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs, defineProps, computed } from \"vue\";\nimport { IPdfSettings } from \"@/widget/shared/types/settings\";\ntype Props = {\n  pdf: IPdfSettings;\n  item: {\n    isBody: boolean;\n    tabs: {\n      design?: {\n        data: {\n          backgroundColor: { data: { status: boolean }; value: string };\n          textAlign: { value: string };\n        };\n      };\n      logo: {\n        data: {\n          logoImage: { value: string };\n          logoWidthSize: { value: number };\n          logoHeightSize: { value: number };\n        };\n      };\n      name?: {\n        data: {\n          showCompanyName: { data: { status: boolean }; value: string };\n          fontColor?: { data: { status: boolean }; value: string };\n          fontSize?: { value: number };\n        };\n      };\n      slogan?: {\n        data: {\n          showSlogan: { data: { status: boolean }; value: string };\n          fontColor?: { data: { status: boolean }; value: string };\n          fontSize?: { value: number };\n        };\n      };\n      default: {\n        data: {\n          backgroundImage: {\n            key: string;\n            label: string;\n            type: string;\n            value: string;\n          };\n          imageHeight?: {\n            extra: string;\n            key: string;\n            label: string;\n            type: string;\n            value: string;\n          };\n        };\n      };\n    };\n  };\n};\n\nconst props = defineProps<Props>();\nconst { item } = toRefs(props);\n\nconst getImageUrl = computed(() => {\n  return item.value.tabs?.default.data.backgroundImage?.value;\n});\n\nconst getImageHeight = computed(() => {\n  const height = item.value.tabs?.default.data.imageHeight?.value;\n\n  return {\n    minHeight: `${height}px`,\n    height: `${height}px`,\n    width: \"100%\",\n  };\n});\n</script>\n"],"names":["props","__props","item","toRefs","getImageUrl","computed","_b","_a","getImageHeight","height"],"mappings":"4KA2EA,MAAMA,EAAQC,EACR,CAAE,KAAAC,CAAA,EAASC,EAAOH,CAAK,EAEvBI,EAAcC,EAAS,IAAM,SACjC,OAAOC,GAAAC,EAAAL,EAAK,MAAM,OAAX,YAAAK,EAAiB,QAAQ,KAAK,kBAA9B,YAAAD,EAA+C,KAAA,CACvD,EAEKE,EAAiBH,EAAS,IAAM,SACpC,MAAMI,GAASH,GAAAC,EAAAL,EAAK,MAAM,OAAX,YAAAK,EAAiB,QAAQ,KAAK,cAA9B,YAAAD,EAA2C,MAEnD,MAAA,CACL,UAAW,GAAGG,CAAM,KACpB,OAAQ,GAAGA,CAAM,KACjB,MAAO,MACT,CAAA,CACD"}