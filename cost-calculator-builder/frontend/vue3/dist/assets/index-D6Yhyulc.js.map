{"version":3,"file":"index-D6Yhyulc.js","sources":["../../src/widget/features/calculator-fields/components/FileUpload/FileUpload.vue"],"sourcesContent":["<template>\n  <div\n    class=\"ccb-field ccb-file-upload\"\n    :class=\"{\n      required: isRequired,\n      'ccb-field-disabled': field.disabled,\n      [additionalClasses]: true,\n    }\"\n  >\n    <div class=\"ccb-field__label\">\n      <template v-if=\"requiredType !== ''\">\n        <RequiredHint\n          v-if=\"requiredType === 'big_file_size'\"\n          :text=\"translationsStore.getTranslations.bigFileSize\"\n        />\n        <RequiredHint\n          v-else-if=\"requiredType === 'wrong_format'\"\n          :text=\"translationsStore.getTranslations.wrongFileFormat\"\n        />\n        <RequiredHint\n          v-else-if=\"requiredType === 'upload_url'\"\n          :text=\"translationsStore.getTranslations.wrongFileUrl\"\n        />\n        <RequiredHint\n          v-else\n          :text=\"translationsStore.getTranslations.requiredField\"\n        />\n      </template>\n\n      <div class=\"ccb-field__title\">\n        {{ field.label\n        }}<span v-if=\"field.required\" class=\"ccb-field-required-mark\">*</span\n        ><ProBadge />\n        <Hint>\n          <template #content>\n            Supported file types:\n            {{ getAllowedFormats.map((item) => `.${item}`).join(\", \") }} <br />\n            File size: {{ computedMaxFileSize }} MB <br />\n            Max {{ computedMaxAttachedFiles }} files\n          </template>\n        </Hint>\n      </div>\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'before'\"\n      class=\"ccb-field__descriptions ccb-before\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n\n    <div class=\"ccb-file-upload__input\">\n      <input type=\"file\" />\n    </div>\n\n    <div class=\"ccb-file-upload__buttons\">\n      <Button\n        type=\"success\"\n        :class=\"{ 'ccb-btn-disableWrong file formatd': checkLimit }\"\n        @click=\"chooseFileBtn\"\n        :text=\"translationsStore.getTranslations.chooseFile\"\n      />\n      <Button\n        type=\"light\"\n        text=\"Upload from URL\"\n        :class=\"{ 'ccb-btn-disabled': checkLimit }\"\n        @click=\"uploadFromUrlBtn\"\n        v-if=\"field.uploadFromUrl\"\n      />\n    </div>\n\n    <div v-if=\"uploadFromUrl\" class=\"ccb-file-upload__upload-url\">\n      <div class=\"ccb-field__input-wrapper\">\n        <input\n          v-model=\"fileUploadUrl\"\n          type=\"text\"\n          :placeholder=\"translationsStore.getTranslations.enterFileUrl\"\n          @input=\"changeUploadUrl\"\n        />\n      </div>\n      <div>\n        <button\n          class=\"upload\"\n          :class=\"{ 'ccb-btn-disabled': !fileUploadUrl.length }\"\n          @click=\"uploadFileFromUrl\"\n        >\n          {{ translationsStore.getTranslations.upload }}\n        </button>\n      </div>\n    </div>\n\n    <div v-if=\"uploadedFiles.length > 0\">\n      <div\n        v-if=\"uploadedFiles.length > 3\"\n        class=\"ccb-file-upload__file-list\"\n        @click=\"allowList = !allowList\"\n      >\n        <span\n          >{{ uploadedFiles.length }}\n          {{ translationsStore.getTranslations.filesUploaded }}</span\n        >\n      </div>\n      <div\n        v-if=\"uploadedFiles.length <= 3 || allowList\"\n        class=\"ccb-file-upload__files\"\n      >\n        <div\n          v-for=\"(file, idx) in uploadedFiles\"\n          :key=\"idx\"\n          class=\"ccb-file-upload__file\"\n        >\n          <span class=\"name\">{{ file.name }}</span>\n          <span class=\"action\" @click=\"() => removeFile(idx)\">\n            <i class=\"ccb-icon-close\"></i>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"appearanceStore.getAppearanceDescriptionPosition === 'after'\"\n      class=\"ccb-field__descriptions ccb-after\"\n    >\n      <div v-if=\"field.description\" class=\"ccb-field__description\">\n        {{ field.description }}\n      </div>\n    </div>\n\n    <input\n      ref=\"fileElement\"\n      style=\"display: none\"\n      type=\"file\"\n      :accept=\"getAllowedFormats.map((item) => `.${item}`).join(',')\"\n      :multiple=\"(field.maxAttachedFiles || 1) > 1\"\n      @change=\"addFiles\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, toRefs, ref } from \"vue\";\nimport { IFileUploadField } from \"@/widget/shared/types/fields\";\nimport { useAppearanceStore } from \"@/widget/app/providers/stores/appearanceStore.ts\";\nimport { useSingleField } from \"@/widget/actions/fields/composable/useSingleField.ts\";\nimport { useFieldsStore } from \"@/widget/app/providers/stores/fieldsStore.ts\";\nimport { useConditionsStore } from \"@/widget/app/providers/stores/conditionsStore.ts\";\nimport { useCurrency } from \"@/widget/actions/fields/composable/useCurrency.ts\";\nimport { useTranslationsStore } from \"@/widget/app/providers/stores/translationsStore.ts\";\nimport Hint from \"@/widget/shared/ui/components/Hint\";\nimport RequiredHint from \"@/widget/shared/ui/components/Required-hint\";\nimport Button from \"@/widget/shared/ui/components/Button\";\nimport ProBadge from \"@/widget/shared/ui/components/Pro-badge/ProBadge.vue\";\n\ntype Props = {\n  field: IFileUploadField;\n  files?: File[];\n};\n\nconst props = defineProps<Props>();\nconst { field, files } = toRefs(props);\n\nconst appearanceStore = useAppearanceStore();\nconst singleFieldMixins = useSingleField();\nconst fieldStore = useFieldsStore();\nconst conditionsStore = useConditionsStore();\nconst currencyInstance = useCurrency();\nconst translationsStore = useTranslationsStore();\nconst fileElement = ref<HTMLDivElement | null>(null);\nconst uploadedFiles = ref<File[]>([]);\nconst fileUploadUrl = ref<string>(\"\");\nconst uploadFromUrl = ref<boolean>(false);\nconst requiredType = ref<string>(\"\");\nconst allowList = ref<boolean>(false);\n\nconst changeUploadUrl = () => (requiredType.value = \"\");\n\nconst computedMaxAttachedFiles = computed(() => {\n  return field.value.maxAttachedFiles || 1;\n});\n\nconst computedMaxFileSize = computed(() => {\n  return field.value.maxFileSize || 1;\n});\n\nconst addFiles = (event: Event) => {\n  requiredType.value = \"\";\n  const target = event.target as HTMLInputElement;\n\n  let innerUploadedFiles: File[] = [...uploadedFiles.value];\n  let newFiles = Array.from(target?.files || []);\n\n  newFiles.forEach((file: File) => {\n    let fileName = file.name;\n    let fileExtension = \"\";\n    let dotIndex = fileName.lastIndexOf(\".\");\n\n    if (dotIndex !== -1) {\n      fileExtension = fileName.slice(dotIndex);\n      fileName = fileName.slice(0, dotIndex);\n    }\n\n    let duplicateCount = innerUploadedFiles.filter((f) =>\n      f.name.startsWith(fileName),\n    ).length;\n\n    if (duplicateCount > 0) {\n      fileName = `${fileName}(${duplicateCount})`;\n    }\n\n    let newFile = new File([file], fileName + fileExtension, {\n      type: file.type,\n    });\n    innerUploadedFiles.push(newFile);\n  });\n\n  innerUploadedFiles = innerUploadedFiles.filter((file) => validateFile(file));\n\n  if (field.value.maxAttachedFiles < innerUploadedFiles.length) {\n    let amountToRemove =\n      innerUploadedFiles.length - field.value.maxAttachedFiles;\n    innerUploadedFiles.splice(\n      innerUploadedFiles.length - amountToRemove,\n      amountToRemove,\n    );\n  }\n\n  uploadedFiles.value = innerUploadedFiles;\n  updateValue();\n};\n\nconst removeFile = (fileIndex: number): void => {\n  requiredType.value = \"\";\n  uploadedFiles.value.splice(fileIndex, 1);\n  if (fileElement.value && \"value\" in fileElement.value) {\n    fileElement.value.value = \"\";\n  }\n\n  updateValue();\n};\n\nconst uploadFileFromUrl = (): void => {\n  let innerUploadedFiles = [...uploadedFiles.value];\n  if (field.value.maxAttachedFiles < innerUploadedFiles.length + 1) {\n    return;\n  }\n\n  let fileName: string =\n    fileUploadUrl.value?.split(\"/\")?.pop()?.split(\"#\")[0]?.split(\"?\")[0] || \"\";\n\n  fetch(fileUploadUrl.value)\n    .then(async (response: Response) => {\n      if (!response.ok) {\n        requiredType.value = \"upload_url\";\n        return false;\n      }\n\n      return response.blob();\n    })\n    .then((blob: Blob | boolean) => {\n      if (\n        blob &&\n        typeof blob !== \"boolean\" &&\n        requiredType.value !== \"upload_url\"\n      ) {\n        if (fileName.lastIndexOf(\".\") === -1) {\n          let extension = blob.type.split(\"/\")[1].toLowerCase();\n          fileName = fileName + \".\" + extension;\n        }\n\n        let file = new File([blob], fileName, { type: blob.type });\n        if (validateFile(file)) {\n          uploadedFiles.value.push(file);\n        }\n\n        updateValue();\n      }\n    })\n    .catch(() => {\n      requiredType.value = \"upload_url\";\n    });\n\n  fileUploadUrl.value = \"\";\n};\n\nconst validateFile = (file: File): boolean => {\n  let fileSizeInMB: number = Number((file.size / (1024 * 1024)).toFixed(2));\n\n  if (field.value.maxFileSize < fileSizeInMB) {\n    requiredType.value = \"big_file_size\";\n    return false;\n  }\n\n  const last: string = file?.name?.split(\".\")?.pop()?.toLowerCase() || \"\";\n  if (!getAllowedFormats.value.includes(last)) {\n    requiredType.value = \"wrong_format\";\n    return false;\n  }\n\n  return true;\n};\n\nconst uploadFromUrlBtn = (): void => {\n  if (!checkLimit.value) {\n    uploadFromUrl.value = !uploadFromUrl.value;\n    fileUploadUrl.value = \"\";\n    // this.errors.fileUploadUrl = false;\n  }\n};\n\nconst chooseFileBtn = (): void => {\n  if (!checkLimit.value) {\n    uploadFromUrl.value = false;\n    fileElement?.value?.click();\n  }\n};\n\nconst updateValue = (): void => {\n  // this.clearRepeaterRequired(this.fileUpload.alias);\n\n  if (uploadedFiles.value.length === 0 && files?.value?.length !== 0) {\n    uploadedFiles.value = files.value || [];\n  }\n\n  // const value = {\n  //   price: uploadedFiles.value.length > 0 ? fileUploadPrice.value : 0,\n  //   files: uploadedFiles.value,\n  // };\n\n  let value = uploadedFiles.value.length > 0 ? field.value.price : 0;\n  if (field.value.allowPrice && field.value.calculatePerEach) {\n    value = field.value.price * uploadedFiles.value.length;\n  }\n\n  field.value.value = value;\n  field.value.files = uploadedFiles.value || [];\n\n  field.value.displayValue = getDisplayValue.value?.toString() || \"\";\n  field.value.extraDisplayView = getExtraValue.value;\n\n  if (typeof field.value.repeaterIdx !== \"undefined\") {\n    if (!window.ccb_rep_files) window.ccb_rep_files = {};\n    window.ccb_rep_files[`${field.value.alias}_${field.value.repeaterIdx}`] =\n      uploadedFiles.value;\n  }\n\n  fieldStore.updateField(field.value.alias, field.value);\n  conditionsStore.applyConditionForField(field.value.alias);\n};\n\nconst getAllowedFormats = computed(() => {\n  const allowedFormats: string[] = [];\n  field.value.fileFormats.forEach((fileFormat) =>\n    allowedFormats.push.apply(allowedFormats, fileFormat.split(\"/\")),\n  );\n  return allowedFormats;\n});\n\nconst isRequired = computed(() => {\n  if (fieldStore.checkFieldRequired(field.value)) {\n    requiredType.value = \"required\";\n    return true;\n  }\n\n  requiredType.value = \"\";\n  return false;\n});\n\nconst getExtraValue = computed(() => {\n  if (!field.value.allowPrice) {\n    return \"\";\n  }\n\n  if (field.value.calculatePerEach) {\n    const formattedPrice = currencyInstance.formatCurrency(\n      field.value.price,\n      currencyInstance.getCurrencyOptions(field.value),\n    );\n\n    const price = field.value.useCurrency ? formattedPrice : field.value.price;\n\n    return `${uploadedFiles.value.length} file(s) x ${price}`;\n  }\n\n  return `${uploadedFiles.value.length} file(s)`;\n});\n\nconst getDisplayValue = computed(() => {\n  if (field.value.allowPrice) {\n    return field.value.useCurrency || field.value.fieldCurrency\n      ? singleFieldMixins.getCommonFieldDisplayView(field.value)\n      : field.value.value?.toString() || \"\";\n  }\n\n  return `${uploadedFiles.value.length} file(s)`;\n});\n\nconst checkLimit = computed(\n  () => field.value.maxAttachedFiles <= uploadedFiles.value.length,\n);\n\nconst additionalClasses = computed(() => {\n  return field.value?.additionalStyles || \"\";\n});\n</script>\n\n<style lang=\"scss\">\n.ccb-file-upload {\n  position: relative;\n\n  .ccb-required-hint-wrapper {\n    top: -28px;\n    position: absolute;\n  }\n\n  &__input {\n    input {\n      display: none;\n    }\n  }\n\n  &__file-list {\n    span {\n      cursor: pointer;\n      font-size: var(--ccb-field-size);\n      font-weight: var(--ccb-field-weight);\n      color: var(--ccb-text-color);\n\n      @media only screen and (max-width: 480px) {\n        font-size: var(--ccb-mobile-field-size);\n        font-weight: var(--ccb-mobile-field-weight);\n      }\n    }\n  }\n\n  &__files {\n    display: flex;\n    gap: 10px;\n    padding: 10px 0;\n    flex-wrap: wrap;\n  }\n\n  &__file {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: 5px 10px 6px;\n    text-transform: capitalize;\n    border-radius: 5px;\n    background-color: var(--ccb-container-dark-color);\n    color: var(--ccb-text-color);\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 1.3;\n    word-break: break-all;\n\n    .action {\n      cursor: pointer;\n      display: inline-block;\n      margin-left: 10px;\n      font-size: 11px;\n      opacity: 0.7;\n      transition: ease-in-out 200ms;\n      line-height: 0.3;\n    }\n  }\n\n  &__buttons {\n    display: flex;\n    gap: 10px;\n\n    button {\n      padding: 10px 0px;\n      margin: 0;\n      border: none;\n      flex: 1;\n      border-radius: var(--ccb-fields-border-radius);\n      cursor: pointer;\n      transition: 300ms ease;\n      font-size: var(--ccb-fields-button-size);\n      font-weight: var(--ccb-fields-button-weight);\n\n      @media only screen and (max-width: 480px) {\n        font-size: var(--ccb-mobile-fields-button-size);\n        font-weight: var(--ccb-mobile-fields-button-weight);\n      }\n    }\n\n    .upload {\n      background: var(--ccb-accent-color);\n      color: var(--ccb-fields-color);\n\n      &:hover {\n        background: hsl(from var(--ccb-accent-color) h s calc(l - 5));\n      }\n    }\n\n    .ccb-btn-disabled {\n      opacity: 0.5;\n      pointer-events: none;\n    }\n\n    .upload-url {\n      background: (var(--ccb-fields-bg-color));\n      color: var(--ccb-text-color);\n      border: 1px solid var(--ccb-fields-border-color);\n\n      &:hover {\n        background: hsl(from var(--ccb-fields-bg-color) h s calc(l - 1));\n      }\n    }\n  }\n\n  &__upload-url {\n    margin-top: 10px;\n    display: flex;\n    column-gap: 10px;\n    overflow: hidden;\n    align-items: center;\n\n    input {\n      font-weight: 500;\n\n      &::placeholder {\n        color: var(--ccb-text-color);\n      }\n    }\n\n    button {\n      padding: 10px 0px;\n      margin: 0;\n      border: none;\n      flex: 1;\n      border-radius: var(--ccb-fields-border-radius);\n      cursor: pointer;\n      transition: 300ms ease;\n      font-size: var(--ccb-fields-button-size);\n      font-weight: var(--ccb-fields-button-weight);\n      background: var(--ccb-accent-color);\n      color: var(--ccb-fields-color);\n      min-width: 100px;\n      height: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: var(--ccb-field-button-height);\n      @media only screen and (max-width: 480px) {\n        min-height: var(--ccb-mobile-field-button-height);\n        font-size: var(--ccb-mobile-fields-button-size);\n        font-weight: var(--ccb-mobile-fields-button-weight);\n      }\n\n      &:hover {\n        background: hsl(from var(--ccb-accent-color) h s calc(l - 5));\n      }\n\n      &.ccb-btn-disabled {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    }\n  }\n}\n</style>\n"],"names":["props","__props","field","files","toRefs","appearanceStore","useAppearanceStore","singleFieldMixins","useSingleField","fieldStore","useFieldsStore","conditionsStore","useConditionsStore","currencyInstance","useCurrency","translationsStore","useTranslationsStore","fileElement","ref","uploadedFiles","fileUploadUrl","uploadFromUrl","requiredType","allowList","changeUploadUrl","computedMaxAttachedFiles","computed","computedMaxFileSize","addFiles","event","target","innerUploadedFiles","file","fileName","fileExtension","dotIndex","duplicateCount","f","newFile","validateFile","amountToRemove","updateValue","removeFile","fileIndex","uploadFileFromUrl","_d","_c","_b","_a","response","blob","extension","fileSizeInMB","last","getAllowedFormats","uploadFromUrlBtn","checkLimit","chooseFileBtn","value","getDisplayValue","getExtraValue","allowedFormats","fileFormat","isRequired","formattedPrice","price","additionalClasses"],"mappings":"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"}