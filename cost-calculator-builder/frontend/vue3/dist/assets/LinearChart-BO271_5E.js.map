{"version":3,"file":"LinearChart-BO271_5E.js","sources":["../../src/admin/shared/ui/components/charts/LinearChart.vue"],"sourcesContent":["<template>\n  <div class=\"ccb-dashboard-card ccb-dashboard-card-chart ccb-dashboard-col-12\">\n    <Skeleton v-if=\"isLoading\"></Skeleton>\n    <div\n      class=\"ccb-dashboard-card-wrapper\"\n      :class=\"{ 'ccb-is-loading': isLoading }\"\n    >\n      <div\n        class=\"ccb-dashboard-chart-header\"\n        :class=\"{ 'ccb-is-loading': isLoading }\"\n      >\n        <div class=\"ccb-dashboard-chart-controls\">\n          <span>{{ chart.title }}</span>\n        </div>\n        <div class=\"ccb-dashboard-chart-periods\" v-if=\"showGrouping\">\n          <CustomSelect\n            :items=\"periods\"\n            :current=\"period\"\n            placeholder=\"\"\n            @update=\"handlePeriodChange\"\n          />\n        </div>\n      </div>\n      <div class=\"ccb-dashboard-large-chart\">\n        <VueApexCharts\n          type=\"line\"\n          height=\"100%\"\n          :options=\"lineChartOptions\"\n          :series=\"lineChartSeries\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref, toRefs } from \"vue\";\nimport VueApexCharts from \"vue3-apexcharts\";\nimport { IChartData } from \"@/admin/shared/types/analytics/api/response.type\";\nimport { useAnalyticsStore } from \"@/admin/store/analytics/useAnalyticsStore\";\nimport {\n  getPeriods,\n  getAllowedOption,\n  AllowedGroupingsKeys,\n} from \"@/admin/shared/utils/periods\";\nimport { Skeleton } from \"@/admin/shared/ui/components/Skeleton\";\nimport { CustomSelect } from \"@/admin/shared/ui/components/CustomSelect\";\nimport { useAdminTranslationsStore } from \"@/admin/store/analytics/translationsStore\";\n\nconst props = defineProps<{\n  chart: IChartData;\n  page: \"dashboard\" | \"single\";\n}>();\n\nconst { chart, page } = toRefs(props);\nconst period = ref<AllowedGroupingsKeys>(\"hour\");\n\nconst minValues = computed(() => {\n  return Math.min(\n    ...(chart.value.series as number[]),\n    ...(chart.value.extraSeries as number[]),\n  );\n});\n\nconst maxValues = computed(() => {\n  return Math.max(\n    ...(chart.value.series as number[]),\n    ...(chart.value.extraSeries as number[]),\n  );\n});\n\nconst lineChartOptions = ref({\n  chart: {\n    type: \"line\",\n    height: 350,\n    toolbar: {\n      show: true,\n      tools: {\n        download: false,\n        selection: false,\n        zoom: false,\n        zoomin: false,\n        zoomout: false,\n        pan: false,\n        reset: false,\n      },\n    },\n  },\n  stroke: {\n    width: [2, 2],\n    curve: \"smooth\",\n  },\n  colors: [\"#27ae60\", \"#2980b9\"],\n  grid: {\n    borderColor: \"#f1f1f1\",\n    padding: {\n      top: 10,\n      right: 0,\n      bottom: 0,\n      left: 10,\n    },\n  },\n  markers: {\n    size: 4,\n    colors: [\"#27ae60\", \"#2980b9\"],\n    strokeColors: \"#fff\",\n    strokeWidth: 2,\n    hover: {\n      size: 6,\n    },\n  },\n  xaxis: {\n    categories: chart.value.categories,\n    labels: {\n      style: {\n        colors: \"#888\",\n        fontSize: \"12px\",\n      },\n    },\n    axisBorder: {\n      show: true,\n    },\n    axisTicks: {\n      show: true,\n    },\n  },\n  yaxis: [\n    {\n      title: {\n        style: {\n          color: \"#27ae60\",\n        },\n      },\n      labels: {\n        style: {\n          colors: \"#888\",\n        },\n      },\n      min: minValues.value,\n      max: maxValues.value,\n    },\n  ],\n  legend: {\n    position: \"top\",\n    horizontalAlign: \"center\",\n    floating: true,\n    offsetY: -50,\n    offsetX: 0,\n  },\n});\n\nconst lineChartSeries = computed(() => {\n  const translations = useAdminTranslationsStore();\n  if (chart.value.extraSeries && chart.value.extraSeries.length > 0) {\n    return [\n      {\n        name: translations.getTranslations.interactions,\n        type: \"line\",\n        data: chart.value.series,\n      },\n      {\n        name: translations.getTranslations.orders,\n        type: \"line\",\n        data: chart.value.extraSeries,\n      },\n    ];\n  }\n  return [\n    {\n      name: translations.getTranslations.revenue,\n      type: \"line\",\n      data: chart.value.series,\n    },\n  ];\n});\n\nconst periods = computed(() => {\n  const store = useAnalyticsStore();\n  const innerPeriods = getPeriods(store.getPeriod);\n  if (!innerPeriods.map((item) => item.value).includes(period.value)) {\n    period.value = getAllowedOption(innerPeriods);\n  }\n\n  return innerPeriods;\n});\n\nconst handlePeriodChange = (key: string) => {\n  const store = useAnalyticsStore();\n  const selectedPeriod = key;\n  store.updateChartsGrouping(\n    chart.value.key,\n    selectedPeriod as AllowedGroupingsKeys,\n  );\n};\n\nconst showGrouping = computed(() => {\n  const store = useAnalyticsStore();\n  return (\n    periods.value.length > 0 &&\n    chart.value.key in store.getDashboardChartsGrouping\n  );\n});\n\nconst isLoading = computed(() => {\n  const store = useAnalyticsStore();\n  return store.isLoading;\n});\n\nonMounted(() => {\n  const store = useAnalyticsStore();\n  period.value =\n    page.value === \"dashboard\"\n      ? store.getDashboardChartsGrouping[chart.value.key]\n      : store.getSingleChartsGrouping[chart.value.key];\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["props","__props","chart","page","toRefs","period","ref","minValues","computed","maxValues","lineChartOptions","lineChartSeries","translations","useAdminTranslationsStore","periods","store","useAnalyticsStore","innerPeriods","getPeriods","item","getAllowedOption","handlePeriodChange","key","selectedPeriod","showGrouping","isLoading","onMounted"],"mappings":"2tBAiDA,MAAMA,EAAQC,EAKR,CAAE,MAAAC,EAAO,KAAAC,GAASC,EAAOJ,CAAK,EAC9BK,EAASC,EAA0B,MAAM,EAEzCC,EAAYC,EAAS,IAClB,KAAK,IACV,GAAIN,EAAM,MAAM,OAChB,GAAIA,EAAM,MAAM,WAClB,CACD,EAEKO,EAAYD,EAAS,IAClB,KAAK,IACV,GAAIN,EAAM,MAAM,OAChB,GAAIA,EAAM,MAAM,WAClB,CACD,EAEKQ,EAAmBJ,EAAI,CAC3B,MAAO,CACL,KAAM,OACN,OAAQ,IACR,QAAS,CACP,KAAM,GACN,MAAO,CACL,SAAU,GACV,UAAW,GACX,KAAM,GACN,OAAQ,GACR,QAAS,GACT,IAAK,GACL,MAAO,EAAA,CACT,CAEJ,EACA,OAAQ,CACN,MAAO,CAAC,EAAG,CAAC,EACZ,MAAO,QACT,EACA,OAAQ,CAAC,UAAW,SAAS,EAC7B,KAAM,CACJ,YAAa,UACb,QAAS,CACP,IAAK,GACL,MAAO,EACP,OAAQ,EACR,KAAM,EAAA,CAEV,EACA,QAAS,CACP,KAAM,EACN,OAAQ,CAAC,UAAW,SAAS,EAC7B,aAAc,OACd,YAAa,EACb,MAAO,CACL,KAAM,CAAA,CAEV,EACA,MAAO,CACL,WAAYJ,EAAM,MAAM,WACxB,OAAQ,CACN,MAAO,CACL,OAAQ,OACR,SAAU,MAAA,CAEd,EACA,WAAY,CACV,KAAM,EACR,EACA,UAAW,CACT,KAAM,EAAA,CAEV,EACA,MAAO,CACL,CACE,MAAO,CACL,MAAO,CACL,MAAO,SAAA,CAEX,EACA,OAAQ,CACN,MAAO,CACL,OAAQ,MAAA,CAEZ,EACA,IAAKK,EAAU,MACf,IAAKE,EAAU,KAAA,CAEnB,EACA,OAAQ,CACN,SAAU,MACV,gBAAiB,SACjB,SAAU,GACV,QAAS,IACT,QAAS,CAAA,CACX,CACD,EAEKE,EAAkBH,EAAS,IAAM,CACrC,MAAMI,EAAeC,EAA0B,EAC/C,OAAIX,EAAM,MAAM,aAAeA,EAAM,MAAM,YAAY,OAAS,EACvD,CACL,CACE,KAAMU,EAAa,gBAAgB,aACnC,KAAM,OACN,KAAMV,EAAM,MAAM,MACpB,EACA,CACE,KAAMU,EAAa,gBAAgB,OACnC,KAAM,OACN,KAAMV,EAAM,MAAM,WAAA,CAEtB,EAEK,CACL,CACE,KAAMU,EAAa,gBAAgB,QACnC,KAAM,OACN,KAAMV,EAAM,MAAM,MAAA,CAEtB,CAAA,CACD,EAEKY,EAAUN,EAAS,IAAM,CAC7B,MAAMO,EAAQC,EAAkB,EAC1BC,EAAeC,EAAWH,EAAM,SAAS,EAC3C,OAACE,EAAa,IAAKE,GAASA,EAAK,KAAK,EAAE,SAASd,EAAO,KAAK,IACxDA,EAAA,MAAQe,EAAiBH,CAAY,GAGvCA,CAAA,CACR,EAEKI,EAAsBC,GAAgB,CAC1C,MAAMP,EAAQC,EAAkB,EAC1BO,EAAiBD,EACjBP,EAAA,qBACJb,EAAM,MAAM,IACZqB,CACF,CACF,EAEMC,EAAehB,EAAS,IAAM,CAClC,MAAMO,EAAQC,EAAkB,EAChC,OACEF,EAAQ,MAAM,OAAS,GACvBZ,EAAM,MAAM,OAAOa,EAAM,0BAAA,CAE5B,EAEKU,EAAYjB,EAAS,IACXQ,EAAkB,EACnB,SACd,EAED,OAAAU,EAAU,IAAM,CACd,MAAMX,EAAQC,EAAkB,EAChCX,EAAO,MACLF,EAAK,QAAU,YACXY,EAAM,2BAA2Bb,EAAM,MAAM,GAAG,EAChDa,EAAM,wBAAwBb,EAAM,MAAM,GAAG,CAAA,CACpD"}