{"version":3,"file":"Phone-CUpB_Pde.js","sources":["../../node_modules/vue-tel-input/dist/vue-tel-input.js","../../src/widget/features/calculator-fields/components/ValidatedForm/components/Phone.vue"],"sourcesContent":["import { defineComponent as gd, mergeModels as ve, shallowRef as J, useModel as md, watch as _, nextTick as be, reactive as vd, computed as A, onMounted as bd, resolveDirective as Cd, openBlock as P, createElementBlock as N, normalizeClass as E, withDirectives as Q, withKeys as D, createElementVNode as R, unref as Ce, createCommentVNode as T, toDisplayString as j, renderSlot as ee, withModifiers as Od, vModelText as Pd, Fragment as Nd, renderList as wd, vModelDynamic as Id } from \"vue\";\nconst Ed = [\n  [\n    \"Afghanistan (‫افغانستان‬‎)\",\n    \"af\",\n    \"93\"\n  ],\n  [\n    \"Albania (Shqipëri)\",\n    \"al\",\n    \"355\"\n  ],\n  [\n    \"Algeria (‫الجزائر‬‎)\",\n    \"dz\",\n    \"213\"\n  ],\n  [\n    \"American Samoa\",\n    \"as\",\n    \"1\",\n    5,\n    [\"684\"]\n  ],\n  [\n    \"Andorra\",\n    \"ad\",\n    \"376\"\n  ],\n  [\n    \"Angola\",\n    \"ao\",\n    \"244\"\n  ],\n  [\n    \"Anguilla\",\n    \"ai\",\n    \"1\",\n    6,\n    [\"264\"]\n  ],\n  [\n    \"Antigua and Barbuda\",\n    \"ag\",\n    \"1\",\n    7,\n    [\"268\"]\n  ],\n  [\n    \"Argentina\",\n    \"ar\",\n    \"54\"\n  ],\n  [\n    \"Armenia (Հայաստան)\",\n    \"am\",\n    \"374\"\n  ],\n  [\n    \"Aruba\",\n    \"aw\",\n    \"297\"\n  ],\n  [\n    \"Ascension Island\",\n    \"ac\",\n    \"247\"\n  ],\n  [\n    \"Australia\",\n    \"au\",\n    \"61\",\n    0\n  ],\n  [\n    \"Austria (Österreich)\",\n    \"at\",\n    \"43\"\n  ],\n  [\n    \"Azerbaijan (Azərbaycan)\",\n    \"az\",\n    \"994\"\n  ],\n  [\n    \"Bahamas\",\n    \"bs\",\n    \"1\",\n    8,\n    [\"242\"]\n  ],\n  [\n    \"Bahrain (‫البحرين‬‎)\",\n    \"bh\",\n    \"973\"\n  ],\n  [\n    \"Bangladesh (বাংলাদেশ)\",\n    \"bd\",\n    \"880\"\n  ],\n  [\n    \"Barbados\",\n    \"bb\",\n    \"1\",\n    9,\n    [\"246\"]\n  ],\n  [\n    \"Belarus (Беларусь)\",\n    \"by\",\n    \"375\"\n  ],\n  [\n    \"Belgium (België)\",\n    \"be\",\n    \"32\"\n  ],\n  [\n    \"Belize\",\n    \"bz\",\n    \"501\"\n  ],\n  [\n    \"Benin (Bénin)\",\n    \"bj\",\n    \"229\"\n  ],\n  [\n    \"Bermuda\",\n    \"bm\",\n    \"1\",\n    10,\n    [\"441\"]\n  ],\n  [\n    \"Bhutan (འབྲུག)\",\n    \"bt\",\n    \"975\"\n  ],\n  [\n    \"Bolivia\",\n    \"bo\",\n    \"591\"\n  ],\n  [\n    \"Bosnia and Herzegovina (Босна и Херцеговина)\",\n    \"ba\",\n    \"387\"\n  ],\n  [\n    \"Botswana\",\n    \"bw\",\n    \"267\"\n  ],\n  [\n    \"Brazil (Brasil)\",\n    \"br\",\n    \"55\"\n  ],\n  [\n    \"British Indian Ocean Territory\",\n    \"io\",\n    \"246\"\n  ],\n  [\n    \"British Virgin Islands\",\n    \"vg\",\n    \"1\",\n    11,\n    [\"284\"]\n  ],\n  [\n    \"Brunei\",\n    \"bn\",\n    \"673\"\n  ],\n  [\n    \"Bulgaria (България)\",\n    \"bg\",\n    \"359\"\n  ],\n  [\n    \"Burkina Faso\",\n    \"bf\",\n    \"226\"\n  ],\n  [\n    \"Burundi (Uburundi)\",\n    \"bi\",\n    \"257\"\n  ],\n  [\n    \"Cambodia (កម្ពុជា)\",\n    \"kh\",\n    \"855\"\n  ],\n  [\n    \"Cameroon (Cameroun)\",\n    \"cm\",\n    \"237\"\n  ],\n  [\n    \"Canada\",\n    \"ca\",\n    \"1\",\n    1,\n    [\"204\", \"226\", \"236\", \"249\", \"250\", \"263\", \"289\", \"306\", \"343\", \"354\", \"365\", \"367\", \"368\", \"382\", \"387\", \"403\", \"416\", \"418\", \"428\", \"431\", \"437\", \"438\", \"450\", \"584\", \"468\", \"474\", \"506\", \"514\", \"519\", \"548\", \"579\", \"581\", \"584\", \"587\", \"604\", \"613\", \"639\", \"647\", \"672\", \"683\", \"705\", \"709\", \"742\", \"753\", \"778\", \"780\", \"782\", \"807\", \"819\", \"825\", \"867\", \"873\", \"902\", \"905\"]\n  ],\n  [\n    \"Cape Verde (Kabu Verdi)\",\n    \"cv\",\n    \"238\"\n  ],\n  [\n    \"Caribbean Netherlands\",\n    \"bq\",\n    \"599\",\n    1,\n    [\"3\", \"4\", \"7\"]\n  ],\n  [\n    \"Cayman Islands\",\n    \"ky\",\n    \"1\",\n    12,\n    [\"345\"]\n  ],\n  [\n    \"Central African Republic (République centrafricaine)\",\n    \"cf\",\n    \"236\"\n  ],\n  [\n    \"Chad (Tchad)\",\n    \"td\",\n    \"235\"\n  ],\n  [\n    \"Chile\",\n    \"cl\",\n    \"56\"\n  ],\n  [\n    \"China (中国)\",\n    \"cn\",\n    \"86\"\n  ],\n  [\n    \"Christmas Island\",\n    \"cx\",\n    \"61\",\n    2,\n    [\"89164\"]\n  ],\n  [\n    \"Cocos (Keeling) Islands\",\n    \"cc\",\n    \"61\",\n    1,\n    [\"89162\"]\n  ],\n  [\n    \"Colombia\",\n    \"co\",\n    \"57\"\n  ],\n  [\n    \"Comoros (‫جزر القمر‬‎)\",\n    \"km\",\n    \"269\"\n  ],\n  [\n    \"Congo (DRC) (République démocratique du Congo)\",\n    \"cd\",\n    \"243\"\n  ],\n  [\n    \"Congo (Republic) (Congo-Brazzaville)\",\n    \"cg\",\n    \"242\"\n  ],\n  [\n    \"Cook Islands\",\n    \"ck\",\n    \"682\"\n  ],\n  [\n    \"Costa Rica\",\n    \"cr\",\n    \"506\"\n  ],\n  [\n    \"Côte d’Ivoire\",\n    \"ci\",\n    \"225\"\n  ],\n  [\n    \"Croatia (Hrvatska)\",\n    \"hr\",\n    \"385\"\n  ],\n  [\n    \"Cuba\",\n    \"cu\",\n    \"53\"\n  ],\n  [\n    \"Curaçao\",\n    \"cw\",\n    \"599\",\n    0\n  ],\n  [\n    \"Cyprus (Κύπρος)\",\n    \"cy\",\n    \"357\"\n  ],\n  [\n    \"Czech Republic (Česká republika)\",\n    \"cz\",\n    \"420\"\n  ],\n  [\n    \"Denmark (Danmark)\",\n    \"dk\",\n    \"45\"\n  ],\n  [\n    \"Djibouti\",\n    \"dj\",\n    \"253\"\n  ],\n  [\n    \"Dominica\",\n    \"dm\",\n    \"1\",\n    13,\n    [\"767\"]\n  ],\n  [\n    \"Dominican Republic (República Dominicana)\",\n    \"do\",\n    \"1\",\n    2,\n    [\"809\", \"829\", \"849\"]\n  ],\n  [\n    \"Ecuador\",\n    \"ec\",\n    \"593\"\n  ],\n  [\n    \"Egypt (‫مصر‬‎)\",\n    \"eg\",\n    \"20\"\n  ],\n  [\n    \"El Salvador\",\n    \"sv\",\n    \"503\"\n  ],\n  [\n    \"Equatorial Guinea (Guinea Ecuatorial)\",\n    \"gq\",\n    \"240\"\n  ],\n  [\n    \"Eritrea\",\n    \"er\",\n    \"291\"\n  ],\n  [\n    \"Estonia (Eesti)\",\n    \"ee\",\n    \"372\"\n  ],\n  [\n    \"Eswatini\",\n    \"sz\",\n    \"268\"\n  ],\n  [\n    \"Ethiopia\",\n    \"et\",\n    \"251\"\n  ],\n  [\n    \"Falkland Islands (Islas Malvinas)\",\n    \"fk\",\n    \"500\"\n  ],\n  [\n    \"Faroe Islands (Føroyar)\",\n    \"fo\",\n    \"298\"\n  ],\n  [\n    \"Fiji\",\n    \"fj\",\n    \"679\"\n  ],\n  [\n    \"Finland (Suomi)\",\n    \"fi\",\n    \"358\",\n    0\n  ],\n  [\n    \"France\",\n    \"fr\",\n    \"33\"\n  ],\n  [\n    \"French Guiana (Guyane française)\",\n    \"gf\",\n    \"594\"\n  ],\n  [\n    \"French Polynesia (Polynésie française)\",\n    \"pf\",\n    \"689\"\n  ],\n  [\n    \"Gabon\",\n    \"ga\",\n    \"241\"\n  ],\n  [\n    \"Gambia\",\n    \"gm\",\n    \"220\"\n  ],\n  [\n    \"Georgia (საქართველო)\",\n    \"ge\",\n    \"995\"\n  ],\n  [\n    \"Germany (Deutschland)\",\n    \"de\",\n    \"49\"\n  ],\n  [\n    \"Ghana (Gaana)\",\n    \"gh\",\n    \"233\"\n  ],\n  [\n    \"Gibraltar\",\n    \"gi\",\n    \"350\"\n  ],\n  [\n    \"Greece (Ελλάδα)\",\n    \"gr\",\n    \"30\"\n  ],\n  [\n    \"Greenland (Kalaallit Nunaat)\",\n    \"gl\",\n    \"299\"\n  ],\n  [\n    \"Grenada\",\n    \"gd\",\n    \"1\",\n    14,\n    [\"473\"]\n  ],\n  [\n    \"Guadeloupe\",\n    \"gp\",\n    \"590\",\n    0\n  ],\n  [\n    \"Guam\",\n    \"gu\",\n    \"1\",\n    15,\n    [\"671\"]\n  ],\n  [\n    \"Guatemala\",\n    \"gt\",\n    \"502\"\n  ],\n  [\n    \"Guernsey\",\n    \"gg\",\n    \"44\",\n    1,\n    [\"1481\", \"7781\", \"7839\", \"7911\"]\n  ],\n  [\n    \"Guinea (Guinée)\",\n    \"gn\",\n    \"224\"\n  ],\n  [\n    \"Guinea-Bissau (Guiné Bissau)\",\n    \"gw\",\n    \"245\"\n  ],\n  [\n    \"Guyana\",\n    \"gy\",\n    \"592\"\n  ],\n  [\n    \"Haiti\",\n    \"ht\",\n    \"509\"\n  ],\n  [\n    \"Honduras\",\n    \"hn\",\n    \"504\"\n  ],\n  [\n    \"Hong Kong (香港)\",\n    \"hk\",\n    \"852\"\n  ],\n  [\n    \"Hungary (Magyarország)\",\n    \"hu\",\n    \"36\"\n  ],\n  [\n    \"Iceland (Ísland)\",\n    \"is\",\n    \"354\"\n  ],\n  [\n    \"India (भारत)\",\n    \"in\",\n    \"91\"\n  ],\n  [\n    \"Indonesia\",\n    \"id\",\n    \"62\"\n  ],\n  [\n    \"Iran (‫ایران‬‎)\",\n    \"ir\",\n    \"98\"\n  ],\n  [\n    \"Iraq (‫العراق‬‎)\",\n    \"iq\",\n    \"964\"\n  ],\n  [\n    \"Ireland\",\n    \"ie\",\n    \"353\"\n  ],\n  [\n    \"Isle of Man\",\n    \"im\",\n    \"44\",\n    2,\n    [\"1624\", \"74576\", \"7524\", \"7924\", \"7624\"]\n  ],\n  [\n    \"Israel (‫ישראל‬‎)\",\n    \"il\",\n    \"972\"\n  ],\n  [\n    \"Italy (Italia)\",\n    \"it\",\n    \"39\",\n    0\n  ],\n  [\n    \"Jamaica\",\n    \"jm\",\n    \"1\",\n    4,\n    [\"876\", \"658\"]\n  ],\n  [\n    \"Japan (日本)\",\n    \"jp\",\n    \"81\"\n  ],\n  [\n    \"Jersey\",\n    \"je\",\n    \"44\",\n    3,\n    [\"1534\", \"7509\", \"7700\", \"7797\", \"7829\", \"7937\"]\n  ],\n  [\n    \"Jordan (‫الأردن‬‎)\",\n    \"jo\",\n    \"962\"\n  ],\n  [\n    \"Kazakhstan (Казахстан)\",\n    \"kz\",\n    \"7\",\n    1,\n    [\"33\", \"7\"]\n  ],\n  [\n    \"Kenya\",\n    \"ke\",\n    \"254\"\n  ],\n  [\n    \"Kiribati\",\n    \"ki\",\n    \"686\"\n  ],\n  [\n    \"Kosovo\",\n    \"xk\",\n    \"383\"\n  ],\n  [\n    \"Kuwait (‫الكويت‬‎)\",\n    \"kw\",\n    \"965\"\n  ],\n  [\n    \"Kyrgyzstan (Кыргызстан)\",\n    \"kg\",\n    \"996\"\n  ],\n  [\n    \"Laos (ລາວ)\",\n    \"la\",\n    \"856\"\n  ],\n  [\n    \"Latvia (Latvija)\",\n    \"lv\",\n    \"371\"\n  ],\n  [\n    \"Lebanon (‫لبنان‬‎)\",\n    \"lb\",\n    \"961\"\n  ],\n  [\n    \"Lesotho\",\n    \"ls\",\n    \"266\"\n  ],\n  [\n    \"Liberia\",\n    \"lr\",\n    \"231\"\n  ],\n  [\n    \"Libya (‫ليبيا‬‎)\",\n    \"ly\",\n    \"218\"\n  ],\n  [\n    \"Liechtenstein\",\n    \"li\",\n    \"423\"\n  ],\n  [\n    \"Lithuania (Lietuva)\",\n    \"lt\",\n    \"370\"\n  ],\n  [\n    \"Luxembourg\",\n    \"lu\",\n    \"352\"\n  ],\n  [\n    \"Macau (澳門)\",\n    \"mo\",\n    \"853\"\n  ],\n  [\n    \"Madagascar (Madagasikara)\",\n    \"mg\",\n    \"261\"\n  ],\n  [\n    \"Malawi\",\n    \"mw\",\n    \"265\"\n  ],\n  [\n    \"Malaysia\",\n    \"my\",\n    \"60\"\n  ],\n  [\n    \"Maldives\",\n    \"mv\",\n    \"960\"\n  ],\n  [\n    \"Mali\",\n    \"ml\",\n    \"223\"\n  ],\n  [\n    \"Malta\",\n    \"mt\",\n    \"356\"\n  ],\n  [\n    \"Marshall Islands\",\n    \"mh\",\n    \"692\"\n  ],\n  [\n    \"Martinique\",\n    \"mq\",\n    \"596\"\n  ],\n  [\n    \"Mauritania (‫موريتانيا‬‎)\",\n    \"mr\",\n    \"222\"\n  ],\n  [\n    \"Mauritius (Moris)\",\n    \"mu\",\n    \"230\"\n  ],\n  [\n    \"Mayotte\",\n    \"yt\",\n    \"262\",\n    1,\n    [\"269\", \"639\"]\n  ],\n  [\n    \"Mexico (México)\",\n    \"mx\",\n    \"52\"\n  ],\n  [\n    \"Micronesia\",\n    \"fm\",\n    \"691\"\n  ],\n  [\n    \"Moldova (Republica Moldova)\",\n    \"md\",\n    \"373\"\n  ],\n  [\n    \"Monaco\",\n    \"mc\",\n    \"377\"\n  ],\n  [\n    \"Mongolia (Монгол)\",\n    \"mn\",\n    \"976\"\n  ],\n  [\n    \"Montenegro (Crna Gora)\",\n    \"me\",\n    \"382\"\n  ],\n  [\n    \"Montserrat\",\n    \"ms\",\n    \"1\",\n    16,\n    [\"664\"]\n  ],\n  [\n    \"Morocco (‫المغرب‬‎)\",\n    \"ma\",\n    \"212\",\n    0\n  ],\n  [\n    \"Mozambique (Moçambique)\",\n    \"mz\",\n    \"258\"\n  ],\n  [\n    \"Myanmar (Burma) (မြန်မာ)\",\n    \"mm\",\n    \"95\"\n  ],\n  [\n    \"Namibia (Namibië)\",\n    \"na\",\n    \"264\"\n  ],\n  [\n    \"Nauru\",\n    \"nr\",\n    \"674\"\n  ],\n  [\n    \"Nepal (नेपाल)\",\n    \"np\",\n    \"977\"\n  ],\n  [\n    \"Netherlands (Nederland)\",\n    \"nl\",\n    \"31\"\n  ],\n  [\n    \"New Caledonia (Nouvelle-Calédonie)\",\n    \"nc\",\n    \"687\"\n  ],\n  [\n    \"New Zealand\",\n    \"nz\",\n    \"64\"\n  ],\n  [\n    \"Nicaragua\",\n    \"ni\",\n    \"505\"\n  ],\n  [\n    \"Niger (Nijar)\",\n    \"ne\",\n    \"227\"\n  ],\n  [\n    \"Nigeria\",\n    \"ng\",\n    \"234\"\n  ],\n  [\n    \"Niue\",\n    \"nu\",\n    \"683\"\n  ],\n  [\n    \"Norfolk Island\",\n    \"nf\",\n    \"672\"\n  ],\n  [\n    \"North Korea (조선 민주주의 인민 공화국)\",\n    \"kp\",\n    \"850\"\n  ],\n  [\n    \"North Macedonia (Северна Македонија)\",\n    \"mk\",\n    \"389\"\n  ],\n  [\n    \"Northern Mariana Islands\",\n    \"mp\",\n    \"1\",\n    17,\n    [\"670\"]\n  ],\n  [\n    \"Norway (Norge)\",\n    \"no\",\n    \"47\",\n    0\n  ],\n  [\n    \"Oman (‫عُمان‬‎)\",\n    \"om\",\n    \"968\"\n  ],\n  [\n    \"Pakistan (‫پاکستان‬‎)\",\n    \"pk\",\n    \"92\"\n  ],\n  [\n    \"Palau\",\n    \"pw\",\n    \"680\"\n  ],\n  [\n    \"Palestine (‫فلسطين‬‎)\",\n    \"ps\",\n    \"970\"\n  ],\n  [\n    \"Panama (Panamá)\",\n    \"pa\",\n    \"507\"\n  ],\n  [\n    \"Papua New Guinea\",\n    \"pg\",\n    \"675\"\n  ],\n  [\n    \"Paraguay\",\n    \"py\",\n    \"595\"\n  ],\n  [\n    \"Peru (Perú)\",\n    \"pe\",\n    \"51\"\n  ],\n  [\n    \"Philippines\",\n    \"ph\",\n    \"63\"\n  ],\n  [\n    \"Poland (Polska)\",\n    \"pl\",\n    \"48\"\n  ],\n  [\n    \"Portugal\",\n    \"pt\",\n    \"351\"\n  ],\n  [\n    \"Puerto Rico\",\n    \"pr\",\n    \"1\",\n    3,\n    [\"787\", \"939\"]\n  ],\n  [\n    \"Qatar (‫قطر‬‎)\",\n    \"qa\",\n    \"974\"\n  ],\n  [\n    \"Réunion (La Réunion)\",\n    \"re\",\n    \"262\",\n    0\n  ],\n  [\n    \"Romania (România)\",\n    \"ro\",\n    \"40\"\n  ],\n  [\n    \"Russia (Россия)\",\n    \"ru\",\n    \"7\",\n    0\n  ],\n  [\n    \"Rwanda\",\n    \"rw\",\n    \"250\"\n  ],\n  [\n    \"Saint Barthélemy\",\n    \"bl\",\n    \"590\",\n    1\n  ],\n  [\n    \"Saint Helena\",\n    \"sh\",\n    \"290\"\n  ],\n  [\n    \"Saint Kitts and Nevis\",\n    \"kn\",\n    \"1\",\n    18,\n    [\"869\"]\n  ],\n  [\n    \"Saint Lucia\",\n    \"lc\",\n    \"1\",\n    19,\n    [\"758\"]\n  ],\n  [\n    \"Saint Martin (Saint-Martin (partie française))\",\n    \"mf\",\n    \"590\",\n    2\n  ],\n  [\n    \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\",\n    \"pm\",\n    \"508\"\n  ],\n  [\n    \"Saint Vincent and the Grenadines\",\n    \"vc\",\n    \"1\",\n    20,\n    [\"784\"]\n  ],\n  [\n    \"Samoa\",\n    \"ws\",\n    \"685\"\n  ],\n  [\n    \"San Marino\",\n    \"sm\",\n    \"378\"\n  ],\n  [\n    \"São Tomé and Príncipe (São Tomé e Príncipe)\",\n    \"st\",\n    \"239\"\n  ],\n  [\n    \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\",\n    \"sa\",\n    \"966\"\n  ],\n  [\n    \"Senegal (Sénégal)\",\n    \"sn\",\n    \"221\"\n  ],\n  [\n    \"Serbia (Србија)\",\n    \"rs\",\n    \"381\"\n  ],\n  [\n    \"Seychelles\",\n    \"sc\",\n    \"248\"\n  ],\n  [\n    \"Sierra Leone\",\n    \"sl\",\n    \"232\"\n  ],\n  [\n    \"Singapore\",\n    \"sg\",\n    \"65\"\n  ],\n  [\n    \"Sint Maarten\",\n    \"sx\",\n    \"1\",\n    21,\n    [\"721\"]\n  ],\n  [\n    \"Slovakia (Slovensko)\",\n    \"sk\",\n    \"421\"\n  ],\n  [\n    \"Slovenia (Slovenija)\",\n    \"si\",\n    \"386\"\n  ],\n  [\n    \"Solomon Islands\",\n    \"sb\",\n    \"677\"\n  ],\n  [\n    \"Somalia (Soomaaliya)\",\n    \"so\",\n    \"252\"\n  ],\n  [\n    \"South Africa\",\n    \"za\",\n    \"27\"\n  ],\n  [\n    \"South Korea (대한민국)\",\n    \"kr\",\n    \"82\"\n  ],\n  [\n    \"South Sudan (‫جنوب السودان‬‎)\",\n    \"ss\",\n    \"211\"\n  ],\n  [\n    \"Spain (España)\",\n    \"es\",\n    \"34\"\n  ],\n  [\n    \"Sri Lanka (ශ්‍රී ලංකාව)\",\n    \"lk\",\n    \"94\"\n  ],\n  [\n    \"Sudan (‫السودان‬‎)\",\n    \"sd\",\n    \"249\"\n  ],\n  [\n    \"Suriname\",\n    \"sr\",\n    \"597\"\n  ],\n  [\n    \"Svalbard and Jan Mayen\",\n    \"sj\",\n    \"47\",\n    1,\n    [\"79\"]\n  ],\n  [\n    \"Sweden (Sverige)\",\n    \"se\",\n    \"46\"\n  ],\n  [\n    \"Switzerland (Schweiz)\",\n    \"ch\",\n    \"41\"\n  ],\n  [\n    \"Syria (‫سوريا‬‎)\",\n    \"sy\",\n    \"963\"\n  ],\n  [\n    \"Taiwan (台灣)\",\n    \"tw\",\n    \"886\"\n  ],\n  [\n    \"Tajikistan\",\n    \"tj\",\n    \"992\"\n  ],\n  [\n    \"Tanzania\",\n    \"tz\",\n    \"255\"\n  ],\n  [\n    \"Thailand (ไทย)\",\n    \"th\",\n    \"66\"\n  ],\n  [\n    \"Timor-Leste\",\n    \"tl\",\n    \"670\"\n  ],\n  [\n    \"Togo\",\n    \"tg\",\n    \"228\"\n  ],\n  [\n    \"Tokelau\",\n    \"tk\",\n    \"690\"\n  ],\n  [\n    \"Tonga\",\n    \"to\",\n    \"676\"\n  ],\n  [\n    \"Trinidad and Tobago\",\n    \"tt\",\n    \"1\",\n    22,\n    [\"868\"]\n  ],\n  [\n    \"Tunisia (‫تونس‬‎)\",\n    \"tn\",\n    \"216\"\n  ],\n  [\n    \"Turkey (Türkiye)\",\n    \"tr\",\n    \"90\"\n  ],\n  [\n    \"Turkmenistan\",\n    \"tm\",\n    \"993\"\n  ],\n  [\n    \"Turks and Caicos Islands\",\n    \"tc\",\n    \"1\",\n    23,\n    [\"649\"]\n  ],\n  [\n    \"Tuvalu\",\n    \"tv\",\n    \"688\"\n  ],\n  [\n    \"U.S. Virgin Islands\",\n    \"vi\",\n    \"1\",\n    24,\n    [\"340\"]\n  ],\n  [\n    \"Uganda\",\n    \"ug\",\n    \"256\"\n  ],\n  [\n    \"Ukraine (Україна)\",\n    \"ua\",\n    \"380\"\n  ],\n  [\n    \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\",\n    \"ae\",\n    \"971\"\n  ],\n  [\n    \"United Kingdom\",\n    \"gb\",\n    \"44\",\n    0\n  ],\n  [\n    \"United States\",\n    \"us\",\n    \"1\",\n    0\n  ],\n  [\n    \"Uruguay\",\n    \"uy\",\n    \"598\"\n  ],\n  [\n    \"Uzbekistan (Oʻzbekiston)\",\n    \"uz\",\n    \"998\"\n  ],\n  [\n    \"Vanuatu\",\n    \"vu\",\n    \"678\"\n  ],\n  [\n    \"Vatican City (Città del Vaticano)\",\n    \"va\",\n    \"39\",\n    1,\n    [\"06698\"]\n  ],\n  [\n    \"Venezuela\",\n    \"ve\",\n    \"58\"\n  ],\n  [\n    \"Vietnam (Việt Nam)\",\n    \"vn\",\n    \"84\"\n  ],\n  [\n    \"Wallis and Futuna (Wallis-et-Futuna)\",\n    \"wf\",\n    \"681\"\n  ],\n  [\n    \"Western Sahara (‫الصحراء الغربية‬‎)\",\n    \"eh\",\n    \"212\",\n    1,\n    [\"5288\", \"5289\"]\n  ],\n  [\n    \"Yemen (‫اليمن‬‎)\",\n    \"ye\",\n    \"967\"\n  ],\n  [\n    \"Zambia\",\n    \"zm\",\n    \"260\"\n  ],\n  [\n    \"Zimbabwe\",\n    \"zw\",\n    \"263\"\n  ],\n  [\n    \"Åland Islands\",\n    \"ax\",\n    \"358\",\n    1,\n    [\"18\"]\n  ]\n], Sd = Ed.map(([e, d, t, n = 0, r = null]) => ({\n  name: e,\n  iso2: d.toUpperCase(),\n  dialCode: t,\n  priority: n,\n  areaCodes: r\n}));\nfunction _d() {\n  return fetch(\"https://ip2c.org/s\").then((e) => e.text()).then((e) => {\n    const d = (e || \"\").toString();\n    if (!d || d[0] !== \"1\")\n      throw new Error(\"unable to fetch the country\");\n    return d.substr(2, 2);\n  });\n}\nfunction Fd(e, d) {\n  if (e.setSelectionRange)\n    e.focus(), e.setSelectionRange(d, d);\n  else if (\"createTextRange\" in e && typeof e.createTextRange == \"function\") {\n    const t = e.createTextRange();\n    t.collapse(!0), t.moveEnd(\"character\", d), t.moveStart(\"character\", d), t.select();\n  }\n}\nconst Td = [\n  {\n    name: \"allCountries\",\n    type: Array,\n    default: Sd,\n    description: \"All countries that are used in <code>libphonenumber-js</code>, can be overridden by this prop\",\n    inDemo: !1\n  },\n  {\n    name: \"autoFormat\",\n    type: Boolean,\n    default: !0,\n    description: \"Auto update the input to the formatted phone number when it's valid\",\n    inDemo: !0\n  },\n  {\n    name: \"customValidate\",\n    type: [Boolean, RegExp],\n    default: !1,\n    description: \"Custom validation RegExp for input\",\n    inDemo: !1\n  },\n  {\n    name: \"defaultCountry\",\n    default: \"\",\n    type: [String, Number],\n    description: \"Default country (by iso2 or dialCode), will override the country fetched from IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable <code>vue-tel-input</code>, including the input & flag dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"autoDefaultCountry\",\n    default: !0,\n    type: Boolean,\n    description: \"To fetch default country based on IP address of user\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions\",\n    type: Object,\n    description: \"Options for dropdown, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.disabled\",\n    default: !1,\n    type: Boolean,\n    description: \"Disable dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInList\",\n    default: !0,\n    type: Boolean,\n    description: \"Show dial code in the dropdown list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showDialCodeInSelection\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in the dropdown selection\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showFlags\",\n    default: !0,\n    type: Boolean,\n    description: \"Show flags in the dropdown selection and list\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.showSearchBox\",\n    default: !1,\n    type: Boolean,\n    description: \"Show country search box\",\n    inDemo: !0\n  },\n  {\n    name: \"dropdownOptions.searchBoxPlaceholder\",\n    default: \"\",\n    type: String,\n    description: \"Placeholder for the search box\",\n    inDemo: !1\n  },\n  {\n    name: \"dropdownOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native dropdown <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"ignoredCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will NOT be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions\",\n    type: Object,\n    description: \"Options for input, see below\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autocomplete\",\n    type: String,\n    default: \"on\",\n    description: \"Native input <code>autocomplete</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.autofocus\",\n    type: Boolean,\n    default: !1,\n    description: \"Native input <code>autofocus</code> attribute\",\n    inDemo: !1\n  },\n  // {\n  //   name: 'inputOptions.dynamicPlaceholder',\n  //   default: false,\n  //   type: Boolean,\n  //   description: 'Placeholder as a sample phone number in the current country',\n  //   inDemo: false,\n  // },\n  {\n    name: \"inputOptions.aria-describedby\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>aria-describedby</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.id\",\n    default: \"\",\n    type: String,\n    description: \"Native input <code>id</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.maxlength\",\n    default: 25,\n    type: Number,\n    description: \"Native input <code>maxlength</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.name\",\n    default: \"telephone\",\n    type: String,\n    description: \"Native input <code>name</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.showDialCode\",\n    default: !1,\n    type: Boolean,\n    description: \"Show dial code in input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.placeholder\",\n    default: \"Enter a phone number\",\n    type: String,\n    description: \"Placeholder for the input\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.readonly\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>readonly</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.required\",\n    default: !1,\n    type: Boolean,\n    description: \"Native input <code>required</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.tabindex\",\n    default: 0,\n    type: Number,\n    description: \"Native input <code>tabindex</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.type\",\n    default: \"tel\",\n    type: String,\n    description: \"Native input <code>type</code> attribute\",\n    inDemo: !1\n  },\n  {\n    name: \"inputOptions.styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the <code>input</code>\",\n    inDemo: !1\n  },\n  {\n    name: \"invalidMsg\",\n    default: \"\",\n    type: String,\n    description: \"\",\n    inDemo: !1\n  },\n  {\n    name: \"mode\",\n    default: \"auto\",\n    type: String,\n    description: \"Allowed values: <code>'auto'</code> (Default set by phone),  <code>'international'</code> (Format number with the dial code i.e. + 61), <code>'national'</code> (Format number without dial code i.e. 0321232)\",\n    inDemo: !0,\n    options: [\"auto\", \"national\", \"international\"]\n  },\n  {\n    name: \"onlyCountries\",\n    default: [],\n    type: Array,\n    description: \"List of countries will be shown on the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"preferredCountries\",\n    default: [],\n    type: Array,\n    description: \"Preferred countries list, will be on top of the dropdown\",\n    inDemo: !1\n  },\n  {\n    name: \"styleClasses\",\n    default: \"\",\n    type: [String, Array, Object],\n    description: \"Custom classes for the wrapper\",\n    inDemo: !1\n  },\n  {\n    name: \"validCharactersOnly\",\n    default: !1,\n    type: Boolean,\n    description: \"Only allow valid characters in a phone number (will also verify in <code>mounted</code>, so phone number with invalid characters will be shown as an empty string)\",\n    inDemo: !1\n  }\n], Ze = [...Td].reduce((e, d) => {\n  if (d.name.includes(\".\")) {\n    const [t, n] = d.name.split(\".\");\n    e[t] ? Object.assign(e[t], { [n]: d.default }) : Object.assign(e, { [t]: { [n]: d.default } });\n  } else\n    Object.assign(e, { [d.name]: d.default });\n  return e;\n}, {}), re = {\n  options: { ...Ze }\n};\nfunction m(e) {\n  const d = re.options[e];\n  return typeof d > \"u\" ? re.options[e] : d;\n}\nfunction M(e) {\n  return e == null ? void 0 : e.toLowerCase();\n}\nfunction L(e) {\n  return e == null ? void 0 : e.toUpperCase();\n}\nconst xd = { version: 4, country_calling_codes: { 1: [\"US\", \"AG\", \"AI\", \"AS\", \"BB\", \"BM\", \"BS\", \"CA\", \"DM\", \"DO\", \"GD\", \"GU\", \"JM\", \"KN\", \"KY\", \"LC\", \"MP\", \"MS\", \"PR\", \"SX\", \"TC\", \"TT\", \"VC\", \"VG\", \"VI\"], 7: [\"RU\", \"KZ\"], 20: [\"EG\"], 27: [\"ZA\"], 30: [\"GR\"], 31: [\"NL\"], 32: [\"BE\"], 33: [\"FR\"], 34: [\"ES\"], 36: [\"HU\"], 39: [\"IT\", \"VA\"], 40: [\"RO\"], 41: [\"CH\"], 43: [\"AT\"], 44: [\"GB\", \"GG\", \"IM\", \"JE\"], 45: [\"DK\"], 46: [\"SE\"], 47: [\"NO\", \"SJ\"], 48: [\"PL\"], 49: [\"DE\"], 51: [\"PE\"], 52: [\"MX\"], 53: [\"CU\"], 54: [\"AR\"], 55: [\"BR\"], 56: [\"CL\"], 57: [\"CO\"], 58: [\"VE\"], 60: [\"MY\"], 61: [\"AU\", \"CC\", \"CX\"], 62: [\"ID\"], 63: [\"PH\"], 64: [\"NZ\"], 65: [\"SG\"], 66: [\"TH\"], 81: [\"JP\"], 82: [\"KR\"], 84: [\"VN\"], 86: [\"CN\"], 90: [\"TR\"], 91: [\"IN\"], 92: [\"PK\"], 93: [\"AF\"], 94: [\"LK\"], 95: [\"MM\"], 98: [\"IR\"], 211: [\"SS\"], 212: [\"MA\", \"EH\"], 213: [\"DZ\"], 216: [\"TN\"], 218: [\"LY\"], 220: [\"GM\"], 221: [\"SN\"], 222: [\"MR\"], 223: [\"ML\"], 224: [\"GN\"], 225: [\"CI\"], 226: [\"BF\"], 227: [\"NE\"], 228: [\"TG\"], 229: [\"BJ\"], 230: [\"MU\"], 231: [\"LR\"], 232: [\"SL\"], 233: [\"GH\"], 234: [\"NG\"], 235: [\"TD\"], 236: [\"CF\"], 237: [\"CM\"], 238: [\"CV\"], 239: [\"ST\"], 240: [\"GQ\"], 241: [\"GA\"], 242: [\"CG\"], 243: [\"CD\"], 244: [\"AO\"], 245: [\"GW\"], 246: [\"IO\"], 247: [\"AC\"], 248: [\"SC\"], 249: [\"SD\"], 250: [\"RW\"], 251: [\"ET\"], 252: [\"SO\"], 253: [\"DJ\"], 254: [\"KE\"], 255: [\"TZ\"], 256: [\"UG\"], 257: [\"BI\"], 258: [\"MZ\"], 260: [\"ZM\"], 261: [\"MG\"], 262: [\"RE\", \"YT\"], 263: [\"ZW\"], 264: [\"NA\"], 265: [\"MW\"], 266: [\"LS\"], 267: [\"BW\"], 268: [\"SZ\"], 269: [\"KM\"], 290: [\"SH\", \"TA\"], 291: [\"ER\"], 297: [\"AW\"], 298: [\"FO\"], 299: [\"GL\"], 350: [\"GI\"], 351: [\"PT\"], 352: [\"LU\"], 353: [\"IE\"], 354: [\"IS\"], 355: [\"AL\"], 356: [\"MT\"], 357: [\"CY\"], 358: [\"FI\", \"AX\"], 359: [\"BG\"], 370: [\"LT\"], 371: [\"LV\"], 372: [\"EE\"], 373: [\"MD\"], 374: [\"AM\"], 375: [\"BY\"], 376: [\"AD\"], 377: [\"MC\"], 378: [\"SM\"], 380: [\"UA\"], 381: [\"RS\"], 382: [\"ME\"], 383: [\"XK\"], 385: [\"HR\"], 386: [\"SI\"], 387: [\"BA\"], 389: [\"MK\"], 420: [\"CZ\"], 421: [\"SK\"], 423: [\"LI\"], 500: [\"FK\"], 501: [\"BZ\"], 502: [\"GT\"], 503: [\"SV\"], 504: [\"HN\"], 505: [\"NI\"], 506: [\"CR\"], 507: [\"PA\"], 508: [\"PM\"], 509: [\"HT\"], 590: [\"GP\", \"BL\", \"MF\"], 591: [\"BO\"], 592: [\"GY\"], 593: [\"EC\"], 594: [\"GF\"], 595: [\"PY\"], 596: [\"MQ\"], 597: [\"SR\"], 598: [\"UY\"], 599: [\"CW\", \"BQ\"], 670: [\"TL\"], 672: [\"NF\"], 673: [\"BN\"], 674: [\"NR\"], 675: [\"PG\"], 676: [\"TO\"], 677: [\"SB\"], 678: [\"VU\"], 679: [\"FJ\"], 680: [\"PW\"], 681: [\"WF\"], 682: [\"CK\"], 683: [\"NU\"], 685: [\"WS\"], 686: [\"KI\"], 687: [\"NC\"], 688: [\"TV\"], 689: [\"PF\"], 690: [\"TK\"], 691: [\"FM\"], 692: [\"MH\"], 850: [\"KP\"], 852: [\"HK\"], 853: [\"MO\"], 855: [\"KH\"], 856: [\"LA\"], 880: [\"BD\"], 886: [\"TW\"], 960: [\"MV\"], 961: [\"LB\"], 962: [\"JO\"], 963: [\"SY\"], 964: [\"IQ\"], 965: [\"KW\"], 966: [\"SA\"], 967: [\"YE\"], 968: [\"OM\"], 970: [\"PS\"], 971: [\"AE\"], 972: [\"IL\"], 973: [\"BH\"], 974: [\"QA\"], 975: [\"BT\"], 976: [\"MN\"], 977: [\"NP\"], 992: [\"TJ\"], 993: [\"TM\"], 994: [\"AZ\"], 995: [\"GE\"], 996: [\"KG\"], 998: [\"UZ\"] }, countries: { AC: [\"247\", \"00\", \"(?:[01589]\\\\d|[46])\\\\d{4}\", [5, 6]], AD: [\"376\", \"00\", \"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\", [6, 8, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[135-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]]], AE: [\"971\", \"00\", \"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{2,9})\", \"$1 $2\", [\"60|8\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[236]|[479][2-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AF: [\"93\", \"00\", \"[2-7]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], \"0\"], AG: [\"1\", \"011\", \"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([457]\\\\d{6})$|1\", \"268$1\", 0, \"268\"], AI: [\"1\", \"011\", \"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2457]\\\\d{6})$|1\", \"264$1\", 0, \"264\"], AL: [\"355\", \"00\", \"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\", [6, 7, 8, 9], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"80|9\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23578]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"]], \"0\"], AM: [\"374\", \"00\", \"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]0\"], \"0 $1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2|3[12]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[3-9]\"], \"0$1\"]], \"0\"], AO: [\"244\", \"00\", \"[29]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[29]\"]]]], AR: [\"54\", \"00\", \"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\", [10, 11], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\", \"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"1\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", 1], [\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-469]|3[3-578])\", \"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\", \"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\", \"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"91\"], \"0$1\", 0, \"$1 $2 $3-$4\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3-$4\"]], \"0\", 0, \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\", \"9$1\"], AS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([267]\\\\d{6})$|1\", \"684$1\", 0, \"684\"], AT: [\"43\", \"00\", \"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3,12})\", \"$1 $2\", [\"1(?:11|[2-9])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})\", \"$1 $2\", [\"517\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"[2-467]|5[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5\"], \"0$1\"]], \"0\"], AU: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\", [5, 6, 7, 8, 9, 10, 12], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|4\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:30|[89])\"]]], \"0\", 0, \"(183[12])|0\", 0, 0, 0, [[\"(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, [\"163\\\\d{2,6}\", [5, 6, 7, 8, 9]], [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], AW: [\"297\", \"00\", \"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[25-9]\"]]]], AX: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\", [5, 6, 7, 8, 9, 10, 11, 12], 0, \"0\", 0, 0, 0, 0, \"18\", 0, \"00\"], AZ: [\"994\", \"00\", \"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2|365|46\", \"1[28]|2|365[45]|46\", \"1[28]|2|365(?:4|5[02])|46\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[13-9]\"], \"0$1\"]], \"0\"], BA: [\"387\", \"00\", \"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-3]|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]|6[56]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\"]], \"0\"], BB: [\"1\", \"011\", \"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"246$1\", 0, \"246\"], BD: [\"880\", \"00\", \"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"31[5-8]|[459]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,6})\", \"$1-$2\", [\"[13-9]|22\"], \"0$1\"], [\"(\\\\d)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"]], \"0\"], BE: [\"32\", \"00\", \"4\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[239]|4[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[15-8]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4\"], \"0$1\"]], \"0\"], BF: [\"226\", \"00\", \"[025-7]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[025-7]\"]]]], BG: [\"359\", \"00\", \"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\", [6, 7, 8, 9, 12], [[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"43[1-6]|70[1-9]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:70|8)0\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[1-7]|7\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[48]|9[08]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], BH: [\"973\", \"00\", \"[136-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[13679]|8[02-4679]\"]]]], BI: [\"257\", \"00\", \"(?:[267]\\\\d|31)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2367]\"]]]], BJ: [\"229\", \"00\", \"[24-689]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-689]\"]]]], BL: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], BM: [\"1\", \"011\", \"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"441$1\", 0, \"441\"], BN: [\"673\", \"00\", \"[2-578]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]]], BO: [\"591\", \"00(?:1\\\\d)?\", \"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\", [8, 9], [[\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[23]|4[46]\"]], [\"(\\\\d{8})\", \"$1\", [\"[67]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\", 0, \"0(1\\\\d)?\"], BQ: [\"599\", \"00\", \"(?:[34]1|7\\\\d)\\\\d{5}\", [7], 0, 0, 0, 0, 0, 0, \"[347]\"], BR: [\"55\", \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"4(?:02|37)0|[34]00\"]], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:[358]|90)0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[16][1-9]|[2-57-9]\"], \"($1)\"]], \"0\", 0, \"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\"], BS: [\"1\", \"011\", \"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([3-8]\\\\d{6})$|1\", \"242$1\", 0, \"242\"], BT: [\"975\", \"00\", \"[17]\\\\d{7}|[2-8]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[67]|7\"]]]], BW: [\"267\", \"00\", \"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[24-6]|3[15-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], BY: [\"375\", \"810\", \"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:[56]|7[467])|2[1-3]\"], \"8 0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-4]\"], \"8 0$1\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"8 $1\"]], \"8\", 0, \"0|80?\", 0, 0, 0, 0, \"8~10\"], BZ: [\"501\", \"00\", \"(?:0800\\\\d|[2-8])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"0\"]]]], CA: [\"1\", \"011\", \"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\", [7, 10], 0, \"1\", 0, 0, 0, 0, 0, [[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", [10]], [\"\", [10]], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", [10]], [\"900[2-9]\\\\d{6}\", [10]], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\", [10]], 0, [\"310\\\\d{4}\", [7]], 0, [\"600[2-9]\\\\d{6}\", [10]]]], CC: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"([59]\\\\d{7})$|0\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CD: [\"243\", \"00\", \"[189]\\\\d{8}|[1-68]\\\\d{6}\", [7, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], CF: [\"236\", \"00\", \"(?:[27]\\\\d{3}|8776)\\\\d{4}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[278]\"]]]], CG: [\"242\", \"00\", \"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]]]], CH: [\"41\", \"00\", \"8\\\\d{11}|[2-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]|81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"8\"], \"0$1\"]], \"0\"], CI: [\"225\", \"00\", \"[02]\\\\d{9}\", [10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\", \"$1 $2 $3 $4\", [\"2\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"0\"]]]], CK: [\"682\", \"00\", \"[2-578]\\\\d{4}\", [5], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-578]\"]]]], CL: [\"56\", \"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\", \"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\", [9, 10, 11], [[\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\", \"2196\"], \"($1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[1-36]\"], \"($1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9[2-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"60|8\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"60\"]]]], CM: [\"237\", \"00\", \"[26]\\\\d{8}|88\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"88\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]|88\"]]]], CN: [\"86\", \"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\", \"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2[0-57-9])[19]\", \"(?:10|2[0-57-9])(?:10|9[56])\", \"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\", \"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\", \"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\", \"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"(?:4|80)0\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|2(?:[02-57-9]|1[1-9])\", \"10|2(?:[02-57-9]|1[1-9])\", \"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-578]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1[3-9]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"[12]\"], \"0$1\", 1]], \"0\", 0, \"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\", 0, 0, 0, 0, \"00\"], CO: [\"57\", \"00(?:4(?:[14]4|56)|[579])\", \"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\", [10, 11], [[\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"6\"], \"($1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3[0-357]|91\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1\"], \"0$1\", 0, \"$1 $2 $3\"]], \"0\", 0, \"0([3579]|4(?:[14]4|56))?\"], CR: [\"506\", \"00\", \"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\", [8, 10], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[3-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]\"]]], 0, 0, \"(19(?:0[0-2468]|1[09]|20|66|77|99))\"], CU: [\"53\", \"119\", \"[27]\\\\d{6,7}|[34]\\\\d{5,7}|63\\\\d{6}|(?:5|8\\\\d\\\\d)\\\\d{7}\", [6, 7, 8, 10], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"2[1-4]|[34]\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[56]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"8\"], \"0$1\"]], \"0\"], CV: [\"238\", \"0\", \"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-589]\"]]]], CW: [\"599\", \"00\", \"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3467]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9[4-8]\"]]], 0, 0, 0, 0, 0, \"[69]\"], CX: [\"61\", \"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\", \"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\", [6, 7, 8, 9, 10, 12], 0, \"0\", 0, \"([59]\\\\d{7})$|0\", \"8$1\", 0, 0, [[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", [9]], [\"4(?:(?:79|94)[01]|83[0-389])\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[0-26-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\", [9]], [\"180(?:0\\\\d{3}|2)\\\\d{3}\", [7, 10]], [\"190[0-26]\\\\d{6}\", [10]], 0, 0, 0, 0, [\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\", [9]], [\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\", [6, 8, 10, 12]]], \"0011\"], CY: [\"357\", \"00\", \"(?:[279]\\\\d|[58]0)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[257-9]\"]]]], CZ: [\"420\", \"00\", \"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"96\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]]], DE: [\"49\", \"00\", \"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [[\"(\\\\d{2})(\\\\d{3,13})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,12})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\", \"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"138\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{2,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:3|80)|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7,12})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{6})\", \"$1 $2\", [\"15[0568]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{7})\", \"$1 $2\", [\"15[1279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{8})\", \"$1 $2\", [\"18\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15\"], \"0$1\"]], \"0\"], DJ: [\"253\", \"00\", \"(?:2\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[27]\"]]]], DK: [\"45\", \"00\", \"[2-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-9]\"]]]], DM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"767$1\", 0, \"767\"], DO: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"8001|8[024]9\"], DZ: [\"213\", \"00\", \"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"]], \"0\"], EC: [\"593\", \"00\", \"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\", [8, 9, 10, 11], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[2-7]\"], \"(0$1)\", 0, \"$1-$2-$3\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], EE: [\"372\", \"00\", \"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]], [\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[45]|8(?:00|[1-49])\", \"[45]|8(?:00[1-9]|[1-49])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], EG: [\"20\", \"00\", \"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1[35]|[4-6]|8[2468]|9[235-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{8})\", \"$1 $2\", [\"1\"], \"0$1\"]], \"0\"], EH: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], 0, \"0\", 0, 0, 0, 0, \"528[89]\"], ER: [\"291\", \"00\", \"[178]\\\\d{6}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[178]\"], \"0$1\"]], \"0\"], ES: [\"34\", \"00\", \"[5-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-9]\"]]]], ET: [\"251\", \"00\", \"(?:11|[2-579]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-579]\"], \"0$1\"]], \"0\"], FI: [\"358\", \"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\", \"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\", [5, 6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"[2568][1-8]|3(?:0[1-9]|[1-9])|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[12]00|[368]|70[07-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,8})\", \"$1 $2\", [\"[1245]|7[135]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6,10})\", \"$1 $2\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, \"1[03-79]|[2-9]\", 0, \"00\"], FJ: [\"679\", \"0(?:0|52)\", \"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\", [7, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[235-9]|45\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], FK: [\"500\", \"00\", \"[2-7]\\\\d{4}\", [5]], FM: [\"691\", \"00\", \"(?:[39]\\\\d\\\\d|820)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[389]\"]]]], FO: [\"298\", \"00\", \"[2-9]\\\\d{5}\", [6], [[\"(\\\\d{6})\", \"$1\", [\"[2-9]\"]]], 0, 0, \"(10(?:01|[12]0|88))\"], FR: [\"33\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"]], \"0\"], GA: [\"241\", \"00\", \"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"11|[67]\"], \"0$1\"]], 0, 0, \"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\", \"$1\"], GB: [\"44\", \"00\", \"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\", [7, 9, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"1(?:[2-69][02-9]|[78])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25]|7(?:0|6[02-9])\", \"[25]|7(?:0|6(?:[03-9]|2[356]))\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1389]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:[0-5]\\\\d\\\\d|69[7-9]|70[0-79])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\", [9, 10]], [\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]], 0, \" x\"], GD: [\"1\", \"011\", \"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"473$1\", 0, \"473\"], GE: [\"995\", \"00\", \"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"32\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[57]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"]], \"0\"], GF: [\"594\", \"00\", \"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[56]|9[47]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[89]\"], \"0$1\"]], \"0\"], GG: [\"44\", \"00\", \"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\", [7, 9, 10], 0, \"0\", 0, \"([25-9]\\\\d{5})$|0\", \"1481$1\", 0, 0, [[\"1481[25-9]\\\\d{5}\", [10]], [\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\", [10]], [\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"], [\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\", [7, 10]], [\"70\\\\d{8}\", [10]], 0, [\"(?:3[0347]|55)\\\\d{8}\", [10]], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\", [10]], [\"56\\\\d{8}\", [10]]]], GH: [\"233\", \"00\", \"(?:[235]\\\\d{3}|800)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"]], \"0\"], GI: [\"350\", \"00\", \"(?:[25]\\\\d|60)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]]], GL: [\"299\", \"00\", \"(?:19|[2-689]\\\\d|70)\\\\d{4}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"19|[2-9]\"]]]], GM: [\"220\", \"00\", \"[2-9]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], GN: [\"224\", \"00\", \"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"3\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]]], GP: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], GQ: [\"240\", \"00\", \"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]]], GR: [\"30\", \"00\", \"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\", [10, 11, 12], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2689]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\", \"$1 $2 $3\", [\"8\"]]]], GT: [\"502\", \"00\", \"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-8]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], GU: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"671$1\", 0, \"671\"], GW: [\"245\", \"00\", \"[49]\\\\d{8}|4\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"]]]], GY: [\"592\", \"001\", \"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], HK: [\"852\", \"00(?:30|5[09]|[126-9]?)\", \"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\", [5, 6, 7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{2,5})\", \"$1 $2\", [\"900\", \"9003\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], HN: [\"504\", \"00\", \"8\\\\d{10}|[237-9]\\\\d{7}\", [8, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[237-9]\"]]]], HR: [\"385\", \"00\", \"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], HT: [\"509\", \"00\", \"(?:[2-489]\\\\d|55)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-589]\"]]]], HU: [\"36\", \"00\", \"[235-7]\\\\d{8}|[1-9]\\\\d{7}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"], \"(06 $1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"06 $1\"]], \"06\"], ID: [\"62\", \"00[89]\", \"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\", [7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"15\"]], [\"(\\\\d{2})(\\\\d{5,9})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"[2-79]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6,8})\", \"$1 $2\", [\"1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8\"], \"0$1\"]], \"0\"], IE: [\"353\", \"00\", \"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[45]0\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2569]|4[1-69]|7[14]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"70\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"81\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"4\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], IL: [\"972\", \"0(?:0|1[2-9])\", \"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{4})(\\\\d{3})\", \"$1-$2\", [\"125\"]], [\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"12\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1-$2\", [\"159\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], [\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"15\"]]], \"0\"], IM: [\"44\", \"00\", \"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"([25-8]\\\\d{5})$|0\", \"1624$1\", 0, \"74576|(?:16|7[56])24\"], IN: [\"91\", \"00\", \"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\", [8, 9, 10, 11, 12, 13], [[\"(\\\\d{8})\", \"$1\", [\"5(?:0|2[23]|3[03]|[67]1|88)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\", \"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"], 0, 1], [\"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], 0, 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\", \"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\", \"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\", \"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\", \"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\", \"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"], \"0$1\", 1], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"[6-9]\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:6|8[06])\", \"1(?:6|8[06]0)\"], 0, 1], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18\"], 0, 1]], \"0\"], IO: [\"246\", \"00\", \"3\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"3\"]]]], IQ: [\"964\", \"00\", \"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], IR: [\"98\", \"00\", \"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\", [4, 5, 6, 7, 10], [[\"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"]], \"0\"], IS: [\"354\", \"00|1(?:0(?:01|[12]0)|100)\", \"(?:38\\\\d|[4-9])\\\\d{6}\", [7, 9], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], IT: [\"39\", \"00\", \"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]], [\"(\\\\d{4})(\\\\d{2,6})\", \"$1 $2\", [\"0(?:[13-579][2-46-8]|8[236-8])\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1(?:44|[679])|[378]\"]], [\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]|14\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"3\"]]], 0, 0, 0, 0, 0, 0, [[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"], [\"3[1-9]\\\\d{8}|3[2-9]\\\\d{7}\", [9, 10]], [\"80(?:0\\\\d{3}|3)\\\\d{3}\", [6, 9]], [\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\", [6, 8, 9, 10]], [\"1(?:78\\\\d|99)\\\\d{6}\", [9, 10]], 0, 0, 0, [\"55\\\\d{8}\", [10]], [\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\", [6, 9]]]], JE: [\"44\", \"00\", \"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\", [10], 0, \"0\", 0, \"([0-24-8]\\\\d{5})$|0\", \"1534$1\", 0, 0, [[\"1534[0-24-8]\\\\d{5}\"], [\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97[7-9]))\\\\d{5}\"], [\"80(?:07(?:35|81)|8901)\\\\d{4}\"], [\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"], [\"701511\\\\d{4}\"], 0, [\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"], [\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"], [\"56\\\\d{8}\"]]], JM: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"658|876\"], JO: [\"962\", \"00\", \"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\", [8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"70\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], JP: [\"81\", \"010\", \"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\", \"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[36]|4(?:2[09]|7[01])\", \"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\", \"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[257-9]\"], \"0$1\"]], \"0\", 0, \"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\", \"$1\"], KE: [\"254\", \"000\", \"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"[24-6]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[17]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\"], KG: [\"996\", \"00\", \"8\\\\d{9}|[235-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[346]|[24-79])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235-79]|88\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], KH: [\"855\", \"00[14-9]\", \"1\\\\d{9}|[1-9]\\\\d{7,8}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], KI: [\"686\", \"00\", \"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\", [5, 8], 0, \"0\"], KM: [\"269\", \"00\", \"[3478]\\\\d{6}\", [7], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[3478]\"]]]], KN: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"869$1\", 0, \"869\"], KP: [\"850\", \"00|99\", \"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\", [8, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"]], \"0\"], KR: [\"82\", \"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\", [5, 6, 8, 9, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1\"]], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"[1346]|5[1-5]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1-$2-$3\", [\"5\"], \"0$1\"]], \"0\", 0, \"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"], KW: [\"965\", \"00\", \"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[169]|2(?:[235]|4[1-35-9])|52\"]], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[245]\"]]]], KY: [\"1\", \"011\", \"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"345$1\", 0, \"345\"], KZ: [\"7\", \"810\", \"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\", [10, 14], 0, \"8\", 0, 0, 0, 0, \"33|7\", 0, \"8~10\"], LA: [\"856\", \"00\", \"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"30[013-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\"], LB: [\"961\", \"00\", \"[27-9]\\\\d{7}|[13-9]\\\\d{6}\", [7, 8], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[27-9]\"]]], \"0\"], LC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-8]\\\\d{6})$|1\", \"758$1\", 0, \"758\"], LI: [\"423\", \"00\", \"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\", [7, 9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2379]|8(?:0[09]|7)\", \"[2379]|8(?:0(?:02|9)|7)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"69\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]]], \"0\", 0, \"(1001)|0\"], LK: [\"94\", \"00\", \"[1-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"]], \"0\"], LR: [\"231\", \"00\", \"(?:[25]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[4-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23578]\"], \"0$1\"]], \"0\"], LS: [\"266\", \"00\", \"(?:[256]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2568]\"]]]], LT: [\"370\", \"00\", \"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-7]\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\", 1], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"37|4(?:[15]|6[1-8])\"], \"(8-$1)\", 1], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[3-6]\"], \"(8-$1)\", 1]], \"8\", 0, \"[08]\"], LU: [\"352\", \"00\", \"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\", [4, 5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20[2-689]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]|90[015]\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\", \"$1 $2 $3 $4\", [\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]], 0, 0, \"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"], LV: [\"371\", \"00\", \"(?:[268]\\\\d|90)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[269]|8[01]\"]]]], LY: [\"218\", \"00\", \"[2-9]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"[2-9]\"], \"0$1\"]], \"0\"], MA: [\"212\", \"00\", \"[5-8]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5[45]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|9)|8(?:0[89]|92)\", \"5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|8(?:0[89]|92)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"8\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1-$2\", [\"[5-7]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"], [\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-2]|5[01]|8[0-3]))\\\\d{6}\"], [\"80[0-7]\\\\d{6}\"], [\"89\\\\d{7}\"], 0, 0, 0, 0, [\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]], MC: [\"377\", \"00\", \"(?:[3489]|6\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[389]\"]], [\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"]], \"0\"], MD: [\"373\", \"00\", \"(?:[235-7]\\\\d|[89]0)\\\\d{6}\", [8], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]\"], \"0$1\"]], \"0\"], ME: [\"382\", \"00\", \"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"0$1\"]], \"0\"], MF: [\"590\", \"00\", \"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"], [\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5]))\\\\d{4}\"], [\"80[0-5]\\\\d{6}\"], 0, 0, 0, 0, 0, [\"9(?:(?:395|76[018])\\\\d|475[0-5])\\\\d{4}\"]]], MG: [\"261\", \"00\", \"[23]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], \"0\", 0, \"([24-9]\\\\d{6})$|0\", \"20$1\"], MH: [\"692\", \"011\", \"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-6]\"]]], \"1\"], MK: [\"389\", \"00\", \"[2-578]\\\\d{7}\", [8], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2|34[47]|4(?:[37]7|5[47]|64)\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], \"0\"], ML: [\"223\", \"00\", \"[24-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]]], MM: [\"95\", \"00\", \"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\", [6, 7, 8, 9, 10], [[\"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-7]|8[1-35]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"92\"], \"0$1\"], [\"(\\\\d)(\\\\d{5})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], MN: [\"976\", \"001\", \"[12]\\\\d{7,9}|[5-9]\\\\d{7}\", [8, 9, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]], [\"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5,6})\", \"$1 $2\", [\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\", \"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"], \"0$1\"], [\"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"[12]\"], \"0$1\"]], \"0\"], MO: [\"853\", \"00\", \"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\", [7, 8], [[\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]]], MP: [\"1\", \"011\", \"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"670$1\", 0, \"670\"], MQ: [\"596\", \"00\", \"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[569]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], MR: [\"222\", \"00\", \"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]]], MS: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([34]\\\\d{6})$|1\", \"664$1\", 0, \"664\"], MT: [\"356\", \"00\", \"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2357-9]\"]]]], MU: [\"230\", \"0(?:0|[24-7]0|3[03])\", \"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\", [7, 8, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-46]|8[013]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57]\"]], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"8\"]]], 0, 0, 0, 0, 0, 0, 0, \"020\"], MV: [\"960\", \"0(?:0|19)\", \"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\", [7, 10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[34679]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], MW: [\"265\", \"00\", \"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\", [7, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[137-9]\"], \"0$1\"]], \"0\"], MX: [\"52\", \"0[09]\", \"1(?:(?:[27]2|44|87|99)[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-9]|8[1-69]|9[1-8])|[2-9]\\\\d)\\\\d{8}\", [10, 11], [[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|5[56]|81\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-9]\"], 0, 1], [\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$2 $3 $4\", [\"1(?:33|5[56]|81)\"], 0, 1], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 $3 $4\", [\"1\"], 0, 1]], \"01\", 0, \"0(?:[12]|4[45])|1\", 0, 0, 0, 0, \"00\"], MY: [\"60\", \"00\", \"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1(?:[02469]|[378][1-9]|53)|8\", \"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"], \"0$1\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1(?:[367]|80)\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"1\"], \"0$1\"]], \"0\"], MZ: [\"258\", \"00\", \"(?:2|8\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-79]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]]]], NA: [\"264\", \"00\", \"[68]\\\\d{7,8}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"87\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], NC: [\"687\", \"00\", \"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\", [6], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", [\"[02-57-9]\"]]]], NE: [\"227\", \"00\", \"[027-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[089]|2[013]|7[047]\"]]]], NF: [\"672\", \"00\", \"[13]\\\\d{5}\", [6], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1[0-3]\"]], [\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"[13]\"]]], 0, 0, \"([0-258]\\\\d{4})$\", \"3$1\"], NG: [\"234\", \"009\", \"(?:[124-7]|9\\\\d{3})\\\\d{6}|[1-9]\\\\d{7}|[78]\\\\d{9,13}\", [7, 8, 10, 11, 12, 13, 14], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-7]|8[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]\"], \"0$1\"]], \"0\"], NI: [\"505\", \"00\", \"(?:1800|[25-8]\\\\d{3})\\\\d{4}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[125-8]\"]]]], NL: [\"31\", \"00\", \"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\", [5, 6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [\"(\\\\d)(\\\\d{8})\", \"$1 $2\", [\"6\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-578]|91\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], \"0\"], NO: [\"47\", \"00\", \"(?:0|[2-9]\\\\d{3})\\\\d{4}\", [5, 8], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-79]\"]]], 0, 0, 0, 0, 0, \"[02-689]|7[0-8]\"], NP: [\"977\", \"00\", \"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"9\"]]], \"0\"], NR: [\"674\", \"00\", \"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-68]\"]]]], NU: [\"683\", \"00\", \"(?:[4-7]|888\\\\d)\\\\d{3}\", [4, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"8\"]]]], NZ: [\"64\", \"0(?:0|161)\", \"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,8})\", \"$1 $2\", [\"8[1-79]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"50[036-8]|8|90\", \"50(?:[0367]|88)|8|90\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"24|[346]|7[2-57-9]|9[2-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|[589]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1|2[028]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \"$1 $2 $3\", [\"2(?:[169]|7[0-35-9])|7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], OM: [\"968\", \"00\", \"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\", [7, 8, 9], [[\"(\\\\d{3})(\\\\d{4,6})\", \"$1 $2\", [\"[58]\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[179]\"]]]], PA: [\"507\", \"00\", \"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\", [7, 8, 10, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[68]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]]], PE: [\"51\", \"00|19(?:1[124]|77|90)00\", \"(?:[14-8]|9\\\\d)\\\\d{7}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[4-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" Anexo \"], PF: [\"689\", \"00\", \"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\", [6, 8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4|8[7-9]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], PG: [\"675\", \"00|140[1-3]\", \"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"18|[2-69]|85\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[78]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], PH: [\"63\", \"00\", \"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\", [6, 8, 9, 10, 11, 12, 13], [[\"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|8[2-8]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]], [\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1\"]]], \"0\"], PK: [\"92\", \"00\", \"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\", \"$1 $2 $3\", [\"[89]0\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"1\"]], [\"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\", \"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [\"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"58\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[24-9]\"], \"(0$1)\"]], \"0\"], PL: [\"48\", \"00\", \"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{5})\", \"$1\", [\"19\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11|20|64\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\", \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2-8]|[2-7]|8[1-79]|9[145]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"8\"]]]], PM: [\"508\", \"00\", \"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \"0\"], PR: [\"1\", \"011\", \"(?:[589]\\\\d\\\\d|787)\\\\d{7}\", [10], 0, \"1\", 0, 0, 0, 0, \"787|939\"], PS: [\"970\", \"00\", \"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\", [8, 9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], PT: [\"351\", \"00\", \"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"16|[236-9]\"]]]], PW: [\"680\", \"01[12]\", \"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]]]], PY: [\"595\", \"00\", \"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\", [6, 7, 8, 9, 10, 11], [[\"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{3})(\\\\d{4,5})\", \"$1 $2\", [\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"87\"]], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9(?:[5-79]|8[1-6])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"]]], \"0\"], QA: [\"974\", \"00\", \"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\", [7, 8, 9, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"2[16]|8\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]]], RE: [\"262\", \"00\", \"(?:26|[689]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2689]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, [[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"], [\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))\\\\d{4}\"], [\"80\\\\d{7}\"], [\"89[1-37-9]\\\\d{6}\"], 0, 0, 0, 0, [\"9(?:399[0-3]|479[0-5]|76(?:2[27]|3[0-37]))\\\\d{4}\"], [\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]], RO: [\"40\", \"00\", \"(?:[2378]\\\\d|62|90)\\\\d{7}|[23]\\\\d{5}\", [6, 9], [[\"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\", \"2[3-6]\\\\d9\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"219|31\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[236-9]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \" int \"], RS: [\"381\", \"00\", \"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\", [6, 7, 8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3,9})\", \"$1 $2\", [\"(?:2[389]|39)0|[7-9]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{5,10})\", \"$1 $2\", [\"[1-36]\"], \"0$1\"]], \"0\"], RU: [\"7\", \"810\", \"8\\\\d{13}|[347-9]\\\\d{9}\", [10, 14], [[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-8]|2[1-9])\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\", \"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"], \"8 ($1)\", 1], [\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"7(?:1[0-68]|2[1-9])\", \"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\", \"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[349]|8(?:[02-7]|1[1-8])\"], \"8 ($1)\", 1], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"8 ($1)\"]], \"8\", 0, 0, 0, 0, \"3[04-689]|[489]\", 0, \"8~10\"], RW: [\"250\", \"00\", \"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\", [8, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"]], \"0\"], SA: [\"966\", \"00\", \"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\", [9, 10], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"9\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"81\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]]], \"0\"], SB: [\"677\", \"0[01]\", \"(?:[1-6]|[7-9]\\\\d\\\\d)\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]], SC: [\"248\", \"010|0[0-2]\", \"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\", [7], [[\"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]|9[57]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], SD: [\"249\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], SE: [\"46\", \"00\", \"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\", [6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"9(?:00|39|44|9)\"], \"0$1\", 0, \"$1 $2\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\", \"$1-$2 $3\", [\"9(?:00|39|44)\"], \"0$1\", 0, \"$1 $2 $3\"], [\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"10|7\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9\"], \"0$1\", 0, \"$1 $2 $3 $4\"], [\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"[26]\"], \"0$1\", 0, \"$1 $2 $3 $4 $5\"]], \"0\"], SG: [\"65\", \"0[0-3]\\\\d\", \"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\", [8, 10, 11], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[369]|8(?:0[1-8]|[1-9])\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]]], SH: [\"290\", \"00\", \"(?:[256]\\\\d|8)\\\\d{3}\", [4, 5], 0, 0, 0, 0, 0, 0, \"[256]\"], SI: [\"386\", \"00|10(?:22|66|88|99)\", \"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\", [5, 6, 7, 8], [[\"(\\\\d{2})(\\\\d{3,6})\", \"$1 $2\", [\"8[09]|9\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"59|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[1-57]\"], \"(0$1)\"]], \"0\", 0, 0, 0, 0, 0, 0, \"00\"], SJ: [\"47\", \"00\", \"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\", [5, 8], 0, 0, 0, 0, 0, 0, \"79\"], SK: [\"421\", \"00\", \"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\", [6, 7, 9], [[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5][1-8]1\", \"[3-5][1-8]1[67]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"]], \"0\"], SL: [\"232\", \"00\", \"(?:[237-9]\\\\d|66)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"[236-9]\"], \"(0$1)\"]], \"0\"], SM: [\"378\", \"00\", \"(?:0549|[5-7]\\\\d)\\\\d{6}\", [8, 10], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"0\"]]], 0, 0, \"([89]\\\\d{5})$\", \"0549$1\"], SN: [\"221\", \"00\", \"(?:[378]\\\\d|93)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]]]], SO: [\"252\", \"00\", \"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\", [6, 7, 8, 9], [[\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"8[125]\"]], [\"(\\\\d{6})\", \"$1\", [\"[134]\"]], [\"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]], [\"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"(?:2|90)4|[67]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[348]|64|79|90\"]], [\"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"1|28|6[0-35-9]|77|9[2-9]\"]]], \"0\"], SR: [\"597\", \"00\", \"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\", [6, 7], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [\"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-5]\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]]], SS: [\"211\", \"00\", \"[19]\\\\d{8}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[19]\"], \"0$1\"]], \"0\"], ST: [\"239\", \"00\", \"(?:22|9\\\\d)\\\\d{5}\", [7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[29]\"]]]], SV: [\"503\", \"00\", \"[267]\\\\d{7}|[89]00\\\\d{4}(?:\\\\d{4})?\", [7, 8, 11], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]]], SX: [\"1\", \"011\", \"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"(5\\\\d{6})$|1\", \"721$1\", 0, \"721\"], SY: [\"963\", \"00\", \"[1-39]\\\\d{8}|[1-5]\\\\d{7}\", [8, 9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-5]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\", 1]], \"0\"], SZ: [\"268\", \"00\", \"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\", [8, 9], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [\"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"9\"]]]], TA: [\"290\", \"00\", \"8\\\\d{3}\", [4], 0, 0, 0, 0, 0, 0, \"8\"], TC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-479]\\\\d{6})$|1\", \"649$1\", 0, \"649\"], TD: [\"235\", \"00|16\", \"(?:22|[69]\\\\d|77)\\\\d{6}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2679]\"]]], 0, 0, 0, 0, 0, 0, 0, \"00\"], TG: [\"228\", \"00\", \"[279]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]]], TH: [\"66\", \"00[1-9]\", \"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\", [8, 9, 10, 13], [[\"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"]]], \"0\"], TJ: [\"992\", \"810\", \"[0-57-9]\\\\d{8}\", [9], [[\"(\\\\d{6})(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"44[02-479]|[34]7\"]], [\"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\"]], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[0-57-9]\"]]], 0, 0, 0, 0, 0, 0, 0, \"8~10\"], TK: [\"690\", \"00\", \"[2-47]\\\\d{3,6}\", [4, 5, 6, 7]], TL: [\"670\", \"00\", \"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\", [7, 8], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7\"]]]], TM: [\"993\", \"810\", \"[1-6]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[1-5]\"], \"(8 $1)\"], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], TN: [\"216\", \"00\", \"[2-57-9]\\\\d{7}\", [8], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]\"]]]], TO: [\"676\", \"00\", \"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\", [5, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]], [\"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[5-9]\"]]]], TR: [\"90\", \"00\", \"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\", [7, 10, 12, 13], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"512|8[01589]|90\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[0-59]|61)\", \"5(?:[0-59]|61[06])\", \"5(?:[0-59]|61[06]1)\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24][1-8]|3[1-9]\"], \"(0$1)\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\", \"$1 $2 $3\", [\"80\"], \"0$1\", 1]], \"0\"], TT: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-46-8]\\\\d{6})$|1\", \"868$1\", 0, \"868\"], TV: [\"688\", \"00\", \"(?:2|7\\\\d\\\\d|90)\\\\d{4}\", [5, 6, 7], [[\"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2\"]], [\"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"90\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], TW: [\"886\", \"0(?:0[25-79]|19)\", \"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\", [7, 8, 9, 10, 11], [[\"(\\\\d{2})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[258]0\"], \"0$1\"], [\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\", \"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, 0, \"#\"], TZ: [\"255\", \"00[056]\", \"(?:[25-8]\\\\d|41|90)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"5\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"]], \"0\"], UA: [\"380\", \"00\", \"[89]\\\\d{9}|[3-9]\\\\d{8}\", [9, 10], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\", \"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\", \"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-7]|89|9[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], \"0\", 0, 0, 0, 0, 0, 0, \"0~0\"], UG: [\"256\", \"00[057]\", \"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[27-9]|4(?:6[45]|[7-9])\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[34]\"], \"0$1\"]], \"0\"], US: [\"1\", \"011\", \"[2-9]\\\\d{9}|3\\\\d{6}\", [10], [[\"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"310\"], 0, 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", [\"[2-9]\"], 0, 1, \"$1-$2-$3\"]], \"1\", 0, 0, 0, 0, 0, [[\"(?:5056(?:[0-35-9]\\\\d|4[468])|73020\\\\d)\\\\d{4}|(?:4722|505[2-57-9]|983[289])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[013569]|3[0-24679]|4[167]|5[0-2]|6[0149]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"], [\"\"], [\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"], [\"900[2-9]\\\\d{6}\"], [\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]], UY: [\"598\", \"0(?:0|1[3-9]\\\\d)\", \"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\", [6, 7, 8, 9, 10, 11, 12, 13], [[\"(\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"0\"]], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[49]0|8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[124]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"0\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3 $4\", [\"0\"]]], \"0\", 0, 0, 0, 0, 0, 0, \"00\", \" int. \"], UZ: [\"998\", \"810\", \"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\", [9], [[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-9]\"], \"8 $1\"]], \"8\", 0, 0, 0, 0, 0, 0, \"8~10\"], VA: [\"39\", \"00\", \"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, \"06698\"], VC: [\"1\", \"011\", \"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-7]\\\\d{6})$|1\", \"784$1\", 0, \"784\"], VE: [\"58\", \"00\", \"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\", [10], [[\"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", [\"[24-689]\"], \"0$1\"]], \"0\"], VG: [\"1\", \"011\", \"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\", [10], 0, \"1\", 0, \"([2-578]\\\\d{6})$|1\", \"284$1\", 0, \"284\"], VI: [\"1\", \"011\", \"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\", [10], 0, \"1\", 0, \"([2-9]\\\\d{6})$|1\", \"340$1\", 0, \"340\"], VN: [\"84\", \"00\", \"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\", [7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", 1], [\"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"1\"], 0, 1], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"6\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[357-9]\"], \"0$1\", 1], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", 1], [\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\", 1]], \"0\"], VU: [\"678\", \"00\", \"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\", [5, 7], [[\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"]]]], WF: [\"681\", \"00\", \"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\", [6, 9], [[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[478]\"]], [\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]]], WS: [\"685\", \"0\", \"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\", [5, 6, 7, 10], [[\"(\\\\d{5})\", \"$1\", [\"[2-5]|6[1-9]\"]], [\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"[68]\"]], [\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"7\"]]]], XK: [\"383\", \"00\", \"[23]\\\\d{7,8}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\", [8, 9], [[\"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23]\"], \"0$1\"]], \"0\"], YE: [\"967\", \"00\", \"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\", [7, 8, 9], [[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[1-6]|7(?:[24-6]|8[0-7])\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \"0\"], YT: [\"262\", \"00\", \"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\", [9], 0, \"0\", 0, 0, 0, 0, 0, [[\"269(?:0[0-467]|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"], [\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"], [\"80\\\\d{7}\"], 0, 0, 0, 0, 0, [\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]], ZA: [\"27\", \"00\", \"[1-79]\\\\d{8}|8\\\\d{4,9}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-9]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], \"0\"], ZM: [\"260\", \"00\", \"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\", [9], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[28]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"[79]\"], \"0$1\"]], \"0\"], ZW: [\"263\", \"00\", \"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\", [5, 6, 7, 8, 9, 10], [[\"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"], \"0$1\"], [\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"[49]\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\", \"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"], \"(0$1)\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\", \"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{6})\", \"$1 $2\", [\"8\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"], \"0$1\"], [\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"29[013-9]|39|54\"], \"0$1\"], [\"(\\\\d{4})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258|5483\"], \"0$1\"]], \"0\"] }, nonGeographic: { 800: [\"800\", 0, \"(?:00|[1-9]\\\\d)\\\\d{6}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"\\\\d\"]]], 0, 0, 0, 0, 0, 0, [0, 0, [\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]], 808: [\"808\", 0, \"[1-9]\\\\d{7}\", [8], [[\"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[1-9]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, [\"[1-9]\\\\d{7}\"]]], 870: [\"870\", 0, \"7\\\\d{11}|[35-7]\\\\d{8}\", [9, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[35-7]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]], 878: [\"878\", 0, \"10\\\\d{10}\", [12], [[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\", [\"1\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"10\\\\d{10}\"]]], 881: [\"881\", 0, \"6\\\\d{9}|[0-36-9]\\\\d{8}\", [9, 10], [[\"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[0-37-9]\"]], [\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\", \"$1 $2 $3\", [\"6\"]]], 0, 0, 0, 0, 0, 0, [0, [\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]], 882: [\"882\", 0, \"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\", [7, 8, 9, 10, 11, 12], [[\"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [\"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"49\"]], [\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"1[36]|9\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"16\"]], [\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10|23|3(?:[15]|4[57])|4|51\"]], [\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34\"]], [\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"[1-35]\"]]], 0, 0, 0, 0, 0, 0, [0, [\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\", [7, 8, 9, 10, 12]], 0, 0, 0, 0, 0, 0, [\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]], 883: [\"883\", 0, \"(?:[1-4]\\\\d|51)\\\\d{6,10}\", [8, 9, 10, 11, 12], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\", \"$1 $2 $3\", [\"[14]|2[24-689]|3[02-689]|51[24-9]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"21\"]], [\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]], [\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"[235]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, [\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]], 888: [\"888\", 0, \"\\\\d{11}\", [11], [[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, [\"\\\\d{11}\"]]], 979: [\"979\", 0, \"[1359]\\\\d{8}\", [9], [[\"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1359]\"]]], 0, 0, 0, 0, 0, 0, [0, 0, 0, [\"[1359]\\\\d{8}\"]]] } };\nfunction Ad(e, d) {\n  var t = Array.prototype.slice.call(d);\n  return t.push(xd), e.apply(this, t);\n}\nfunction ie(e) {\n  \"@babel/helpers - typeof\";\n  return ie = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, ie(e);\n}\nfunction Oe(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction Dd(e, d, t) {\n  return d && Oe(e.prototype, d), t && Oe(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nfunction Rd(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Md(e, d) {\n  if (typeof d != \"function\" && d !== null)\n    throw new TypeError(\"Super expression must either be null or a function\");\n  e.prototype = Object.create(d && d.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), Object.defineProperty(e, \"prototype\", { writable: !1 }), d && k(e, d);\n}\nfunction Ld(e) {\n  var d = qe();\n  return function() {\n    var n = B(e), r;\n    if (d) {\n      var $ = B(this).constructor;\n      r = Reflect.construct(n, arguments, $);\n    } else\n      r = n.apply(this, arguments);\n    return kd(this, r);\n  };\n}\nfunction kd(e, d) {\n  if (d && (ie(d) === \"object\" || typeof d == \"function\"))\n    return d;\n  if (d !== void 0)\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return Ye(e);\n}\nfunction Ye(e) {\n  if (e === void 0)\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nfunction ae(e) {\n  var d = typeof Map == \"function\" ? /* @__PURE__ */ new Map() : void 0;\n  return ae = function(n) {\n    if (n === null || !Bd(n))\n      return n;\n    if (typeof n != \"function\")\n      throw new TypeError(\"Super expression must either be null or a function\");\n    if (typeof d < \"u\") {\n      if (d.has(n))\n        return d.get(n);\n      d.set(n, r);\n    }\n    function r() {\n      return U(n, arguments, B(this).constructor);\n    }\n    return r.prototype = Object.create(n.prototype, { constructor: { value: r, enumerable: !1, writable: !0, configurable: !0 } }), k(r, n);\n  }, ae(e);\n}\nfunction U(e, d, t) {\n  return qe() ? U = Reflect.construct : U = function(r, $, u) {\n    var o = [null];\n    o.push.apply(o, $);\n    var s = Function.bind.apply(r, o), i = new s();\n    return u && k(i, u.prototype), i;\n  }, U.apply(null, arguments);\n}\nfunction qe() {\n  if (typeof Reflect > \"u\" || !Reflect.construct || Reflect.construct.sham)\n    return !1;\n  if (typeof Proxy == \"function\")\n    return !0;\n  try {\n    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    })), !0;\n  } catch {\n    return !1;\n  }\n}\nfunction Bd(e) {\n  return Function.toString.call(e).indexOf(\"[native code]\") !== -1;\n}\nfunction k(e, d) {\n  return k = Object.setPrototypeOf || function(n, r) {\n    return n.__proto__ = r, n;\n  }, k(e, d);\n}\nfunction B(e) {\n  return B = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, B(e);\n}\nvar w = /* @__PURE__ */ function(e) {\n  Md(t, e);\n  var d = Ld(t);\n  function t(n) {\n    var r;\n    return Rd(this, t), r = d.call(this, n), Object.setPrototypeOf(Ye(r), t.prototype), r.name = r.constructor.name, r;\n  }\n  return Dd(t);\n}(/* @__PURE__ */ ae(Error)), se = 2, Gd = 17, jd = 3, O = \"0-9０-９٠-٩۰-۹\", Ud = \"-‐-―−ー－\", Hd = \"／/\", Vd = \"．.\", Kd = \"  ­​⁠　\", Wd = \"()（）［］\\\\[\\\\]\", zd = \"~⁓∼～\", V = \"\".concat(Ud).concat(Hd).concat(Vd).concat(Kd).concat(Wd).concat(zd), ce = \"+＋\";\nfunction Pe(e, d) {\n  e = e.split(\"-\"), d = d.split(\"-\");\n  for (var t = e[0].split(\".\"), n = d[0].split(\".\"), r = 0; r < 3; r++) {\n    var $ = Number(t[r]), u = Number(n[r]);\n    if ($ > u)\n      return 1;\n    if (u > $)\n      return -1;\n    if (!isNaN($) && isNaN(u))\n      return 1;\n    if (isNaN($) && !isNaN(u))\n      return -1;\n  }\n  return e[1] && d[1] ? e[1] > d[1] ? 1 : e[1] < d[1] ? -1 : 0 : !e[1] && d[1] ? 1 : e[1] && !d[1] ? -1 : 0;\n}\nvar Xd = {}.constructor;\nfunction H(e) {\n  return e != null && e.constructor === Xd;\n}\nfunction $e(e) {\n  \"@babel/helpers - typeof\";\n  return $e = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(d) {\n    return typeof d;\n  } : function(d) {\n    return d && typeof Symbol == \"function\" && d.constructor === Symbol && d !== Symbol.prototype ? \"symbol\" : typeof d;\n  }, $e(e);\n}\nfunction W(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Ne(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction z(e, d, t) {\n  return d && Ne(e.prototype, d), t && Ne(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar Zd = \"1.2.0\", Yd = \"1.7.35\", we = \" ext. \", qd = /^\\d+$/, v = /* @__PURE__ */ function() {\n  function e(d) {\n    W(this, e), d0(d), this.metadata = d, Je.call(this, d);\n  }\n  return z(e, [{\n    key: \"getCountries\",\n    value: function() {\n      return Object.keys(this.metadata.countries).filter(function(t) {\n        return t !== \"001\";\n      });\n    }\n  }, {\n    key: \"getCountryMetadata\",\n    value: function(t) {\n      return this.metadata.countries[t];\n    }\n  }, {\n    key: \"nonGeographic\",\n    value: function() {\n      if (!(this.v1 || this.v2 || this.v3))\n        return this.metadata.nonGeographic || this.metadata.nonGeographical;\n    }\n  }, {\n    key: \"hasCountry\",\n    value: function(t) {\n      return this.getCountryMetadata(t) !== void 0;\n    }\n  }, {\n    key: \"hasCallingCode\",\n    value: function(t) {\n      if (this.getCountryCodesForCallingCode(t))\n        return !0;\n      if (this.nonGeographic()) {\n        if (this.nonGeographic()[t])\n          return !0;\n      } else {\n        var n = this.countryCallingCodes()[t];\n        if (n && n.length === 1 && n[0] === \"001\")\n          return !0;\n      }\n    }\n  }, {\n    key: \"isNonGeographicCallingCode\",\n    value: function(t) {\n      return this.nonGeographic() ? !!this.nonGeographic()[t] : !this.getCountryCodesForCallingCode(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"country\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"selectNumberingPlan\",\n    value: function(t, n) {\n      if (t && qd.test(t) && (n = t, t = null), t && t !== \"001\") {\n        if (!this.hasCountry(t))\n          throw new Error(\"Unknown country: \".concat(t));\n        this.numberingPlan = new Ie(this.getCountryMetadata(t), this);\n      } else if (n) {\n        if (!this.hasCallingCode(n))\n          throw new Error(\"Unknown calling code: \".concat(n));\n        this.numberingPlan = new Ie(this.getNumberingPlanMetadata(n), this);\n      } else\n        this.numberingPlan = void 0;\n      return this;\n    }\n  }, {\n    key: \"getCountryCodesForCallingCode\",\n    value: function(t) {\n      var n = this.countryCallingCodes()[t];\n      if (n)\n        return n.length === 1 && n[0].length === 3 ? void 0 : n;\n    }\n  }, {\n    key: \"getCountryCodeForCallingCode\",\n    value: function(t) {\n      var n = this.getCountryCodesForCallingCode(t);\n      if (n)\n        return n[0];\n    }\n  }, {\n    key: \"getNumberingPlanMetadata\",\n    value: function(t) {\n      var n = this.getCountryCodeForCallingCode(t);\n      if (n)\n        return this.getCountryMetadata(n);\n      if (this.nonGeographic()) {\n        var r = this.nonGeographic()[t];\n        if (r)\n          return r;\n      } else {\n        var $ = this.countryCallingCodes()[t];\n        if ($ && $.length === 1 && $[0] === \"001\")\n          return this.metadata.countries[\"001\"];\n      }\n    }\n    // Deprecated.\n  }, {\n    key: \"countryCallingCode\",\n    value: function() {\n      return this.numberingPlan.callingCode();\n    }\n    // Deprecated.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      return this.numberingPlan.IDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      return this.numberingPlan.defaultIDDPrefix();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.numberingPlan.nationalNumberPattern();\n    }\n    // Deprecated.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      return this.numberingPlan.possibleLengths();\n    }\n    // Deprecated.\n  }, {\n    key: \"formats\",\n    value: function() {\n      return this.numberingPlan.formats();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixForParsing();\n    }\n    // Deprecated.\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.numberingPlan.nationalPrefixTransformRule();\n    }\n    // Deprecated.\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.numberingPlan.leadingDigits();\n    }\n    // Deprecated.\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.numberingPlan.hasTypes();\n    }\n    // Deprecated.\n  }, {\n    key: \"type\",\n    value: function(t) {\n      return this.numberingPlan.type(t);\n    }\n    // Deprecated.\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.numberingPlan.ext();\n    }\n  }, {\n    key: \"countryCallingCodes\",\n    value: function() {\n      return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes;\n    }\n    // Deprecated.\n  }, {\n    key: \"chooseCountryByCountryCallingCode\",\n    value: function(t) {\n      return this.selectNumberingPlan(t);\n    }\n  }, {\n    key: \"hasSelectedNumberingPlan\",\n    value: function() {\n      return this.numberingPlan !== void 0;\n    }\n  }]), e;\n}(), Ie = /* @__PURE__ */ function() {\n  function e(d, t) {\n    W(this, e), this.globalMetadataObject = t, this.metadata = d, Je.call(this, t.metadata);\n  }\n  return z(e, [{\n    key: \"callingCode\",\n    value: function() {\n      return this.metadata[0];\n    }\n    // Formatting information for regions which share\n    // a country calling code is contained by only one region\n    // for performance reasons. For example, for NANPA region\n    // (\"North American Numbering Plan Administration\",\n    //  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n    // it will be contained in the metadata for `US`.\n  }, {\n    key: \"getDefaultCountryMetadataForRegion\",\n    value: function() {\n      return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode());\n    }\n    // Is always present.\n  }, {\n    key: \"IDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[1];\n    }\n    // Is only present when a country supports multiple IDD prefixes.\n  }, {\n    key: \"defaultIDDPrefix\",\n    value: function() {\n      if (!(this.v1 || this.v2))\n        return this.metadata[12];\n    }\n  }, {\n    key: \"nationalNumberPattern\",\n    value: function() {\n      return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2];\n    }\n    // \"possible length\" data is always present in Google's metadata.\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.v1)\n        return this.metadata[this.v2 ? 2 : 3];\n    }\n  }, {\n    key: \"_getFormats\",\n    value: function(t) {\n      return t[this.v1 ? 2 : this.v2 ? 3 : 4];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // formats are all stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"formats\",\n    value: function() {\n      var t = this, n = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];\n      return n.map(function(r) {\n        return new Jd(r, t);\n      });\n    }\n  }, {\n    key: \"nationalPrefix\",\n    value: function() {\n      return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n    }\n  }, {\n    key: \"_getNationalPrefixFormattingRule\",\n    value: function(t) {\n      return t[this.v1 ? 4 : this.v2 ? 5 : 6];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // national prefix formatting rule is stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"_nationalPrefixForParsing\",\n    value: function() {\n      return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7];\n    }\n  }, {\n    key: \"nationalPrefixForParsing\",\n    value: function() {\n      return this._nationalPrefixForParsing() || this.nationalPrefix();\n    }\n  }, {\n    key: \"nationalPrefixTransformRule\",\n    value: function() {\n      return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n    }\n  }, {\n    key: \"_getNationalPrefixIsOptionalWhenFormatting\",\n    value: function() {\n      return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n    }\n    // For countries of the same region (e.g. NANPA)\n    // \"national prefix is optional when formatting\" flag is\n    // stored in the \"main\" country for that region.\n    // E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion());\n    }\n  }, {\n    key: \"leadingDigits\",\n    value: function() {\n      return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n    }\n  }, {\n    key: \"types\",\n    value: function() {\n      return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n    }\n  }, {\n    key: \"hasTypes\",\n    value: function() {\n      return this.types() && this.types().length === 0 ? !1 : !!this.types();\n    }\n  }, {\n    key: \"type\",\n    value: function(t) {\n      if (this.hasTypes() && Ee(this.types(), t))\n        return new e0(Ee(this.types(), t), this);\n    }\n  }, {\n    key: \"ext\",\n    value: function() {\n      return this.v1 || this.v2 ? we : this.metadata[13] || we;\n    }\n  }]), e;\n}(), Jd = /* @__PURE__ */ function() {\n  function e(d, t) {\n    W(this, e), this._format = d, this.metadata = t;\n  }\n  return z(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this._format[0];\n    }\n  }, {\n    key: \"format\",\n    value: function() {\n      return this._format[1];\n    }\n  }, {\n    key: \"leadingDigitsPatterns\",\n    value: function() {\n      return this._format[2] || [];\n    }\n  }, {\n    key: \"nationalPrefixFormattingRule\",\n    value: function() {\n      return this._format[3] || this.metadata.nationalPrefixFormattingRule();\n    }\n  }, {\n    key: \"nationalPrefixIsOptionalWhenFormattingInNationalFormat\",\n    value: function() {\n      return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n  }, {\n    key: \"nationalPrefixIsMandatoryWhenFormattingInNationalFormat\",\n    value: function() {\n      return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat();\n    }\n    // Checks whether national prefix formatting rule contains national prefix.\n  }, {\n    key: \"usesNationalPrefix\",\n    value: function() {\n      return !!(this.nationalPrefixFormattingRule() && // Check that national prefix formatting rule is not a \"dummy\" one.\n      !Qd.test(this.nationalPrefixFormattingRule()));\n    }\n  }, {\n    key: \"internationalFormat\",\n    value: function() {\n      return this._format[5] || this.format();\n    }\n  }]), e;\n}(), Qd = /^\\(?\\$1\\)?$/, e0 = /* @__PURE__ */ function() {\n  function e(d, t) {\n    W(this, e), this.type = d, this.metadata = t;\n  }\n  return z(e, [{\n    key: \"pattern\",\n    value: function() {\n      return this.metadata.v1 ? this.type : this.type[0];\n    }\n  }, {\n    key: \"possibleLengths\",\n    value: function() {\n      if (!this.metadata.v1)\n        return this.type[1] || this.metadata.possibleLengths();\n    }\n  }]), e;\n}();\nfunction Ee(e, d) {\n  switch (d) {\n    case \"FIXED_LINE\":\n      return e[0];\n    case \"MOBILE\":\n      return e[1];\n    case \"TOLL_FREE\":\n      return e[2];\n    case \"PREMIUM_RATE\":\n      return e[3];\n    case \"PERSONAL_NUMBER\":\n      return e[4];\n    case \"VOICEMAIL\":\n      return e[5];\n    case \"UAN\":\n      return e[6];\n    case \"PAGER\":\n      return e[7];\n    case \"VOIP\":\n      return e[8];\n    case \"SHARED_COST\":\n      return e[9];\n  }\n}\nfunction d0(e) {\n  if (!e)\n    throw new Error(\"[libphonenumber-js] `metadata` argument not passed. Check your arguments.\");\n  if (!H(e) || !H(e.countries))\n    throw new Error(\"[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got \".concat(H(e) ? \"an object of shape: { \" + Object.keys(e).join(\", \") + \" }\" : \"a \" + t0(e) + \": \" + e, \".\"));\n}\nvar t0 = function(d) {\n  return $e(d);\n};\nfunction fe(e, d) {\n  if (d = new v(d), d.hasCountry(e))\n    return d.country(e).countryCallingCode();\n  throw new Error(\"Unknown country: \".concat(e));\n}\nfunction n0(e, d) {\n  return d.countries.hasOwnProperty(e);\n}\nfunction Je(e) {\n  var d = e.version;\n  typeof d == \"number\" ? (this.v1 = d === 1, this.v2 = d === 2, this.v3 = d === 3, this.v4 = d === 4) : d ? Pe(d, Zd) === -1 ? this.v2 = !0 : Pe(d, Yd) === -1 ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0;\n}\nvar r0 = \";ext=\", x = function(d) {\n  return \"([\".concat(O, \"]{1,\").concat(d, \"})\");\n};\nfunction Qe(e) {\n  var d = \"20\", t = \"15\", n = \"9\", r = \"6\", $ = \"[  \\\\t,]*\", u = \"[:\\\\.．]?[  \\\\t,-]*\", o = \"#?\", s = \"(?:e?xt(?:ensi(?:ó?|ó))?n?|ｅ?ｘｔｎ?|доб|anexo)\", i = \"(?:[xｘ#＃~～]|int|ｉｎｔ)\", p = \"[- ]+\", b = \"[  \\\\t]*\", C = \"(?:,{2}|;)\", h = r0 + x(d), y = $ + s + u + x(d) + o, X = $ + i + u + x(n) + o, Z = p + x(r) + \"#\", Y = b + C + u + x(t) + o, F = b + \"(?:,)+\" + u + x(n) + o;\n  return h + \"|\" + y + \"|\" + X + \"|\" + Z + \"|\" + Y + \"|\" + F;\n}\nvar i0 = \"[\" + O + \"]{\" + se + \"}\", a0 = \"[\" + ce + \"]{0,1}(?:[\" + V + \"]*[\" + O + \"]){3,}[\" + V + O + \"]*\", $0 = new RegExp(\"^[\" + ce + \"]{0,1}(?:[\" + V + \"]*[\" + O + \"]){1,2}$\", \"i\"), o0 = a0 + // Phone number extensions\n\"(?:\" + Qe() + \")?\", u0 = new RegExp(\n  // Either a short two-digit-only phone number\n  \"^\" + i0 + \"$|^\" + o0 + \"$\",\n  \"i\"\n);\nfunction l0(e) {\n  return e.length >= se && u0.test(e);\n}\nfunction s0(e) {\n  return $0.test(e);\n}\nvar Se = new RegExp(\"(?:\" + Qe() + \")$\", \"i\");\nfunction c0(e) {\n  var d = e.search(Se);\n  if (d < 0)\n    return {};\n  for (var t = e.slice(0, d), n = e.match(Se), r = 1; r < n.length; ) {\n    if (n[r])\n      return {\n        number: t,\n        ext: n[r]\n      };\n    r++;\n  }\n}\nvar f0 = {\n  0: \"0\",\n  1: \"1\",\n  2: \"2\",\n  3: \"3\",\n  4: \"4\",\n  5: \"5\",\n  6: \"6\",\n  7: \"7\",\n  8: \"8\",\n  9: \"9\",\n  \"０\": \"0\",\n  // Fullwidth digit 0\n  \"１\": \"1\",\n  // Fullwidth digit 1\n  \"２\": \"2\",\n  // Fullwidth digit 2\n  \"３\": \"3\",\n  // Fullwidth digit 3\n  \"４\": \"4\",\n  // Fullwidth digit 4\n  \"５\": \"5\",\n  // Fullwidth digit 5\n  \"６\": \"6\",\n  // Fullwidth digit 6\n  \"７\": \"7\",\n  // Fullwidth digit 7\n  \"８\": \"8\",\n  // Fullwidth digit 8\n  \"９\": \"9\",\n  // Fullwidth digit 9\n  \"٠\": \"0\",\n  // Arabic-indic digit 0\n  \"١\": \"1\",\n  // Arabic-indic digit 1\n  \"٢\": \"2\",\n  // Arabic-indic digit 2\n  \"٣\": \"3\",\n  // Arabic-indic digit 3\n  \"٤\": \"4\",\n  // Arabic-indic digit 4\n  \"٥\": \"5\",\n  // Arabic-indic digit 5\n  \"٦\": \"6\",\n  // Arabic-indic digit 6\n  \"٧\": \"7\",\n  // Arabic-indic digit 7\n  \"٨\": \"8\",\n  // Arabic-indic digit 8\n  \"٩\": \"9\",\n  // Arabic-indic digit 9\n  \"۰\": \"0\",\n  // Eastern-Arabic digit 0\n  \"۱\": \"1\",\n  // Eastern-Arabic digit 1\n  \"۲\": \"2\",\n  // Eastern-Arabic digit 2\n  \"۳\": \"3\",\n  // Eastern-Arabic digit 3\n  \"۴\": \"4\",\n  // Eastern-Arabic digit 4\n  \"۵\": \"5\",\n  // Eastern-Arabic digit 5\n  \"۶\": \"6\",\n  // Eastern-Arabic digit 6\n  \"۷\": \"7\",\n  // Eastern-Arabic digit 7\n  \"۸\": \"8\",\n  // Eastern-Arabic digit 8\n  \"۹\": \"9\"\n  // Eastern-Arabic digit 9\n};\nfunction p0(e) {\n  return f0[e];\n}\nfunction h0(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = y0(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction y0(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return _e(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return _e(e, d);\n  }\n}\nfunction _e(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Fe(e) {\n  for (var d = \"\", t = h0(e.split(\"\")), n; !(n = t()).done; ) {\n    var r = n.value;\n    d += g0(r, d) || \"\";\n  }\n  return d;\n}\nfunction g0(e, d) {\n  return e === \"+\" ? d ? void 0 : \"+\" : p0(e);\n}\nfunction m0(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = v0(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction v0(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return Te(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return Te(e, d);\n  }\n}\nfunction Te(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction b0(e, d) {\n  for (var t = e.slice(), n = m0(d), r; !(r = n()).done; ) {\n    var $ = r.value;\n    e.indexOf($) < 0 && t.push($);\n  }\n  return t.sort(function(u, o) {\n    return u - o;\n  });\n}\nfunction pe(e, d) {\n  return ed(e, void 0, d);\n}\nfunction ed(e, d, t) {\n  var n = t.type(d), r = n && n.possibleLengths() || t.possibleLengths();\n  if (!r)\n    return \"IS_POSSIBLE\";\n  if (d === \"FIXED_LINE_OR_MOBILE\") {\n    if (!t.type(\"FIXED_LINE\"))\n      return ed(e, \"MOBILE\", t);\n    var $ = t.type(\"MOBILE\");\n    $ && (r = b0(r, $.possibleLengths()));\n  } else if (d && !n)\n    return \"INVALID_LENGTH\";\n  var u = e.length, o = r[0];\n  return o === u ? \"IS_POSSIBLE\" : o > u ? \"TOO_SHORT\" : r[r.length - 1] < u ? \"TOO_LONG\" : r.indexOf(u, 1) >= 0 ? \"IS_POSSIBLE\" : \"INVALID_LENGTH\";\n}\nfunction C0(e, d, t) {\n  if (d === void 0 && (d = {}), t = new v(t), d.v2) {\n    if (!e.countryCallingCode)\n      throw new Error(\"Invalid phone number object passed\");\n    t.selectNumberingPlan(e.countryCallingCode);\n  } else {\n    if (!e.phone)\n      return !1;\n    if (e.country) {\n      if (!t.hasCountry(e.country))\n        throw new Error(\"Unknown country: \".concat(e.country));\n      t.country(e.country);\n    } else {\n      if (!e.countryCallingCode)\n        throw new Error(\"Invalid phone number object passed\");\n      t.selectNumberingPlan(e.countryCallingCode);\n    }\n  }\n  if (t.possibleLengths())\n    return dd(e.phone || e.nationalNumber, t);\n  if (e.countryCallingCode && t.isNonGeographicCallingCode(e.countryCallingCode))\n    return !0;\n  throw new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\n}\nfunction dd(e, d) {\n  switch (pe(e, d)) {\n    case \"IS_POSSIBLE\":\n      return !0;\n    default:\n      return !1;\n  }\n}\nfunction I(e, d) {\n  return e = e || \"\", new RegExp(\"^(?:\" + d + \")$\").test(e);\n}\nfunction O0(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = P0(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction P0(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return xe(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return xe(e, d);\n  }\n}\nfunction xe(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nvar N0 = [\"MOBILE\", \"PREMIUM_RATE\", \"TOLL_FREE\", \"SHARED_COST\", \"VOIP\", \"PERSONAL_NUMBER\", \"PAGER\", \"UAN\", \"VOICEMAIL\"];\nfunction he(e, d, t) {\n  if (d = d || {}, !(!e.country && !e.countryCallingCode)) {\n    t = new v(t), t.selectNumberingPlan(e.country, e.countryCallingCode);\n    var n = d.v2 ? e.nationalNumber : e.phone;\n    if (I(n, t.nationalNumberPattern())) {\n      if (de(n, \"FIXED_LINE\", t))\n        return t.type(\"MOBILE\") && t.type(\"MOBILE\").pattern() === \"\" || !t.type(\"MOBILE\") || de(n, \"MOBILE\", t) ? \"FIXED_LINE_OR_MOBILE\" : \"FIXED_LINE\";\n      for (var r = O0(N0), $; !($ = r()).done; ) {\n        var u = $.value;\n        if (de(n, u, t))\n          return u;\n      }\n    }\n  }\n}\nfunction de(e, d, t) {\n  return d = t.type(d), !d || !d.pattern() || d.possibleLengths() && d.possibleLengths().indexOf(e.length) < 0 ? !1 : I(e, d.pattern());\n}\nfunction w0(e, d, t) {\n  if (d = d || {}, t = new v(t), t.selectNumberingPlan(e.country, e.countryCallingCode), t.hasTypes())\n    return he(e, d, t.metadata) !== void 0;\n  var n = d.v2 ? e.nationalNumber : e.phone;\n  return I(n, t.nationalNumberPattern());\n}\nfunction I0(e, d, t) {\n  var n = new v(t), r = n.getCountryCodesForCallingCode(e);\n  return r ? r.filter(function($) {\n    return E0(d, $, t);\n  }) : [];\n}\nfunction E0(e, d, t) {\n  var n = new v(t);\n  return n.selectNumberingPlan(d), n.numberingPlan.possibleLengths().indexOf(e.length) >= 0;\n}\nfunction S0(e) {\n  return e.replace(new RegExp(\"[\".concat(V, \"]+\"), \"g\"), \" \").trim();\n}\nvar _0 = /(\\$\\d)/;\nfunction F0(e, d, t) {\n  var n = t.useInternationalFormat, r = t.withNationalPrefix;\n  t.carrierCode, t.metadata;\n  var $ = e.replace(new RegExp(d.pattern()), n ? d.internationalFormat() : (\n    // This library doesn't use `domestic_carrier_code_formatting_rule`,\n    // because that one is only used when formatting phone numbers\n    // for dialing from a mobile phone, and this is not a dialing library.\n    // carrierCode && format.domesticCarrierCodeFormattingRule()\n    // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n    // \t// Then, replace the $FG in the formatting rule with the first group\n    // \t// and the carrier code combined in the appropriate way.\n    // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n    // \t: (\n    // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n    // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n    // \t\t\t: format.format()\n    // \t)\n    r && d.nationalPrefixFormattingRule() ? d.format().replace(_0, d.nationalPrefixFormattingRule()) : d.format()\n  ));\n  return n ? S0($) : $;\n}\nvar T0 = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/;\nfunction x0(e, d, t) {\n  var n = new v(t);\n  if (n.selectNumberingPlan(e, d), n.defaultIDDPrefix())\n    return n.defaultIDDPrefix();\n  if (T0.test(n.IDDPrefix()))\n    return n.IDDPrefix();\n}\nfunction A0(e) {\n  var d = e.number, t = e.ext;\n  if (!d)\n    return \"\";\n  if (d[0] !== \"+\")\n    throw new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n  return \"tel:\".concat(d).concat(t ? \";ext=\" + t : \"\");\n}\nfunction D0(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = R0(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction R0(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return Ae(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return Ae(e, d);\n  }\n}\nfunction Ae(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction De(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Re(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? De(Object(t), !0).forEach(function(n) {\n      M0(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : De(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction M0(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nvar Me = {\n  formatExtension: function(d, t, n) {\n    return \"\".concat(d).concat(n.ext()).concat(t);\n  }\n};\nfunction L0(e, d, t, n) {\n  if (t ? t = Re(Re({}, Me), t) : t = Me, n = new v(n), e.country && e.country !== \"001\") {\n    if (!n.hasCountry(e.country))\n      throw new Error(\"Unknown country: \".concat(e.country));\n    n.country(e.country);\n  } else if (e.countryCallingCode)\n    n.selectNumberingPlan(e.countryCallingCode);\n  else\n    return e.phone || \"\";\n  var r = n.countryCallingCode(), $ = t.v2 ? e.nationalNumber : e.phone, u;\n  switch (d) {\n    case \"NATIONAL\":\n      return $ ? (u = K($, e.carrierCode, \"NATIONAL\", n, t), te(u, e.ext, n, t.formatExtension)) : \"\";\n    case \"INTERNATIONAL\":\n      return $ ? (u = K($, null, \"INTERNATIONAL\", n, t), u = \"+\".concat(r, \" \").concat(u), te(u, e.ext, n, t.formatExtension)) : \"+\".concat(r);\n    case \"E.164\":\n      return \"+\".concat(r).concat($);\n    case \"RFC3966\":\n      return A0({\n        number: \"+\".concat(r).concat($),\n        ext: e.ext\n      });\n    case \"IDD\":\n      if (!t.fromCountry)\n        return;\n      var o = B0($, e.carrierCode, r, t.fromCountry, n);\n      return te(o, e.ext, n, t.formatExtension);\n    default:\n      throw new Error('Unknown \"format\" argument passed to \"formatNumber()\": \"'.concat(d, '\"'));\n  }\n}\nfunction K(e, d, t, n, r) {\n  var $ = k0(n.formats(), e);\n  return $ ? F0(e, $, {\n    useInternationalFormat: t === \"INTERNATIONAL\",\n    withNationalPrefix: !($.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && r && r.nationalPrefix === !1),\n    carrierCode: d,\n    metadata: n\n  }) : e;\n}\nfunction k0(e, d) {\n  for (var t = D0(e), n; !(n = t()).done; ) {\n    var r = n.value;\n    if (r.leadingDigitsPatterns().length > 0) {\n      var $ = r.leadingDigitsPatterns()[r.leadingDigitsPatterns().length - 1];\n      if (d.search($) !== 0)\n        continue;\n    }\n    if (I(d, r.pattern()))\n      return r;\n  }\n}\nfunction te(e, d, t, n) {\n  return d ? n(e, d, t) : e;\n}\nfunction B0(e, d, t, n, r) {\n  var $ = fe(n, r.metadata);\n  if ($ === t) {\n    var u = K(e, d, \"NATIONAL\", r);\n    return t === \"1\" ? t + \" \" + u : u;\n  }\n  var o = x0(n, void 0, r.metadata);\n  if (o)\n    return \"\".concat(o, \" \").concat(t, \" \").concat(K(e, null, \"INTERNATIONAL\", r));\n}\nfunction Le(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction ke(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Le(Object(t), !0).forEach(function(n) {\n      G0(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Le(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction G0(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction j0(e, d) {\n  if (!(e instanceof d))\n    throw new TypeError(\"Cannot call a class as a function\");\n}\nfunction Be(e, d) {\n  for (var t = 0; t < d.length; t++) {\n    var n = d[t];\n    n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n  }\n}\nfunction U0(e, d, t) {\n  return d && Be(e.prototype, d), t && Be(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e;\n}\nvar H0 = /* @__PURE__ */ function() {\n  function e(d, t, n) {\n    if (j0(this, e), !d)\n      throw new TypeError(\"`country` or `countryCallingCode` not passed\");\n    if (!t)\n      throw new TypeError(\"`nationalNumber` not passed\");\n    if (!n)\n      throw new TypeError(\"`metadata` not passed\");\n    var r = K0(d, n), $ = r.country, u = r.countryCallingCode;\n    this.country = $, this.countryCallingCode = u, this.nationalNumber = t, this.number = \"+\" + this.countryCallingCode + this.nationalNumber, this.getMetadata = function() {\n      return n;\n    };\n  }\n  return U0(e, [{\n    key: \"setExt\",\n    value: function(t) {\n      this.ext = t;\n    }\n  }, {\n    key: \"getPossibleCountries\",\n    value: function() {\n      return this.country ? [this.country] : I0(this.countryCallingCode, this.nationalNumber, this.getMetadata());\n    }\n  }, {\n    key: \"isPossible\",\n    value: function() {\n      return C0(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isValid\",\n    value: function() {\n      return w0(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"isNonGeographic\",\n    value: function() {\n      var t = new v(this.getMetadata());\n      return t.isNonGeographicCallingCode(this.countryCallingCode);\n    }\n  }, {\n    key: \"isEqual\",\n    value: function(t) {\n      return this.number === t.number && this.ext === t.ext;\n    }\n    // This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\n    // but later it was found out that it doesn't include the possible `TOO_SHORT` result\n    // returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\n    // so eventually I simply commented out this method from the `PhoneNumber` class\n    // and just left the `validatePhoneNumberLength()` function, even though that one would require\n    // and additional step to also validate the actual country / calling code of the phone number.\n    // validateLength() {\n    // \tconst metadata = new Metadata(this.getMetadata())\n    // \tmetadata.selectNumberingPlan(this.countryCallingCode)\n    // \tconst result = checkNumberLength(this.nationalNumber, metadata)\n    // \tif (result !== 'IS_POSSIBLE') {\n    // \t\treturn result\n    // \t}\n    // }\n  }, {\n    key: \"getType\",\n    value: function() {\n      return he(this, {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"format\",\n    value: function(t, n) {\n      return L0(this, t, n ? ke(ke({}, n), {}, {\n        v2: !0\n      }) : {\n        v2: !0\n      }, this.getMetadata());\n    }\n  }, {\n    key: \"formatNational\",\n    value: function(t) {\n      return this.format(\"NATIONAL\", t);\n    }\n  }, {\n    key: \"formatInternational\",\n    value: function(t) {\n      return this.format(\"INTERNATIONAL\", t);\n    }\n  }, {\n    key: \"getURI\",\n    value: function(t) {\n      return this.format(\"RFC3966\", t);\n    }\n  }]), e;\n}(), V0 = function(d) {\n  return /^[A-Z]{2}$/.test(d);\n};\nfunction K0(e, d) {\n  var t, n, r = new v(d);\n  return V0(e) ? (t = e, r.selectNumberingPlan(t), n = r.countryCallingCode()) : n = e, {\n    country: t,\n    countryCallingCode: n\n  };\n}\nvar W0 = new RegExp(\"([\" + O + \"])\");\nfunction z0(e, d, t, n) {\n  if (d) {\n    var r = new v(n);\n    r.selectNumberingPlan(d, t);\n    var $ = new RegExp(r.IDDPrefix());\n    if (e.search($) === 0) {\n      e = e.slice(e.match($)[0].length);\n      var u = e.match(W0);\n      if (!(u && u[1] != null && u[1].length > 0 && u[1] === \"0\"))\n        return e;\n    }\n  }\n}\nfunction X0(e, d) {\n  if (e && d.numberingPlan.nationalPrefixForParsing()) {\n    var t = new RegExp(\"^(?:\" + d.numberingPlan.nationalPrefixForParsing() + \")\"), n = t.exec(e);\n    if (n) {\n      var r, $, u = n.length - 1, o = u > 0 && n[u];\n      if (d.nationalPrefixTransformRule() && o)\n        r = e.replace(t, d.nationalPrefixTransformRule()), u > 1 && ($ = n[1]);\n      else {\n        var s = n[0];\n        r = e.slice(s.length), o && ($ = n[1]);\n      }\n      var i;\n      if (o) {\n        var p = e.indexOf(n[1]), b = e.slice(0, p);\n        b === d.numberingPlan.nationalPrefix() && (i = d.numberingPlan.nationalPrefix());\n      } else\n        i = n[0];\n      return {\n        nationalNumber: r,\n        nationalPrefix: i,\n        carrierCode: $\n      };\n    }\n  }\n  return {\n    nationalNumber: e\n  };\n}\nfunction oe(e, d) {\n  var t = X0(e, d), n = t.carrierCode, r = t.nationalNumber;\n  if (r !== e) {\n    if (!Z0(e, r, d))\n      return {\n        nationalNumber: e\n      };\n    if (d.possibleLengths() && !Y0(r, d))\n      return {\n        nationalNumber: e\n      };\n  }\n  return {\n    nationalNumber: r,\n    carrierCode: n\n  };\n}\nfunction Z0(e, d, t) {\n  return !(I(e, t.nationalNumberPattern()) && !I(d, t.nationalNumberPattern()));\n}\nfunction Y0(e, d) {\n  switch (pe(e, d)) {\n    case \"TOO_SHORT\":\n    case \"INVALID_LENGTH\":\n      return !1;\n    default:\n      return !0;\n  }\n}\nfunction q0(e, d, t, n) {\n  var r = d ? fe(d, n) : t;\n  if (e.indexOf(r) === 0) {\n    n = new v(n), n.selectNumberingPlan(d, t);\n    var $ = e.slice(r.length), u = oe($, n), o = u.nationalNumber, s = oe(e, n), i = s.nationalNumber;\n    if (!I(i, n.nationalNumberPattern()) && I(o, n.nationalNumberPattern()) || pe(i, n) === \"TOO_LONG\")\n      return {\n        countryCallingCode: r,\n        number: $\n      };\n  }\n  return {\n    number: e\n  };\n}\nfunction J0(e, d, t, n) {\n  if (!e)\n    return {};\n  var r;\n  if (e[0] !== \"+\") {\n    var $ = z0(e, d, t, n);\n    if ($ && $ !== e)\n      r = !0, e = \"+\" + $;\n    else {\n      if (d || t) {\n        var u = q0(e, d, t, n), o = u.countryCallingCode, s = u.number;\n        if (o)\n          return {\n            countryCallingCodeSource: \"FROM_NUMBER_WITHOUT_PLUS_SIGN\",\n            countryCallingCode: o,\n            number: s\n          };\n      }\n      return {\n        // No need to set it to `UNSPECIFIED`. It can be just `undefined`.\n        // countryCallingCodeSource: 'UNSPECIFIED',\n        number: e\n      };\n    }\n  }\n  if (e[1] === \"0\")\n    return {};\n  n = new v(n);\n  for (var i = 2; i - 1 <= jd && i <= e.length; ) {\n    var p = e.slice(1, i);\n    if (n.hasCallingCode(p))\n      return n.selectNumberingPlan(p), {\n        countryCallingCodeSource: r ? \"FROM_NUMBER_WITH_IDD\" : \"FROM_NUMBER_WITH_PLUS_SIGN\",\n        countryCallingCode: p,\n        number: e.slice(i)\n      };\n    i++;\n  }\n  return {};\n}\nfunction Q0(e, d) {\n  var t = typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t)\n    return (t = t.call(e)).next.bind(t);\n  if (Array.isArray(e) || (t = et(e)) || d && e && typeof e.length == \"number\") {\n    t && (e = t);\n    var n = 0;\n    return function() {\n      return n >= e.length ? { done: !0 } : { done: !1, value: e[n++] };\n    };\n  }\n  throw new TypeError(`Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction et(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return Ge(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return Ge(e, d);\n  }\n}\nfunction Ge(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction dt(e, d) {\n  var t = d.countries, n = d.defaultCountry, r = d.metadata;\n  r = new v(r);\n  for (var $ = [], u = Q0(t), o; !(o = u()).done; ) {\n    var s = o.value;\n    if (r.country(s), r.leadingDigits()) {\n      if (e && e.search(r.leadingDigits()) === 0)\n        return s;\n    } else if (he({\n      phone: e,\n      country: s\n    }, void 0, r.metadata))\n      if (n) {\n        if (s === n)\n          return s;\n        $.push(s);\n      } else\n        return s;\n  }\n  if ($.length > 0)\n    return $[0];\n}\nvar tt = !1;\nfunction nt(e, d) {\n  var t = d.nationalNumber, n = d.defaultCountry, r = d.metadata;\n  if (tt && r.isNonGeographicCallingCode(e))\n    return \"001\";\n  var $ = r.getCountryCodesForCallingCode(e);\n  if ($)\n    return $.length === 1 ? $[0] : dt(t, {\n      countries: $,\n      defaultCountry: n,\n      metadata: r.metadata\n    });\n}\nvar td = \"+\", rt = \"[\\\\-\\\\.\\\\(\\\\)]?\", je = \"([\" + O + \"]|\" + rt + \")\", it = \"^\\\\\" + td + je + \"*[\" + O + \"]\" + je + \"*$\", at = new RegExp(it, \"g\"), ue = O, $t = \"[\" + ue + \"]+((\\\\-)*[\" + ue + \"])*\", ot = \"a-zA-Z\", ut = \"[\" + ot + \"]+((\\\\-)*[\" + ue + \"])*\", lt = \"^(\" + $t + \"\\\\.)*\" + ut + \"\\\\.?$\", st = new RegExp(lt, \"g\"), Ue = \"tel:\", le = \";phone-context=\", ct = \";isub=\";\nfunction ft(e) {\n  var d = e.indexOf(le);\n  if (d < 0)\n    return null;\n  var t = d + le.length;\n  if (t >= e.length)\n    return \"\";\n  var n = e.indexOf(\";\", t);\n  return n >= 0 ? e.substring(t, n) : e.substring(t);\n}\nfunction pt(e) {\n  return e === null ? !0 : e.length === 0 ? !1 : at.test(e) || st.test(e);\n}\nfunction ht(e, d) {\n  var t = d.extractFormattedPhoneNumber, n = ft(e);\n  if (!pt(n))\n    throw new w(\"NOT_A_NUMBER\");\n  var r;\n  if (n === null)\n    r = t(e) || \"\";\n  else {\n    r = \"\", n.charAt(0) === td && (r += n);\n    var $ = e.indexOf(Ue), u;\n    $ >= 0 ? u = $ + Ue.length : u = 0;\n    var o = e.indexOf(le);\n    r += e.substring(u, o);\n  }\n  var s = r.indexOf(ct);\n  if (s > 0 && (r = r.substring(0, s)), r !== \"\")\n    return r;\n}\nvar yt = 250, gt = new RegExp(\"[\" + ce + O + \"]\"), mt = new RegExp(\"[^\" + O + \"#]+$\");\nfunction vt(e, d, t) {\n  if (d = d || {}, t = new v(t), d.defaultCountry && !t.hasCountry(d.defaultCountry))\n    throw d.v2 ? new w(\"INVALID_COUNTRY\") : new Error(\"Unknown country: \".concat(d.defaultCountry));\n  var n = Ct(e, d.v2, d.extract), r = n.number, $ = n.ext, u = n.error;\n  if (!r) {\n    if (d.v2)\n      throw u === \"TOO_SHORT\" ? new w(\"TOO_SHORT\") : new w(\"NOT_A_NUMBER\");\n    return {};\n  }\n  var o = Pt(r, d.defaultCountry, d.defaultCallingCode, t), s = o.country, i = o.nationalNumber, p = o.countryCallingCode, b = o.countryCallingCodeSource, C = o.carrierCode;\n  if (!t.hasSelectedNumberingPlan()) {\n    if (d.v2)\n      throw new w(\"INVALID_COUNTRY\");\n    return {};\n  }\n  if (!i || i.length < se) {\n    if (d.v2)\n      throw new w(\"TOO_SHORT\");\n    return {};\n  }\n  if (i.length > Gd) {\n    if (d.v2)\n      throw new w(\"TOO_LONG\");\n    return {};\n  }\n  if (d.v2) {\n    var h = new H0(p, i, t.metadata);\n    return s && (h.country = s), C && (h.carrierCode = C), $ && (h.ext = $), h.__countryCallingCodeSource = b, h;\n  }\n  var y = (d.extended ? t.hasSelectedNumberingPlan() : s) ? I(i, t.nationalNumberPattern()) : !1;\n  return d.extended ? {\n    country: s,\n    countryCallingCode: p,\n    carrierCode: C,\n    valid: y,\n    possible: y ? !0 : !!(d.extended === !0 && t.possibleLengths() && dd(i, t)),\n    phone: i,\n    ext: $\n  } : y ? Ot(s, i, $) : {};\n}\nfunction bt(e, d, t) {\n  if (e) {\n    if (e.length > yt) {\n      if (t)\n        throw new w(\"TOO_LONG\");\n      return;\n    }\n    if (d === !1)\n      return e;\n    var n = e.search(gt);\n    if (!(n < 0))\n      return e.slice(n).replace(mt, \"\");\n  }\n}\nfunction Ct(e, d, t) {\n  var n = ht(e, {\n    extractFormattedPhoneNumber: function(u) {\n      return bt(u, t, d);\n    }\n  });\n  if (!n)\n    return {};\n  if (!l0(n))\n    return s0(n) ? {\n      error: \"TOO_SHORT\"\n    } : {};\n  var r = c0(n);\n  return r.ext ? r : {\n    number: n\n  };\n}\nfunction Ot(e, d, t) {\n  var n = {\n    country: e,\n    phone: d\n  };\n  return t && (n.ext = t), n;\n}\nfunction Pt(e, d, t, n) {\n  var r = J0(Fe(e), d, t, n.metadata), $ = r.countryCallingCodeSource, u = r.countryCallingCode, o = r.number, s;\n  if (u)\n    n.selectNumberingPlan(u);\n  else if (o && (d || t))\n    n.selectNumberingPlan(d, t), d && (s = d), u = t || fe(d, n.metadata);\n  else\n    return {};\n  if (!o)\n    return {\n      countryCallingCodeSource: $,\n      countryCallingCode: u\n    };\n  var i = oe(Fe(o), n), p = i.nationalNumber, b = i.carrierCode, C = nt(u, {\n    nationalNumber: p,\n    defaultCountry: d,\n    metadata: n\n  });\n  return C && (s = C, C === \"001\" || n.country(s)), {\n    country: s,\n    countryCallingCode: u,\n    countryCallingCodeSource: $,\n    nationalNumber: p,\n    carrierCode: b\n  };\n}\nfunction He(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Ve(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? He(Object(t), !0).forEach(function(n) {\n      Nt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : He(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Nt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction wt(e, d, t) {\n  return vt(e, Ve(Ve({}, d), {}, {\n    v2: !0\n  }), t);\n}\nfunction Ke(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction It(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? Ke(Object(t), !0).forEach(function(n) {\n      Et(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : Ke(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Et(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction St(e, d) {\n  return xt(e) || Tt(e, d) || Ft(e, d) || _t();\n}\nfunction _t() {\n  throw new TypeError(`Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);\n}\nfunction Ft(e, d) {\n  if (e) {\n    if (typeof e == \"string\")\n      return We(e, d);\n    var t = Object.prototype.toString.call(e).slice(8, -1);\n    if (t === \"Object\" && e.constructor && (t = e.constructor.name), t === \"Map\" || t === \"Set\")\n      return Array.from(e);\n    if (t === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))\n      return We(e, d);\n  }\n}\nfunction We(e, d) {\n  (d == null || d > e.length) && (d = e.length);\n  for (var t = 0, n = new Array(d); t < d; t++)\n    n[t] = e[t];\n  return n;\n}\nfunction Tt(e, d) {\n  var t = e == null ? null : typeof Symbol < \"u\" && e[Symbol.iterator] || e[\"@@iterator\"];\n  if (t != null) {\n    var n = [], r = !0, $ = !1, u, o;\n    try {\n      for (t = t.call(e); !(r = (u = t.next()).done) && (n.push(u.value), !(d && n.length === d)); r = !0)\n        ;\n    } catch (s) {\n      $ = !0, o = s;\n    } finally {\n      try {\n        !r && t.return != null && t.return();\n      } finally {\n        if ($)\n          throw o;\n      }\n    }\n    return n;\n  }\n}\nfunction xt(e) {\n  if (Array.isArray(e))\n    return e;\n}\nfunction At(e) {\n  var d = Array.prototype.slice.call(e), t = St(d, 4), n = t[0], r = t[1], $ = t[2], u = t[3], o, s, i;\n  if (typeof n == \"string\")\n    o = n;\n  else\n    throw new TypeError(\"A text for parsing must be a string.\");\n  if (!r || typeof r == \"string\")\n    u ? (s = $, i = u) : (s = void 0, i = $), r && (s = It({\n      defaultCountry: r\n    }, s));\n  else if (H(r))\n    $ ? (s = r, i = $) : i = r;\n  else\n    throw new Error(\"Invalid second argument: \".concat(r));\n  return {\n    text: o,\n    options: s,\n    metadata: i\n  };\n}\nfunction ze(e, d) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    d && (n = n.filter(function(r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, n);\n  }\n  return t;\n}\nfunction Xe(e) {\n  for (var d = 1; d < arguments.length; d++) {\n    var t = arguments[d] != null ? arguments[d] : {};\n    d % 2 ? ze(Object(t), !0).forEach(function(n) {\n      Dt(e, n, t[n]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ze(Object(t)).forEach(function(n) {\n      Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(t, n));\n    });\n  }\n  return e;\n}\nfunction Dt(e, d, t) {\n  return d in e ? Object.defineProperty(e, d, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[d] = t, e;\n}\nfunction Rt(e, d, t) {\n  d && d.defaultCountry && !n0(d.defaultCountry, t) && (d = Xe(Xe({}, d), {}, {\n    defaultCountry: void 0\n  }));\n  try {\n    return wt(e, d, t);\n  } catch (n) {\n    if (!(n instanceof w))\n      throw n;\n  }\n}\nfunction Mt() {\n  var e = At(arguments), d = e.text, t = e.options, n = e.metadata;\n  return Rt(d, t, n);\n}\nfunction ne() {\n  return Ad(Mt, arguments);\n}\nconst Lt = {\n  beforeMount(e, d, t) {\n    if (typeof d.value != \"function\") {\n      const n = t.context.name;\n      let r = `[Vue-click-outside:] provided expression ${d.expression} is not a function, but has to be`;\n      n && (r += `Found in component ${n}`), console.warn(r);\n    }\n    e.clickOutsideEvent = function(n) {\n      const r = n.composedPath ? n.composedPath() : n.path;\n      e === n.target || e.contains(n.target) || r.includes(e) || d.value(n, e);\n    }, document.body.addEventListener(\"click\", e.clickOutsideEvent);\n  },\n  unmounted(e) {\n    document.body.removeEventListener(\"click\", e.clickOutsideEvent);\n  }\n}, kt = [\"aria-expanded\", \"tabindex\"], Bt = { class: \"vti__selection\" }, Gt = {\n  key: 1,\n  class: \"vti__country-code\"\n}, jt = { class: \"vti__dropdown-arrow\" }, Ut = {\n  key: 0,\n  class: \"vti__search_box_container\"\n}, Ht = [\"placeholder\"], Vt = [\"onClick\", \"onMousemove\", \"aria-selected\"], Kt = { key: 1 }, Wt = [\"type\", \"autocomplete\", \"autofocus\", \"disabled\", \"id\", \"maxlength\", \"name\", \"placeholder\", \"readonly\", \"required\", \"tabindex\", \"value\", \"aria-describedby\"], zt = /* @__PURE__ */ gd({\n  name: \"VueTelInput\",\n  directives: {\n    clickOutside: Lt\n  },\n  __name: \"vue-tel-input\",\n  props: /* @__PURE__ */ ve({\n    allCountries: {\n      type: Array,\n      default: () => m(\"allCountries\")\n    },\n    autoFormat: {\n      type: Boolean,\n      default: () => m(\"autoFormat\")\n    },\n    customValidate: {\n      type: [Boolean, RegExp],\n      default: () => m(\"customValidate\")\n    },\n    defaultCountry: {\n      // Default country code, ie: 'AU'\n      // Will override the current country of user\n      type: [String, Number],\n      default: () => m(\"defaultCountry\")\n    },\n    disabled: {\n      type: Boolean,\n      default: () => m(\"disabled\")\n    },\n    autoDefaultCountry: {\n      type: Boolean,\n      default: () => m(\"autoDefaultCountry\")\n    },\n    dropdownOptions: {\n      type: Object,\n      default: () => m(\"dropdownOptions\")\n    },\n    ignoredCountries: {\n      type: Array,\n      default: () => m(\"ignoredCountries\")\n    },\n    inputOptions: {\n      type: Object,\n      default: () => m(\"inputOptions\")\n    },\n    invalidMsg: {\n      type: String,\n      default: () => m(\"invalidMsg\")\n    },\n    mode: {\n      type: String,\n      default: () => m(\"mode\")\n    },\n    onlyCountries: {\n      type: Array,\n      default: () => m(\"onlyCountries\")\n    },\n    preferredCountries: {\n      type: Array,\n      default: () => m(\"preferredCountries\")\n    },\n    validCharactersOnly: {\n      type: Boolean,\n      default: () => m(\"validCharactersOnly\")\n    },\n    styleClasses: {\n      type: [String, Array, Object],\n      default: () => m(\"styleClasses\")\n    }\n  }, {\n    modelValue: { type: String },\n    modelModifiers: {}\n  }),\n  emits: /* @__PURE__ */ ve([\n    \"blur\",\n    \"close\",\n    \"country-changed\",\n    \"enter\",\n    \"focus\",\n    \"on-input\",\n    \"open\",\n    \"space\",\n    \"validate\"\n  ], [\"update:modelValue\"]),\n  setup(e, { expose: d, emit: t }) {\n    const n = J(), r = J(), $ = J(), u = t, o = e, s = md(e, \"modelValue\");\n    _(s, (a, l) => {\n      ad() ? i.phone = a ?? \"\" : be(() => {\n        i.phone = l ?? \"\", ye();\n      });\n    });\n    const i = vd({\n      phone: \"\",\n      activeCountryCode: void 0,\n      open: !1,\n      finishMounted: !1,\n      selectedIndex: null,\n      typeToFindInput: \"\",\n      typeToFindTimer: void 0,\n      dropdownOpenDirection: \"below\",\n      parsedPlaceholder: o.inputOptions.placeholder,\n      searchQuery: \"\"\n    });\n    _(() => i.open, (a) => {\n      a ? (yd(), u(\"open\")) : u(\"close\");\n    });\n    const p = A(() => o.onlyCountries.length ? o.allCountries.filter(({ iso2: a }) => o.onlyCountries.some((l) => L(l) === a)) : o.ignoredCountries.length ? o.allCountries.filter(\n      ({ iso2: a }) => !o.ignoredCountries.includes(L(a)) && !o.ignoredCountries.includes(M(a))\n    ) : o.allCountries), b = A(() => F(i.activeCountryCode));\n    _(b, (a, l) => {\n      if (!a && (l != null && l.iso2)) {\n        i.activeCountryCode = l.iso2;\n        return;\n      }\n      a != null && a.iso2 && u(\"country-changed\", a);\n    });\n    const C = A(() => {\n      var l;\n      const a = M(o.mode);\n      return a === \"auto\" ? (l = i.phone) != null && l.startsWith(\"+\") ? \"international\" : \"national\" : [\"national\", \"international\", \"e.164\", \"rfc3966\", \"idd\"].includes(a) ? a : (console.error('Invalid value of prop \"mode\"'), \"international\");\n    }), h = A(() => {\n      const l = [...Y(o.preferredCountries).map((g) => ({ ...g, preferred: !0 })), ...p.value];\n      if (!o.dropdownOptions.showSearchBox)\n        return l;\n      const c = i.searchQuery.toLowerCase().replace(/[~`!@#$%^&*()+={}\\[\\];:\\'\\\"<>.,\\/\\\\\\?-_]/g, \"\");\n      return l.filter(\n        (g) => new RegExp(c, \"i\").test(g.name) || new RegExp(c, \"i\").test(g.iso2) || new RegExp(c, \"i\").test(g.dialCode)\n      );\n    }), y = A(() => {\n      var f;\n      const a = i.phone.startsWith(\"+\") ? ne(i.phone) : ne(i.phone, i.activeCountryCode), l = {\n        country: a == null ? void 0 : a.country,\n        countryCode: a == null ? void 0 : a.country,\n        formatted: i.phone,\n        valid: a == null ? void 0 : a.isValid(),\n        possible: (f = a == null ? void 0 : a.isPossible) == null ? void 0 : f.call(a),\n        nationalNumber: a == null ? void 0 : a.nationalNumber\n      };\n      return l.valid && (l.formatted = a == null ? void 0 : a.format(L(C.value))), a != null && a.country && (o.ignoredCountries.length || o.onlyCountries.length) && !F(a.country) && (l.valid = !1, l.possible = !1, a.country = null), a ? {\n        ...l,\n        ...a\n      } : l;\n    });\n    _(() => y.value.countryCode, (a) => {\n      a && (i.activeCountryCode = a);\n    }), _(() => y.value.valid, () => {\n      u(\"validate\", y.value);\n    }), _(() => y.value.formatted, (a) => {\n      !o.autoFormat || o.customValidate || (G(a), be(() => {\n        a && !s.value && (i.phone = a);\n      }));\n    }), _(() => o.inputOptions.placeholder, X), bd(() => {\n      s.value && (i.phone = s.value.trim()), id(), Z().then(() => {\n        var a;\n        !i.phone && ((a = o.inputOptions) != null && a.showDialCode) && i.activeCountryCode && (i.phone = `+${i.activeCountryCode}`), u(\"validate\", y.value);\n      }).catch(console.error).then(() => {\n        i.finishMounted = !0;\n      });\n    });\n    function X() {\n      i.parsedPlaceholder = o.inputOptions.placeholder;\n    }\n    function Z() {\n      return new Promise((a) => {\n        var f;\n        if (((f = i.phone) == null ? void 0 : f[0]) === \"+\") {\n          a();\n          return;\n        }\n        if (o.defaultCountry) {\n          if (typeof o.defaultCountry == \"string\") {\n            S(o.defaultCountry), a();\n            return;\n          }\n          if (typeof o.defaultCountry == \"number\") {\n            const c = nd(o.defaultCountry);\n            if (c) {\n              S(c.iso2), a();\n              return;\n            }\n          }\n        }\n        const l = o.preferredCountries[0] || p.value[0];\n        o.autoDefaultCountry ? _d().then((c) => {\n          S(c || i.activeCountryCode);\n        }).catch((c) => {\n          console.warn(c), S(l);\n        }).then(() => {\n          a();\n        }) : (S(l), a());\n      });\n    }\n    function Y(a = []) {\n      return a.map(F).filter(Boolean);\n    }\n    function F(a = \"\") {\n      return p.value.find((l) => l.iso2 === L(a));\n    }\n    function nd(a) {\n      return p.value.find((l) => Number(l.dialCode) === a);\n    }\n    function rd(a, l) {\n      const f = i.selectedIndex === a, c = a === o.preferredCountries.length - 1, g = o.preferredCountries.some((q) => L(q) === l);\n      return {\n        highlighted: f,\n        \"last-preferred\": c,\n        preferred: g\n      };\n    }\n    function S(a) {\n      var f, c, g;\n      let l = a;\n      if (typeof l == \"string\" && (l = F(l)), !!l) {\n        if (((f = i.phone) == null ? void 0 : f[0]) === \"+\" && l.iso2 && y.value.nationalNumber) {\n          i.activeCountryCode = l.iso2, i.phone = ((c = ne(\n            y.value.nationalNumber,\n            l.iso2\n          )) == null ? void 0 : c.formatInternational()) ?? \"\";\n          return;\n        }\n        if ((g = o.inputOptions) != null && g.showDialCode && l) {\n          i.phone = `+${l.dialCode}`, i.activeCountryCode = l.iso2;\n          return;\n        }\n        i.activeCountryCode = l.iso2, G(i.phone);\n      }\n    }\n    function id() {\n      const a = i.phone;\n      if (o.validCharactersOnly) {\n        const l = i.phone.match(/[()\\-+0-9\\s]*/g);\n        i.phone = l.join(\"\");\n      }\n      if (o.customValidate && o.customValidate instanceof RegExp) {\n        const l = i.phone.match(o.customValidate);\n        i.phone = l.join(\"\");\n      }\n      a !== i.phone && G(i.phone);\n    }\n    function ad() {\n      return o.validCharactersOnly && !/^[()\\-+0-9\\s]*$/.test(i.phone) ? !1 : o.customValidate ? $d() : !0;\n    }\n    function $d() {\n      return o.customValidate instanceof RegExp ? o.customValidate.test(i.phone) : !1;\n    }\n    function ye() {\n      var a;\n      (a = $.value) == null || a.setCustomValidity(y.value.valid ? \"\" : o.invalidMsg), G(i.phone);\n    }\n    function G(a) {\n      s.value = a, u(\"on-input\", a, y.value, $.value);\n    }\n    function od(a) {\n      u(\"blur\", a);\n    }\n    function ud(a) {\n      Fd($.value, i.phone.length), u(\"focus\", a);\n    }\n    function ld(a) {\n      u(\"enter\", a);\n    }\n    function sd(a) {\n      u(\"space\", a);\n    }\n    function cd() {\n      var a;\n      (a = $.value) == null || a.focus();\n    }\n    function fd() {\n      var a;\n      (a = $.value) == null || a.blur();\n    }\n    function ge() {\n      o.disabled || o.dropdownOptions.disabled || (i.searchQuery = \"\", i.open = !i.open);\n    }\n    function pd() {\n      i.open = !1;\n    }\n    function hd(a) {\n      if (a.keyCode === 40) {\n        a.preventDefault(), i.open = !0, i.selectedIndex === null ? i.selectedIndex = 0 : i.selectedIndex = Math.min(h.value.length - 1, i.selectedIndex + 1);\n        const l = r.value.children[i.selectedIndex];\n        l.focus(), l.offsetTop + l.clientHeight > r.value.scrollTop + r.value.clientHeight && (r.value.scrollTop = l.offsetTop - r.value.clientHeight + l.clientHeight);\n      } else if (a.keyCode === 38) {\n        a.preventDefault(), i.open = !0, i.selectedIndex === null ? i.selectedIndex = h.value.length - 1 : i.selectedIndex = Math.max(0, i.selectedIndex - 1);\n        const l = r.value.children[i.selectedIndex];\n        l.focus(), l.offsetTop < r.value.scrollTop && (r.value.scrollTop = l.offsetTop);\n      } else if (a.keyCode === 13)\n        i.selectedIndex !== null && S(h.value[i.selectedIndex]), i.open = !i.open;\n      else if (i.open) {\n        i.typeToFindInput += a.key, clearTimeout(i.typeToFindTimer), i.typeToFindTimer = setTimeout(() => {\n          i.typeToFindInput = \"\";\n        }, 700);\n        const l = h.value.slice(o.preferredCountries.length).findIndex((f) => M(f.name).startsWith(i.typeToFindInput));\n        if (l >= 0) {\n          i.selectedIndex = o.preferredCountries.length + l;\n          const f = r.value.children[i.selectedIndex], c = f.offsetTop < r.value.scrollTop, g = f.offsetTop + f.clientHeight > r.value.scrollTop + r.value.clientHeight;\n          (c || g) && (r.value.scrollTop = f.offsetTop - r.value.clientHeight / 2);\n        }\n      }\n    }\n    function me() {\n      i.selectedIndex = h.value.map((a) => a.iso2).indexOf(i.activeCountryCode), i.open = !1;\n    }\n    function yd() {\n      window.innerHeight - n.value.getBoundingClientRect().bottom > 200 ? i.dropdownOpenDirection = \"below\" : i.dropdownOpenDirection = \"above\";\n    }\n    return d({\n      focus: cd,\n      blur: fd\n    }), (a, l) => {\n      const f = Cd(\"click-outside\");\n      return P(), N(\"div\", {\n        ref_key: \"refRoot\",\n        ref: n,\n        class: E([\"vue-tel-input\", e.styleClasses, { disabled: e.disabled }])\n      }, [\n        Q((P(), N(\"div\", {\n          \"aria-label\": \"Country Code Selector\",\n          \"aria-haspopup\": \"listbox\",\n          \"aria-expanded\": i.open,\n          role: \"button\",\n          class: E([\"vti__dropdown\", { open: i.open, disabled: e.dropdownOptions.disabled }]),\n          tabindex: e.dropdownOptions.tabindex,\n          onKeydown: [\n            hd,\n            D(ge, [\"space\"]),\n            D(me, [\"esc\"]),\n            D(me, [\"tab\"])\n          ],\n          onClick: ge\n        }, [\n          R(\"span\", Bt, [\n            e.dropdownOptions.showFlags ? (P(), N(\"span\", {\n              key: 0,\n              class: E([\"vti__flag\", Ce(M)(i.activeCountryCode)])\n            }, null, 2)) : T(\"\", !0),\n            e.dropdownOptions.showDialCodeInSelection ? (P(), N(\"span\", Gt, \" +\" + j(b.value && b.value.dialCode), 1)) : T(\"\", !0),\n            ee(a.$slots, \"arrow-icon\", {\n              open: i.open\n            }, () => [\n              R(\"span\", jt, j(i.open ? \"▲\" : \"▼\"), 1)\n            ])\n          ]),\n          i.open ? (P(), N(\"ul\", {\n            key: 0,\n            ref_key: \"refList\",\n            ref: r,\n            class: E([\"vti__dropdown-list\", i.dropdownOpenDirection]),\n            role: \"listbox\"\n          }, [\n            e.dropdownOptions.showSearchBox ? (P(), N(\"div\", Ut, [\n              ee(a.$slots, \"search-icon\"),\n              Q(R(\"input\", {\n                class: E([\"vti__input\", \"vti__search_box\"]),\n                \"aria-label\": \"Search by country name or country code\",\n                placeholder: e.dropdownOptions.searchBoxPlaceholder || (h.value.length ? h.value[0].name : \"\"),\n                type: \"text\",\n                \"onUpdate:modelValue\": l[0] || (l[0] = (c) => i.searchQuery = c),\n                onClick: l[1] || (l[1] = Od(() => {\n                }, [\"stop\"]))\n              }, null, 8, Ht), [\n                [Pd, i.searchQuery]\n              ])\n            ])) : T(\"\", !0),\n            (P(!0), N(Nd, null, wd(h.value, (c, g) => (P(), N(\"li\", {\n              role: \"option\",\n              class: E([\"vti__dropdown-item\", rd(g, c.iso2)]),\n              key: c.iso2 + (c.preferred ? \"-preferred\" : \"\"),\n              tabindex: \"-1\",\n              onClick: (q) => S(c),\n              onMousemove: (q) => i.selectedIndex = g,\n              \"aria-selected\": i.activeCountryCode === c.iso2 && !c.preferred\n            }, [\n              e.dropdownOptions.showFlags ? (P(), N(\"span\", {\n                key: 0,\n                class: E([\"vti__flag\", Ce(M)(c.iso2)])\n              }, null, 2)) : T(\"\", !0),\n              R(\"strong\", null, j(c.name), 1),\n              e.dropdownOptions.showDialCodeInList ? (P(), N(\"span\", Kt, \" +\" + j(c.dialCode), 1)) : T(\"\", !0)\n            ], 42, Vt))), 128))\n          ], 2)) : T(\"\", !0)\n        ], 42, kt)), [\n          [f, pd]\n        ]),\n        Q(R(\"input\", {\n          \"onUpdate:modelValue\": l[2] || (l[2] = (c) => i.phone = c),\n          ref_key: \"refInput\",\n          ref: $,\n          type: e.inputOptions.type,\n          autocomplete: e.inputOptions.autocomplete,\n          autofocus: e.inputOptions.autofocus,\n          class: E([\"vti__input\", \"vti__phone\", e.inputOptions.styleClasses]),\n          disabled: e.disabled,\n          id: e.inputOptions.id,\n          maxlength: e.inputOptions.maxlength,\n          name: e.inputOptions.name,\n          placeholder: i.parsedPlaceholder,\n          readonly: e.inputOptions.readonly,\n          required: e.inputOptions.required,\n          tabindex: e.inputOptions.tabindex,\n          value: s.value,\n          \"aria-describedby\": e.inputOptions[\"aria-describedby\"],\n          onBlur: od,\n          onFocus: ud,\n          onInput: ye,\n          onKeyup: [\n            D(ld, [\"enter\"]),\n            D(sd, [\"space\"])\n          ]\n        }, null, 42, Wt), [\n          [Id, i.phone]\n        ]),\n        ee(a.$slots, \"icon-right\")\n      ], 2);\n    };\n  }\n}), Zt = {\n  install(e, d = {}) {\n    const {\n      dropdownOptions: t,\n      inputOptions: n,\n      ...r\n    } = d, {\n      dropdownOptions: $,\n      inputOptions: u,\n      ...o\n    } = Ze;\n    re.options = {\n      inputOptions: {\n        ...u,\n        ...n\n      },\n      dropdownOptions: {\n        ...$,\n        ...t\n      },\n      ...o,\n      ...r\n    }, e.component(\"vue-tel-input\", zt);\n  }\n};\nexport {\n  zt as VueTelInput,\n  Zt as default\n};\n","<template>\n  <div class=\"ccb-field__input-wrapper\">\n    <VueTelInput\n      @input=\"onInput\"\n      mode=\"international\"\n      :value=\"field.displayValue\"\n      :inputOptions=\"options\"\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { IValidatedFormField } from \"@/widget/shared/types/fields/input.type\";\nimport { useValidatedFormField } from \"@/widget/actions/fields/composable/useValidatedFormField.ts\";\n\nimport { VueTelInput } from \"vue-tel-input\";\nimport \"vue-tel-input/vue-tel-input.css\";\n\nconst emit = defineEmits<{\n  (event: \"update\", value: string): void;\n}>();\n\ntype Props = {\n  field: IValidatedFormField;\n};\n\nconst props = defineProps<Props>();\nconst { onInput } = useValidatedFormField(props, emit);\n\nconst options = {\n  placeholder: props.field.placeholder,\n};\n</script>\n\n<style lang=\"scss\">\n.ccb-order-phone {\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n    appearance: textfield;\n  }\n\n  input[type=\"number\"]::-webkit-outer-spin-button,\n  input[type=\"number\"]::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n}\n\n.ccb-field-form-fields {\n  .vti__dropdown {\n    outline: none;\n  }\n\n  .vue-tel-input:focus-within {\n    border-color: var(--ccb-accent-color);\n  }\n\n  .vue-tel-input {\n    border: none;\n    box-shadow: none;\n    outline: none;\n\n    input {\n      border-radius: 0 var(--ccb-fields-border-radius)\n        var(--ccb-fields-border-radius) 0;\n    }\n  }\n  .vti__dropdown {\n    position: unset;\n    border: var(--ccb-fields-border) var(--ccb-fields-border-style)\n      var(--ccb-fields-border-color);\n    background-color: var(--ccb-fields-bg-color);\n    border-right: none;\n    border-radius: var(--ccb-fields-border-radius) 0 0\n      var(--ccb-fields-border-radius);\n  }\n\n  .vti__dropdown-arrow {\n    font-size: 10px;\n  }\n\n  .vti__phone {\n    outline: none;\n    &:focus,\n    &:active {\n      outline: none;\n      border-color: var(--ccb-fields-border-color);\n    }\n  }\n\n  .vti__dropdown-list {\n    z-index: 1000;\n    top: 42px;\n    box-sizing: border-box;\n    left: 0;\n    right: 0;\n    width: 100%;\n\n    .vti__dropdown-item {\n      padding: 10px 15px;\n      border-bottom: 1px solid #ddd;\n      font-size: 14px;\n\n      &:last-child {\n        border-bottom: none;\n      }\n    }\n  }\n}\n</style>\n"],"names":["Ed","Sd","e","d","_d","Fd","Td","Ze","re","m","M","L","xd","Ad","ie","Dd","Rd","Md","k","Ld","qe","n","B","r","$","kd","Ye","ae","Bd","u","o","s","i","t","w","se","Gd","jd","O","Ud","Hd","Vd","Kd","Wd","zd","V","ce","Pe","Xd","H","$e","W","Ne","z","Zd","Yd","we","qd","d0","Je","Ie","Jd","Ee","e0","Qd","t0","fe","n0","r0","x","Qe","y","X","Z","Y","F","i0","a0","$0","o0","u0","l0","s0","Se","c0","f0","p0","h0","y0","_e","Fe","g0","pe","ed","C0","dd","I","O0","P0","xe","N0","he","de","w0","I0","E0","S0","_0","F0","T0","x0","A0","D0","R0","Ae","De","Re","M0","Me","L0","K","te","B0","k0","Le","ke","G0","j0","Be","U0","H0","K0","V0","W0","z0","X0","oe","Z0","Y0","q0","J0","Q0","et","Ge","dt","nt","td","rt","je","it","at","ue","$t","ot","ut","lt","st","Ue","le","ct","ft","pt","ht","yt","gt","mt","vt","Ct","Pt","Ot","bt","He","Ve","Nt","wt","Ke","It","Et","St","xt","Tt","Ft","_t","We","At","ze","Xe","Dt","Rt","Mt","ne","Lt","kt","Bt","Gt","jt","Ut","Ht","Vt","Kt","Wt","zt","gd","ve","J","md","_","a","ad","be","ye","vd","yd","A","l","g","c","f","G","bd","id","S","nd","rd","q","$d","od","ud","ld","sd","cd","fd","ge","pd","hd","me","Cd","P","N","E","Q","D","R","Ce","T","j","ee","Od","Pd","Nd","wd","Id","emit","__emit","props","__props","onInput","useValidatedFormField","options"],"mappings":"+TACA,MAAMA,GAAK,CACT,CACE,6BACA,KACA,IACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,iBACA,KACA,IACA,EACA,CAAC,KAAK,CACP,EACD,CACE,UACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,WACA,KACA,IACA,EACA,CAAC,KAAK,CACP,EACD,CACE,sBACA,KACA,IACA,EACA,CAAC,KAAK,CACP,EACD,CACE,YACA,KACA,IACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,YACA,KACA,KACA,CACD,EACD,CACE,uBACA,KACA,IACD,EACD,CACE,0BACA,KACA,KACD,EACD,CACE,UACA,KACA,IACA,EACA,CAAC,KAAK,CACP,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,wBACA,KACA,KACD,EACD,CACE,WACA,KACA,IACA,EACA,CAAC,KAAK,CACP,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,mBACA,KACA,IACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,UACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,iBACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,+CACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,kBACA,KACA,IACD,EACD,CACE,iCACA,KACA,KACD,EACD,CACE,yBACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,SACA,KACA,KACD,EACD,CACE,sBACA,KACA,KACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,sBACA,KACA,KACD,EACD,CACE,SACA,KACA,IACA,EACA,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,CAC1X,EACD,CACE,0BACA,KACA,KACD,EACD,CACE,wBACA,KACA,MACA,EACA,CAAC,IAAK,IAAK,GAAG,CACf,EACD,CACE,iBACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,uDACA,KACA,KACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,QACA,KACA,IACD,EACD,CACE,aACA,KACA,IACD,EACD,CACE,mBACA,KACA,KACA,EACA,CAAC,OAAO,CACT,EACD,CACE,0BACA,KACA,KACA,EACA,CAAC,OAAO,CACT,EACD,CACE,WACA,KACA,IACD,EACD,CACE,yBACA,KACA,KACD,EACD,CACE,iDACA,KACA,KACD,EACD,CACE,uCACA,KACA,KACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,OACA,KACA,IACD,EACD,CACE,UACA,KACA,MACA,CACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,mCACA,KACA,KACD,EACD,CACE,oBACA,KACA,IACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,WACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,4CACA,KACA,IACA,EACA,CAAC,MAAO,MAAO,KAAK,CACrB,EACD,CACE,UACA,KACA,KACD,EACD,CACE,iBACA,KACA,IACD,EACD,CACE,cACA,KACA,KACD,EACD,CACE,wCACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,oCACA,KACA,KACD,EACD,CACE,0BACA,KACA,KACD,EACD,CACE,OACA,KACA,KACD,EACD,CACE,kBACA,KACA,MACA,CACD,EACD,CACE,SACA,KACA,IACD,EACD,CACE,mCACA,KACA,KACD,EACD,CACE,yCACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,wBACA,KACA,IACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,YACA,KACA,KACD,EACD,CACE,kBACA,KACA,IACD,EACD,CACE,+BACA,KACA,KACD,EACD,CACE,UACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,aACA,KACA,MACA,CACD,EACD,CACE,OACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,YACA,KACA,KACD,EACD,CACE,WACA,KACA,KACA,EACA,CAAC,OAAQ,OAAQ,OAAQ,MAAM,CAChC,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,+BACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,iBACA,KACA,KACD,EACD,CACE,yBACA,KACA,IACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,eACA,KACA,IACD,EACD,CACE,YACA,KACA,IACD,EACD,CACE,kBACA,KACA,IACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,cACA,KACA,KACA,EACA,CAAC,OAAQ,QAAS,OAAQ,OAAQ,MAAM,CACzC,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,iBACA,KACA,KACA,CACD,EACD,CACE,UACA,KACA,IACA,EACA,CAAC,MAAO,KAAK,CACd,EACD,CACE,aACA,KACA,IACD,EACD,CACE,SACA,KACA,KACA,EACA,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAM,CAChD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,yBACA,KACA,IACA,EACA,CAAC,KAAM,GAAG,CACX,EACD,CACE,QACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,0BACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,sBACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,4BACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,WACA,KACA,IACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,OACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,4BACA,KACA,KACD,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,UACA,KACA,MACA,EACA,CAAC,MAAO,KAAK,CACd,EACD,CACE,kBACA,KACA,IACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,8BACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,yBACA,KACA,KACD,EACD,CACE,aACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,sBACA,KACA,MACA,CACD,EACD,CACE,0BACA,KACA,KACD,EACD,CACE,2BACA,KACA,IACD,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,0BACA,KACA,IACD,EACD,CACE,qCACA,KACA,KACD,EACD,CACE,cACA,KACA,IACD,EACD,CACE,YACA,KACA,KACD,EACD,CACE,gBACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,OACA,KACA,KACD,EACD,CACE,iBACA,KACA,KACD,EACD,CACE,+BACA,KACA,KACD,EACD,CACE,uCACA,KACA,KACD,EACD,CACE,2BACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,iBACA,KACA,KACA,CACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,wBACA,KACA,IACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,wBACA,KACA,KACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,cACA,KACA,IACD,EACD,CACE,cACA,KACA,IACD,EACD,CACE,kBACA,KACA,IACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,cACA,KACA,IACA,EACA,CAAC,MAAO,KAAK,CACd,EACD,CACE,iBACA,KACA,KACD,EACD,CACE,uBACA,KACA,MACA,CACD,EACD,CACE,oBACA,KACA,IACD,EACD,CACE,kBACA,KACA,IACA,CACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,mBACA,KACA,MACA,CACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,wBACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,cACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,iDACA,KACA,MACA,CACD,EACD,CACE,uDACA,KACA,KACD,EACD,CACE,mCACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,QACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,8CACA,KACA,KACD,EACD,CACE,6CACA,KACA,KACD,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,YACA,KACA,IACD,EACD,CACE,eACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,kBACA,KACA,KACD,EACD,CACE,uBACA,KACA,KACD,EACD,CACE,eACA,KACA,IACD,EACD,CACE,qBACA,KACA,IACD,EACD,CACE,gCACA,KACA,KACD,EACD,CACE,iBACA,KACA,IACD,EACD,CACE,0BACA,KACA,IACD,EACD,CACE,qBACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,yBACA,KACA,KACA,EACA,CAAC,IAAI,CACN,EACD,CACE,mBACA,KACA,IACD,EACD,CACE,wBACA,KACA,IACD,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,cACA,KACA,KACD,EACD,CACE,aACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,iBACA,KACA,IACD,EACD,CACE,cACA,KACA,KACD,EACD,CACE,OACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,QACA,KACA,KACD,EACD,CACE,sBACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,mBACA,KACA,IACD,EACD,CACE,eACA,KACA,KACD,EACD,CACE,2BACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,SACA,KACA,KACD,EACD,CACE,sBACA,KACA,IACA,GACA,CAAC,KAAK,CACP,EACD,CACE,SACA,KACA,KACD,EACD,CACE,oBACA,KACA,KACD,EACD,CACE,qDACA,KACA,KACD,EACD,CACE,iBACA,KACA,KACA,CACD,EACD,CACE,gBACA,KACA,IACA,CACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,2BACA,KACA,KACD,EACD,CACE,UACA,KACA,KACD,EACD,CACE,oCACA,KACA,KACA,EACA,CAAC,OAAO,CACT,EACD,CACE,YACA,KACA,IACD,EACD,CACE,qBACA,KACA,IACD,EACD,CACE,uCACA,KACA,KACD,EACD,CACE,sCACA,KACA,MACA,EACA,CAAC,OAAQ,MAAM,CAChB,EACD,CACE,mBACA,KACA,KACD,EACD,CACE,SACA,KACA,KACD,EACD,CACE,WACA,KACA,KACD,EACD,CACE,gBACA,KACA,MACA,EACA,CAAC,IAAI,CACT,CACA,EAAGC,GAAKD,GAAG,IAAI,CAAC,CAACE,EAAGC,EAAG,EAAG,EAAI,EAAG,EAAI,IAAI,KAAO,CAC9C,KAAMD,EACN,KAAMC,EAAE,YAAa,EACrB,SAAU,EACV,SAAU,EACV,UAAW,CACb,EAAE,EACF,SAASC,IAAK,CACZ,OAAO,MAAM,oBAAoB,EAAE,KAAMF,GAAMA,EAAE,KAAM,CAAA,EAAE,KAAMA,GAAM,CACnE,MAAMC,GAAKD,GAAK,IAAI,SAAU,EAC9B,GAAI,CAACC,GAAKA,EAAE,CAAC,IAAM,IACjB,MAAM,IAAI,MAAM,6BAA6B,EAC/C,OAAOA,EAAE,OAAO,EAAG,CAAC,CACxB,CAAG,CACH,CACA,SAASE,GAAGH,EAAGC,EAAG,CAChB,GAAID,EAAE,kBACJA,EAAE,MAAK,EAAIA,EAAE,kBAAkBC,EAAGA,CAAC,UAC5B,oBAAqBD,GAAK,OAAOA,EAAE,iBAAmB,WAAY,CACzE,MAAM,EAAIA,EAAE,gBAAiB,EAC7B,EAAE,SAAS,EAAE,EAAG,EAAE,QAAQ,YAAaC,CAAC,EAAG,EAAE,UAAU,YAAaA,CAAC,EAAG,EAAE,OAAQ,CACtF,CACA,CACA,MAAMG,GAAK,CACT,CACE,KAAM,eACN,KAAM,MACN,QAASL,GACT,YAAa,gGACb,OAAQ,EACT,EACD,CACE,KAAM,aACN,KAAM,QACN,QAAS,GACT,YAAa,sEACb,OAAQ,EACT,EACD,CACE,KAAM,iBACN,KAAM,CAAC,QAAS,MAAM,EACtB,QAAS,GACT,YAAa,qCACb,OAAQ,EACT,EACD,CACE,KAAM,iBACN,QAAS,GACT,KAAM,CAAC,OAAQ,MAAM,EACrB,YAAa,mGACb,OAAQ,EACT,EACD,CACE,KAAM,WACN,QAAS,GACT,KAAM,QACN,YAAa,0EACb,OAAQ,EACT,EACD,CACE,KAAM,qBACN,QAAS,GACT,KAAM,QACN,YAAa,uDACb,OAAQ,EACT,EACD,CACE,KAAM,kBACN,KAAM,OACN,YAAa,kCACb,OAAQ,EACT,EACD,CACE,KAAM,2BACN,QAAS,GACT,KAAM,QACN,YAAa,mBACb,OAAQ,EACT,EACD,CACE,KAAM,qCACN,QAAS,GACT,KAAM,QACN,YAAa,sCACb,OAAQ,EACT,EACD,CACE,KAAM,0CACN,QAAS,GACT,KAAM,QACN,YAAa,2CACb,OAAQ,EACT,EACD,CACE,KAAM,4BACN,QAAS,GACT,KAAM,QACN,YAAa,gDACb,OAAQ,EACT,EACD,CACE,KAAM,gCACN,QAAS,GACT,KAAM,QACN,YAAa,0BACb,OAAQ,EACT,EACD,CACE,KAAM,uCACN,QAAS,GACT,KAAM,OACN,YAAa,iCACb,OAAQ,EACT,EACD,CACE,KAAM,2BACN,QAAS,EACT,KAAM,OACN,YAAa,kDACb,OAAQ,EACT,EACD,CACE,KAAM,mBACN,QAAS,CAAE,EACX,KAAM,MACN,YAAa,sDACb,OAAQ,EACT,EACD,CACE,KAAM,eACN,KAAM,OACN,YAAa,+BACb,OAAQ,EACT,EACD,CACE,KAAM,4BACN,KAAM,OACN,QAAS,KACT,YAAa,mDACb,OAAQ,EACT,EACD,CACE,KAAM,yBACN,KAAM,QACN,QAAS,GACT,YAAa,gDACb,OAAQ,EACT,EAQD,CACE,KAAM,gCACN,QAAS,GACT,KAAM,OACN,YAAa,uDACb,OAAQ,EACT,EACD,CACE,KAAM,kBACN,QAAS,GACT,KAAM,OACN,YAAa,yCACb,OAAQ,EACT,EACD,CACE,KAAM,yBACN,QAAS,GACT,KAAM,OACN,YAAa,gDACb,OAAQ,EACT,EACD,CACE,KAAM,oBACN,QAAS,YACT,KAAM,OACN,YAAa,2CACb,OAAQ,EACT,EACD,CACE,KAAM,4BACN,QAAS,GACT,KAAM,QACN,YAAa,0BACb,OAAQ,EACT,EACD,CACE,KAAM,2BACN,QAAS,uBACT,KAAM,OACN,YAAa,4BACb,OAAQ,EACT,EACD,CACE,KAAM,w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C,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,GAAI,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,KAAM,IAAI,EAAG,IAAK,CAAC,IAAI,EAAG,IAAK,CAAC,IAA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","x_google_ignoreList":[0]}